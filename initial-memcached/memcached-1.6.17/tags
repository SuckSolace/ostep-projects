!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
1	vendor/lua/doc/manual.html	/^<h1>1 &ndash; <a name="1">Introduction<\/a><\/h1>$/;"	a
2	vendor/lua/doc/manual.html	/^<h1>2 &ndash; <a name="2">Basic Concepts<\/a><\/h1>$/;"	a
2.1	vendor/lua/doc/manual.html	/^<h2>2.1 &ndash; <a name="2.1">Values and Types<\/a><\/h2>$/;"	a
2.2	vendor/lua/doc/manual.html	/^<h2>2.2 &ndash; <a name="2.2">Environments and the Global Environment<\/a><\/h2>$/;"	a
2.3	vendor/lua/doc/manual.html	/^<h2>2.3 &ndash; <a name="2.3">Error Handling<\/a><\/h2>$/;"	a
2.4	vendor/lua/doc/manual.html	/^<h2>2.4 &ndash; <a name="2.4">Metatables and Metamethods<\/a><\/h2>$/;"	a
2.5	vendor/lua/doc/manual.html	/^<h2>2.5 &ndash; <a name="2.5">Garbage Collection<\/a><\/h2>$/;"	a
2.5.1	vendor/lua/doc/manual.html	/^<h3>2.5.1 &ndash; <a name="2.5.1">Incremental Garbage Collection<\/a><\/h3>$/;"	a
2.5.2	vendor/lua/doc/manual.html	/^<h3>2.5.2 &ndash; <a name="2.5.2">Generational Garbage Collection<\/a><\/h3>$/;"	a
2.5.3	vendor/lua/doc/manual.html	/^<h3>2.5.3 &ndash; <a name="2.5.3">Garbage-Collection Metamethods<\/a><\/h3>$/;"	a
2.5.4	vendor/lua/doc/manual.html	/^<h3>2.5.4 &ndash; <a name="2.5.4">Weak Tables<\/a><\/h3>$/;"	a
2.6	vendor/lua/doc/manual.html	/^<h2>2.6 &ndash; <a name="2.6">Coroutines<\/a><\/h2>$/;"	a
3	vendor/lua/doc/manual.html	/^<h1>3 &ndash; <a name="3">The Language<\/a><\/h1>$/;"	a
3.1	vendor/lua/doc/manual.html	/^<h2>3.1 &ndash; <a name="3.1">Lexical Conventions<\/a><\/h2>$/;"	a
3.2	vendor/lua/doc/manual.html	/^<h2>3.2 &ndash; <a name="3.2">Variables<\/a><\/h2>$/;"	a
3.3	vendor/lua/doc/manual.html	/^<h2>3.3 &ndash; <a name="3.3">Statements<\/a><\/h2>$/;"	a
3.3.1	vendor/lua/doc/manual.html	/^<h3>3.3.1 &ndash; <a name="3.3.1">Blocks<\/a><\/h3>$/;"	a
3.3.2	vendor/lua/doc/manual.html	/^<h3>3.3.2 &ndash; <a name="3.3.2">Chunks<\/a><\/h3>$/;"	a
3.3.3	vendor/lua/doc/manual.html	/^<h3>3.3.3 &ndash; <a name="3.3.3">Assignment<\/a><\/h3>$/;"	a
3.3.4	vendor/lua/doc/manual.html	/^<h3>3.3.4 &ndash; <a name="3.3.4">Control Structures<\/a><\/h3><p>$/;"	a
3.3.5	vendor/lua/doc/manual.html	/^<h3>3.3.5 &ndash; <a name="3.3.5">For Statement<\/a><\/h3>$/;"	a
3.3.6	vendor/lua/doc/manual.html	/^<h3>3.3.6 &ndash; <a name="3.3.6">Function Calls as Statements<\/a><\/h3><p>$/;"	a
3.3.7	vendor/lua/doc/manual.html	/^<h3>3.3.7 &ndash; <a name="3.3.7">Local Declarations<\/a><\/h3><p>$/;"	a
3.3.8	vendor/lua/doc/manual.html	/^<h3>3.3.8 &ndash; <a name="3.3.8">To-be-closed Variables<\/a><\/h3>$/;"	a
3.4	vendor/lua/doc/manual.html	/^<h2>3.4 &ndash; <a name="3.4">Expressions<\/a><\/h2>$/;"	a
3.4.1	vendor/lua/doc/manual.html	/^<h3>3.4.1 &ndash; <a name="3.4.1">Arithmetic Operators<\/a><\/h3><p>$/;"	a
3.4.10	vendor/lua/doc/manual.html	/^<h3>3.4.10 &ndash; <a name="3.4.10">Function Calls<\/a><\/h3><p>$/;"	a
3.4.11	vendor/lua/doc/manual.html	/^<h3>3.4.11 &ndash; <a name="3.4.11">Function Definitions<\/a><\/h3>$/;"	a
3.4.2	vendor/lua/doc/manual.html	/^<h3>3.4.2 &ndash; <a name="3.4.2">Bitwise Operators<\/a><\/h3><p>$/;"	a
3.4.3	vendor/lua/doc/manual.html	/^<h3>3.4.3 &ndash; <a name="3.4.3">Coercions and Conversions<\/a><\/h3><p>$/;"	a
3.4.4	vendor/lua/doc/manual.html	/^<h3>3.4.4 &ndash; <a name="3.4.4">Relational Operators<\/a><\/h3><p>$/;"	a
3.4.5	vendor/lua/doc/manual.html	/^<h3>3.4.5 &ndash; <a name="3.4.5">Logical Operators<\/a><\/h3><p>$/;"	a
3.4.6	vendor/lua/doc/manual.html	/^<h3>3.4.6 &ndash; <a name="3.4.6">Concatenation<\/a><\/h3><p>$/;"	a
3.4.7	vendor/lua/doc/manual.html	/^<h3>3.4.7 &ndash; <a name="3.4.7">The Length Operator<\/a><\/h3>$/;"	a
3.4.8	vendor/lua/doc/manual.html	/^<h3>3.4.8 &ndash; <a name="3.4.8">Precedence<\/a><\/h3><p>$/;"	a
3.4.9	vendor/lua/doc/manual.html	/^<h3>3.4.9 &ndash; <a name="3.4.9">Table Constructors<\/a><\/h3><p>$/;"	a
3.5	vendor/lua/doc/manual.html	/^<h2>3.5 &ndash; <a name="3.5">Visibility Rules<\/a><\/h2>$/;"	a
4	vendor/lua/doc/manual.html	/^<h1>4 &ndash; <a name="4">The Application Program Interface<\/a><\/h1>$/;"	a
4.1	vendor/lua/doc/manual.html	/^<h2>4.1 &ndash; <a name="4.1">The Stack<\/a><\/h2>$/;"	a
4.1.1	vendor/lua/doc/manual.html	/^<h3>4.1.1 &ndash; <a name="4.1.1">Stack Size<\/a><\/h3>$/;"	a
4.1.2	vendor/lua/doc/manual.html	/^<h3>4.1.2 &ndash; <a name="4.1.2">Valid and Acceptable Indices<\/a><\/h3>$/;"	a
4.1.3	vendor/lua/doc/manual.html	/^<h3>4.1.3 &ndash; <a name="4.1.3">Pointers to strings<\/a><\/h3>$/;"	a
4.2	vendor/lua/doc/manual.html	/^<h2>4.2 &ndash; <a name="4.2">C Closures<\/a><\/h2>$/;"	a
4.3	vendor/lua/doc/manual.html	/^<h2>4.3 &ndash; <a name="4.3">Registry<\/a><\/h2>$/;"	a
4.4	vendor/lua/doc/manual.html	/^<h2>4.4 &ndash; <a name="4.4">Error Handling in C<\/a><\/h2>$/;"	a
4.4.1	vendor/lua/doc/manual.html	/^<h3>4.4.1 &ndash; <a name="4.4.1">Status Codes<\/a><\/h3>$/;"	a
4.5	vendor/lua/doc/manual.html	/^<h2>4.5 &ndash; <a name="4.5">Handling Yields in C<\/a><\/h2>$/;"	a
4.6	vendor/lua/doc/manual.html	/^<h2>4.6 &ndash; <a name="4.6">Functions and Types<\/a><\/h2>$/;"	a
4.7	vendor/lua/doc/manual.html	/^<h2>4.7 &ndash; <a name="4.7">The Debug Interface<\/a><\/h2>$/;"	a
5	vendor/lua/doc/manual.html	/^<h1>5 &ndash; <a name="5">The Auxiliary Library<\/a><\/h1>$/;"	a
5.1	vendor/lua/doc/manual.html	/^<h2>5.1 &ndash; <a name="5.1">Functions and Types<\/a><\/h2>$/;"	a
6	vendor/lua/doc/manual.html	/^<h1>6 &ndash; <a name="6">The Standard Libraries<\/a><\/h1>$/;"	a
6.1	vendor/lua/doc/manual.html	/^<h2>6.1 &ndash; <a name="6.1">Basic Functions<\/a><\/h2>$/;"	a
6.10	vendor/lua/doc/manual.html	/^<h2>6.10 &ndash; <a name="6.10">The Debug Library<\/a><\/h2>$/;"	a
6.2	vendor/lua/doc/manual.html	/^<h2>6.2 &ndash; <a name="6.2">Coroutine Manipulation<\/a><\/h2>$/;"	a
6.3	vendor/lua/doc/manual.html	/^<h2>6.3 &ndash; <a name="6.3">Modules<\/a><\/h2>$/;"	a
6.4	vendor/lua/doc/manual.html	/^<h2>6.4 &ndash; <a name="6.4">String Manipulation<\/a><\/h2>$/;"	a
6.4.1	vendor/lua/doc/manual.html	/^<h3>6.4.1 &ndash; <a name="6.4.1">Patterns<\/a><\/h3>$/;"	a
6.4.2	vendor/lua/doc/manual.html	/^<h3>6.4.2 &ndash; <a name="6.4.2">Format Strings for Pack and Unpack<\/a><\/h3>$/;"	a
6.5	vendor/lua/doc/manual.html	/^<h2>6.5 &ndash; <a name="6.5">UTF-8 Support<\/a><\/h2>$/;"	a
6.6	vendor/lua/doc/manual.html	/^<h2>6.6 &ndash; <a name="6.6">Table Manipulation<\/a><\/h2>$/;"	a
6.7	vendor/lua/doc/manual.html	/^<h2>6.7 &ndash; <a name="6.7">Mathematical Functions<\/a><\/h2>$/;"	a
6.8	vendor/lua/doc/manual.html	/^<h2>6.8 &ndash; <a name="6.8">Input and Output Facilities<\/a><\/h2>$/;"	a
6.9	vendor/lua/doc/manual.html	/^<h2>6.9 &ndash; <a name="6.9">Operating System Facilities<\/a><\/h2>$/;"	a
7	vendor/lua/doc/manual.html	/^<h1>7 &ndash; <a name="7">Lua Standalone<\/a><\/h1>$/;"	a
8	vendor/lua/doc/manual.html	/^<h1>8 &ndash; <a name="8">Incompatibilities with the Previous Version<\/a><\/h1>$/;"	a
8.1	vendor/lua/doc/manual.html	/^<h2>8.1 &ndash; <a name="8.1">Incompatibilities in the Language<\/a><\/h2>$/;"	a
8.2	vendor/lua/doc/manual.html	/^<h2>8.2 &ndash; <a name="8.2">Incompatibilities in the Libraries<\/a><\/h2>$/;"	a
8.3	vendor/lua/doc/manual.html	/^<h2>8.3 &ndash; <a name="8.3">Incompatibilities in the API<\/a><\/h2>$/;"	a
9	vendor/lua/doc/manual.html	/^<h1>9 &ndash; <a name="9">The Complete Syntax of Lua<\/a><\/h1>$/;"	a
ABSLINEINFO	vendor/lua/src/ldebug.h	27;"	d
ABSTKEYCONSTANT	vendor/lua/src/lobject.h	208;"	d
ACC_NB	xxhash.h	3518;"	d
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' aclocal-1.16$/;"	m
ACLOCAL	doc/Makefile	/^ACLOCAL = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' aclocal-1.16$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	doc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADD_STAT	memcached.h	/^typedef void (*ADD_STAT)(const char *key, const uint16_t klen,$/;"	t
AGEBITS	vendor/lua/src/lgc.h	114;"	d
ALL	vendor/lua/src/Makefile	/^ALL= all$/;"	m
ALL_A	vendor/lua/src/Makefile	/^ALL_A= $(LUA_A)$/;"	m
ALL_O	vendor/lua/src/Makefile	/^ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)$/;"	m
ALL_T	vendor/lua/src/Makefile	/^ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)$/;"	m
ALPHABIT	vendor/lua/src/lctype.h	39;"	d
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	doc/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	doc/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DISTCHECK_DVI_TARGET	Makefile	/^AM_DISTCHECK_DVI_TARGET = dvi$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	doc/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	doc/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	doc/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
APPEND_NUM_FMT_STAT	memcached.h	160;"	d
APPEND_NUM_STAT	memcached.h	166;"	d
APPEND_STAT	memcached.h	155;"	d
AR	vendor/lua/src/Makefile	/^AR= ar rcu$/;"	m
AUTHFILE_H	authfile.h	2;"	d
AUTHFILE_MALFORMED	authfile.h	/^    AUTHFILE_MALFORMED,$/;"	e	enum:authfile_ret
AUTHFILE_OK	authfile.h	/^    AUTHFILE_OK = 0,$/;"	e	enum:authfile_ret
AUTHFILE_OOM	authfile.h	/^    AUTHFILE_OOM,$/;"	e	enum:authfile_ret
AUTHFILE_OPENFAIL	authfile.h	/^    AUTHFILE_OPENFAIL,$/;"	e	enum:authfile_ret
AUTHFILE_STATFAIL	authfile.h	/^    AUTHFILE_STATFAIL, \/\/ not likely, but just to be sure$/;"	e	enum:authfile_ret
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' autoconf$/;"	m
AUTOCONF	doc/Makefile	/^AUTOCONF = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' autoheader$/;"	m
AUTOHEADER	doc/Makefile	/^AUTOHEADER = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' automake-1.16$/;"	m
AUTOMAKE	doc/Makefile	/^AUTOMAKE = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' automake-1.16$/;"	m
AWAIT_ANY	proxy.h	/^    AWAIT_ANY, \/\/ any response, including errors,$/;"	e	enum:mcp_await_e
AWAIT_FIRST	proxy.h	/^    AWAIT_FIRST, \/\/ return the result from the first pool$/;"	e	enum:mcp_await_e
AWAIT_GOOD	proxy.h	/^    AWAIT_GOOD = 0, \/\/ looks for OK + NOT MISS$/;"	e	enum:mcp_await_e
AWAIT_OK	proxy.h	/^    AWAIT_OK, \/\/ any non-error response$/;"	e	enum:mcp_await_e
AWK	Makefile	/^AWK = mawk$/;"	m
AWK	doc/Makefile	/^AWK = mawk$/;"	m
AbsLineInfo	vendor/lua/src/lobject.h	/^typedef struct AbsLineInfo {$/;"	s
AbsLineInfo	vendor/lua/src/lobject.h	/^} AbsLineInfo;$/;"	t	typeref:struct:AbsLineInfo
B	vendor/lua/src/lstrlib.c	/^  luaL_Buffer B;$/;"	m	struct:str_Writer	file:
BASE64_H	base64.h	10;"	d
BASE_O	vendor/lua/src/Makefile	/^BASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)$/;"	m
BASIC_STACK_SIZE	vendor/lua/src/lstate.h	140;"	d
BE_IOV_MAX	proxy.h	304;"	d
BE_IOV_MAX	proxy.h	306;"	d
BIG_CONSTANT	murmur3_hash.c	25;"	d	file:
BIG_CONSTANT	murmur3_hash.c	40;"	d	file:
BIN_MAX_EXTLEN	memcached.h	86;"	d
BIN_REQ_MAGIC	t/udp.t	/^use constant BIN_REQ_MAGIC    => 0x80;$/;"	c
BIN_RES_MAGIC	t/udp.t	/^use constant BIN_RES_MAGIC    => 0x81;$/;"	c
BIPBUFFER_H	bipbuffer.h	2;"	d
BITRAS	vendor/lua/src/lobject.h	718;"	d
BIT_ISCOLLECTABLE	vendor/lua/src/lobject.h	285;"	d
BLACKBIT	vendor/lua/src/lgc.h	77;"	d
BUFVFS	vendor/lua/src/lobject.c	390;"	d	file:
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = $(am__append_12)$/;"	m
BUILT_SOURCES	doc/Makefile	/^BUILT_SOURCES = $/;"	m
BYTE	xxhash.h	1433;"	d
BYTE_ORDER	md5.c	57;"	d	file:
BYTE_ORDER	md5.c	59;"	d	file:
BYTE_ORDER	md5.c	61;"	d	file:
BinOpr	vendor/lua/src/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	vendor/lua/src/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BlockCnt	vendor/lua/src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	vendor/lua/src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BuffFS	vendor/lua/src/lobject.c	/^typedef struct BuffFS {$/;"	s	file:
BuffFS	vendor/lua/src/lobject.c	/^} BuffFS;$/;"	t	typeref:struct:BuffFS	file:
CACHE_H	cache.h	3;"	d
CAP_POSITION	vendor/lua/src/lstrlib.c	355;"	d	file:
CAP_UNFINISHED	vendor/lua/src/lstrlib.c	354;"	d	file:
CA_CRT	t/lib/MemcachedTest.pm	/^use constant CA_CRT => "cacert.pem";$/;"	c
CC	Makefile	/^CC = gcc$/;"	m
CC	doc/Makefile	/^CC = gcc$/;"	m
CC	vendor/lua/src/Makefile	/^CC= gcc -std=gnu99$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	doc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CClosure	vendor/lua/src/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	vendor/lua/src/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CFLAGS	Makefile	/^CFLAGS = -g -O2 -pthread -pthread -Wall -Werror -pedantic -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls$/;"	m
CFLAGS	doc/Makefile	/^CFLAGS = -g -O2 -pthread -pthread -Wall -Werror -pedantic -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls$/;"	m
CFLAGS	vendor/lua/src/Makefile	/^CFLAGS= -O2 -Wall -Wextra -DLUA_COMPAT_5_3 $(SYSCFLAGS) $(MYCFLAGS)$/;"	m
CHUNK_ALIGN_BYTES	memcached.h	115;"	d
CIST_C	vendor/lua/src/lstate.h	206;"	d
CIST_CLSRET	vendor/lua/src/lstate.h	214;"	d
CIST_FIN	vendor/lua/src/lstate.h	212;"	d
CIST_FRESH	vendor/lua/src/lstate.h	207;"	d
CIST_HOOKED	vendor/lua/src/lstate.h	208;"	d
CIST_HOOKYIELD	vendor/lua/src/lstate.h	211;"	d
CIST_LEQ	vendor/lua/src/lstate.h	218;"	d
CIST_OAH	vendor/lua/src/lstate.h	205;"	d
CIST_RECST	vendor/lua/src/lstate.h	216;"	d
CIST_TAIL	vendor/lua/src/lstate.h	210;"	d
CIST_TRAN	vendor/lua/src/lstate.h	213;"	d
CIST_YPCALL	vendor/lua/src/lstate.h	209;"	d
CLEANFILES	Makefile	/^CLEANFILES = $(am__append_13) $(am__append_18)$/;"	m
CLEAR_LRU	items.h	6;"	d
CLIBS	vendor/lua/src/loadlib.c	/^static const char *const CLIBS = "_CLIBS";$/;"	v	file:
CLIENT_CRT	t/lib/MemcachedTest.pm	/^use constant CLIENT_CRT => "client_crt.pem";$/;"	c
CLIENT_KEY	t/lib/MemcachedTest.pm	/^use constant CLIENT_KEY => "client_key.pem";$/;"	c
CLOSEKTOP	vendor/lua/src/lfunc.h	47;"	d
CMCFLAGS	vendor/lua/src/Makefile	/^CMCFLAGS= $/;"	m
CMD_ADD	t/binary-extstore.t	/^use constant CMD_ADD        => 0x02;$/;"	c
CMD_ADD	t/binary-sasl.t	/^use constant CMD_ADD        => 0x02;$/;"	c
CMD_ADD	t/binary.t	/^use constant CMD_ADD        => 0x02;$/;"	c
CMD_ADD	t/udp.t	/^use constant CMD_ADD          => 0x02;$/;"	c
CMD_ADDQ	t/binary-extstore.t	/^use constant CMD_ADDQ       => 0x12;$/;"	c
CMD_ADDQ	t/binary-sasl.t	/^use constant CMD_ADDQ       => 0x12;$/;"	c
CMD_ADDQ	t/binary.t	/^use constant CMD_ADDQ       => 0x12;$/;"	c
CMD_ANY	proxy.h	/^    CMD_ANY, \/\/ override _all_ commands$/;"	e	enum:proxy_defines
CMD_ANY_STORAGE	proxy.h	/^    CMD_ANY_STORAGE, \/\/ override commands specific to key storage.$/;"	e	enum:proxy_defines
CMD_APPEND	t/binary-extstore.t	/^use constant CMD_APPEND     => 0x0E;$/;"	c
CMD_APPEND	t/binary-sasl.t	/^use constant CMD_APPEND     => 0x0E;$/;"	c
CMD_APPEND	t/binary.t	/^use constant CMD_APPEND     => 0x0E;$/;"	c
CMD_APPEND	t/udp.t	/^use constant CMD_APPEND       => 0x0E;$/;"	c
CMD_APPENDQ	t/binary-extstore.t	/^use constant CMD_APPENDQ    => 0x19;$/;"	c
CMD_APPENDQ	t/binary-sasl.t	/^use constant CMD_APPENDQ    => 0x19;$/;"	c
CMD_APPENDQ	t/binary.t	/^use constant CMD_APPENDQ    => 0x19;$/;"	c
CMD_DECR	t/binary-extstore.t	/^use constant CMD_DECR       => 0x06;$/;"	c
CMD_DECR	t/binary-sasl.t	/^use constant CMD_DECR       => 0x06;$/;"	c
CMD_DECR	t/binary.t	/^use constant CMD_DECR       => 0x06;$/;"	c
CMD_DECR	t/udp.t	/^use constant CMD_DECR         => 0x06;$/;"	c
CMD_DECREMENTQ	t/binary-extstore.t	/^use constant CMD_DECREMENTQ => 0x16;$/;"	c
CMD_DECREMENTQ	t/binary-sasl.t	/^use constant CMD_DECREMENTQ => 0x16;$/;"	c
CMD_DECREMENTQ	t/binary.t	/^use constant CMD_DECREMENTQ => 0x16;$/;"	c
CMD_DELETE	t/binary-extstore.t	/^use constant CMD_DELETE     => 0x04;$/;"	c
CMD_DELETE	t/binary-sasl.t	/^use constant CMD_DELETE     => 0x04;$/;"	c
CMD_DELETE	t/binary.t	/^use constant CMD_DELETE     => 0x04;$/;"	c
CMD_DELETE	t/udp.t	/^use constant CMD_DELETE       => 0x04;$/;"	c
CMD_DELETEQ	t/binary-extstore.t	/^use constant CMD_DELETEQ    => 0x14;$/;"	c
CMD_DELETEQ	t/binary-sasl.t	/^use constant CMD_DELETEQ    => 0x14;$/;"	c
CMD_DELETEQ	t/binary.t	/^use constant CMD_DELETEQ    => 0x14;$/;"	c
CMD_FIELDS	proxy.h	/^    CMD_FIELDS$/;"	e	enum:proxy_defines
CMD_FIELDS	proxy.h	83;"	d
CMD_FINAL	proxy.h	/^    CMD_FINAL, \/\/ end cap for convenience.$/;"	e	enum:proxy_defines
CMD_FLUSH	t/binary-extstore.t	/^use constant CMD_FLUSH      => 0x08;$/;"	c
CMD_FLUSH	t/binary-sasl.t	/^use constant CMD_FLUSH      => 0x08;$/;"	c
CMD_FLUSH	t/binary.t	/^use constant CMD_FLUSH      => 0x08;$/;"	c
CMD_FLUSHQ	t/binary-extstore.t	/^use constant CMD_FLUSHQ     => 0x18;$/;"	c
CMD_FLUSHQ	t/binary-sasl.t	/^use constant CMD_FLUSHQ     => 0x18;$/;"	c
CMD_FLUSHQ	t/binary.t	/^use constant CMD_FLUSHQ     => 0x18;$/;"	c
CMD_GAT	t/binary-extstore.t	/^use constant CMD_GAT        => 0x1D;$/;"	c
CMD_GAT	t/binary.t	/^use constant CMD_GAT        => 0x1D;$/;"	c
CMD_GATK	t/binary-extstore.t	/^use constant CMD_GATK       => 0x23;$/;"	c
CMD_GATK	t/binary.t	/^use constant CMD_GATK       => 0x23;$/;"	c
CMD_GATKQ	t/binary-extstore.t	/^use constant CMD_GATKQ      => 0x24;$/;"	c
CMD_GATKQ	t/binary.t	/^use constant CMD_GATKQ      => 0x24;$/;"	c
CMD_GATQ	t/binary-extstore.t	/^use constant CMD_GATQ       => 0x1E;$/;"	c
CMD_GATQ	t/binary.t	/^use constant CMD_GATQ       => 0x1E;$/;"	c
CMD_GET	t/binary-extstore.t	/^use constant CMD_GET        => 0x00;$/;"	c
CMD_GET	t/binary-sasl.t	/^use constant CMD_GET        => 0x00;$/;"	c
CMD_GET	t/binary.t	/^use constant CMD_GET        => 0x00;$/;"	c
CMD_GET	t/udp.t	/^use constant CMD_GET          => 0x00;$/;"	c
CMD_GETK	t/binary-extstore.t	/^use constant CMD_GETK       => 0x0C;$/;"	c
CMD_GETK	t/binary-sasl.t	/^use constant CMD_GETK       => 0x0C;$/;"	c
CMD_GETK	t/binary.t	/^use constant CMD_GETK       => 0x0C;$/;"	c
CMD_GETKQ	t/binary-extstore.t	/^use constant CMD_GETKQ      => 0x0D;$/;"	c
CMD_GETKQ	t/binary-sasl.t	/^use constant CMD_GETKQ      => 0x0D;$/;"	c
CMD_GETKQ	t/binary.t	/^use constant CMD_GETKQ      => 0x0D;$/;"	c
CMD_GETQ	t/binary-extstore.t	/^use constant CMD_GETQ       => 0x09;$/;"	c
CMD_GETQ	t/binary-sasl.t	/^use constant CMD_GETQ       => 0x09;$/;"	c
CMD_GETQ	t/binary.t	/^use constant CMD_GETQ       => 0x09;$/;"	c
CMD_INCR	t/binary-extstore.t	/^use constant CMD_INCR       => 0x05;$/;"	c
CMD_INCR	t/binary-sasl.t	/^use constant CMD_INCR       => 0x05;$/;"	c
CMD_INCR	t/binary.t	/^use constant CMD_INCR       => 0x05;$/;"	c
CMD_INCR	t/udp.t	/^use constant CMD_INCR         => 0x05;$/;"	c
CMD_INCREMENTQ	t/binary-extstore.t	/^use constant CMD_INCREMENTQ => 0x15;$/;"	c
CMD_INCREMENTQ	t/binary-sasl.t	/^use constant CMD_INCREMENTQ => 0x15;$/;"	c
CMD_INCREMENTQ	t/binary.t	/^use constant CMD_INCREMENTQ => 0x15;$/;"	c
CMD_NOOP	t/binary-extstore.t	/^use constant CMD_NOOP       => 0x0A;$/;"	c
CMD_NOOP	t/binary-sasl.t	/^use constant CMD_NOOP       => 0x0A;$/;"	c
CMD_NOOP	t/binary.t	/^use constant CMD_NOOP       => 0x0A;$/;"	c
CMD_PREPEND	t/binary-extstore.t	/^use constant CMD_PREPEND    => 0x0F;$/;"	c
CMD_PREPEND	t/binary-sasl.t	/^use constant CMD_PREPEND    => 0x0F;$/;"	c
CMD_PREPEND	t/binary.t	/^use constant CMD_PREPEND    => 0x0F;$/;"	c
CMD_PREPEND	t/udp.t	/^use constant CMD_PREPEND      => 0x0F;$/;"	c
CMD_PREPENDQ	t/binary-extstore.t	/^use constant CMD_PREPENDQ   => 0x1A;$/;"	c
CMD_PREPENDQ	t/binary-sasl.t	/^use constant CMD_PREPENDQ   => 0x1A;$/;"	c
CMD_PREPENDQ	t/binary.t	/^use constant CMD_PREPENDQ   => 0x1A;$/;"	c
CMD_QUIT	t/binary-extstore.t	/^use constant CMD_QUIT       => 0x07;$/;"	c
CMD_QUIT	t/binary-sasl.t	/^use constant CMD_QUIT       => 0x07;$/;"	c
CMD_QUIT	t/binary.t	/^use constant CMD_QUIT       => 0x07;$/;"	c
CMD_QUITQ	t/binary-extstore.t	/^use constant CMD_QUITQ      => 0x17;$/;"	c
CMD_QUITQ	t/binary-sasl.t	/^use constant CMD_QUITQ      => 0x17;$/;"	c
CMD_QUITQ	t/binary.t	/^use constant CMD_QUITQ      => 0x17;$/;"	c
CMD_REPLACE	t/binary-extstore.t	/^use constant CMD_REPLACE    => 0x03;$/;"	c
CMD_REPLACE	t/binary-sasl.t	/^use constant CMD_REPLACE    => 0x03;$/;"	c
CMD_REPLACE	t/binary.t	/^use constant CMD_REPLACE    => 0x03;$/;"	c
CMD_REPLACE	t/udp.t	/^use constant CMD_REPLACE      => 0x03;$/;"	c
CMD_REPLACEQ	t/binary-extstore.t	/^use constant CMD_REPLACEQ   => 0x13;$/;"	c
CMD_REPLACEQ	t/binary-sasl.t	/^use constant CMD_REPLACEQ   => 0x13;$/;"	c
CMD_REPLACEQ	t/binary.t	/^use constant CMD_REPLACEQ   => 0x13;$/;"	c
CMD_SASL_AUTH	t/binary-sasl.t	/^use constant CMD_SASL_AUTH          => 0x21;$/;"	c
CMD_SASL_LIST_MECHS	t/binary-sasl.t	/^use constant CMD_SASL_LIST_MECHS    => 0x20;$/;"	c
CMD_SASL_STEP	t/binary-sasl.t	/^use constant CMD_SASL_STEP          => 0x22;$/;"	c
CMD_SET	t/binary-extstore.t	/^use constant CMD_SET        => 0x01;$/;"	c
CMD_SET	t/binary-sasl.t	/^use constant CMD_SET        => 0x01;$/;"	c
CMD_SET	t/binary.t	/^use constant CMD_SET        => 0x01;$/;"	c
CMD_SET	t/udp.t	/^use constant CMD_SET          => 0x01;$/;"	c
CMD_SETQ	t/binary-extstore.t	/^use constant CMD_SETQ       => 0x11;$/;"	c
CMD_SETQ	t/binary-sasl.t	/^use constant CMD_SETQ       => 0x11;$/;"	c
CMD_SETQ	t/binary.t	/^use constant CMD_SETQ       => 0x11;$/;"	c
CMD_SIZE	proxy.h	/^    CMD_SIZE, \/\/ used to define array size for command hooks.$/;"	e	enum:proxy_defines
CMD_STAT	t/binary-extstore.t	/^use constant CMD_STAT       => 0x10;$/;"	c
CMD_STAT	t/binary-sasl.t	/^use constant CMD_STAT       => 0x10;$/;"	c
CMD_STAT	t/binary.t	/^use constant CMD_STAT       => 0x10;$/;"	c
CMD_TOUCH	t/binary-extstore.t	/^use constant CMD_TOUCH      => 0x1C;$/;"	c
CMD_TOUCH	t/binary.t	/^use constant CMD_TOUCH      => 0x1C;$/;"	c
CMD_TYPE_GENERIC	proxy.h	/^    CMD_TYPE_GENERIC = 0,$/;"	e	enum:proxy_cmd_types
CMD_TYPE_GET	proxy.h	/^    CMD_TYPE_GET, \/\/ get\/gets\/gat\/gats$/;"	e	enum:proxy_cmd_types
CMD_TYPE_META	proxy.h	/^    CMD_TYPE_META, \/\/ m*'s.$/;"	e	enum:proxy_cmd_types
CMD_VERSION	t/binary-extstore.t	/^use constant CMD_VERSION    => 0x0B;$/;"	c
CMD_VERSION	t/binary-sasl.t	/^use constant CMD_VERSION    => 0x0B;$/;"	c
CMD_VERSION	t/binary.t	/^use constant CMD_VERSION    => 0x0B;$/;"	c
COLD_LRU	items.h	3;"	d
COMMAND_TOKEN	proto_text.c	236;"	d	file:
COMMENT	vendor/lua/src/luac.c	330;"	d	file:
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	doc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	doc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	doc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONNS_PER_SLICE	memcached.c	308;"	d	file:
CORE_O	vendor/lua/src/Makefile	/^CORE_O=	lapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o lundump.o lvm.o lzio.o$/;"	m
COS_DEAD	vendor/lua/src/lcorolib.c	118;"	d	file:
COS_NORM	vendor/lua/src/lcorolib.c	120;"	d	file:
COS_RUN	vendor/lua/src/lcorolib.c	117;"	d	file:
COS_YIELD	vendor/lua/src/lcorolib.c	119;"	d	file:
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	doc/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = -I\/usr\/local\/lib $/;"	m
CPPFLAGS	doc/Makefile	/^CPPFLAGS = -I\/usr\/local\/lib $/;"	m
CQ	thread.c	/^typedef struct conn_queue CQ;$/;"	t	typeref:struct:conn_queue	file:
CQ_ITEM	thread.c	/^typedef struct conn_queue_item CQ_ITEM;$/;"	t	typeref:struct:conn_queue_item	file:
CRAWLER_AUTOEXPIRE	memcached.h	/^    CRAWLER_AUTOEXPIRE=0, CRAWLER_EXPIRED, CRAWLER_METADUMP$/;"	e	enum:crawler_run_type
CRAWLER_BADCLASS	crawler.h	/^    CRAWLER_OK=0, CRAWLER_RUNNING, CRAWLER_BADCLASS, CRAWLER_NOTSTARTED, CRAWLER_ERROR$/;"	e	enum:crawler_result_type
CRAWLER_ERROR	crawler.h	/^    CRAWLER_OK=0, CRAWLER_RUNNING, CRAWLER_BADCLASS, CRAWLER_NOTSTARTED, CRAWLER_ERROR$/;"	e	enum:crawler_result_type
CRAWLER_EXPIRED	memcached.h	/^    CRAWLER_AUTOEXPIRE=0, CRAWLER_EXPIRED, CRAWLER_METADUMP$/;"	e	enum:crawler_run_type
CRAWLER_H	crawler.h	2;"	d
CRAWLER_METADUMP	memcached.h	/^    CRAWLER_AUTOEXPIRE=0, CRAWLER_EXPIRED, CRAWLER_METADUMP$/;"	e	enum:crawler_run_type
CRAWLER_NOTSTARTED	crawler.h	/^    CRAWLER_OK=0, CRAWLER_RUNNING, CRAWLER_BADCLASS, CRAWLER_NOTSTARTED, CRAWLER_ERROR$/;"	e	enum:crawler_result_type
CRAWLER_NOWAIT	crawler.h	32;"	d
CRAWLER_OK	crawler.h	/^    CRAWLER_OK=0, CRAWLER_RUNNING, CRAWLER_BADCLASS, CRAWLER_NOTSTARTED, CRAWLER_ERROR$/;"	e	enum:crawler_result_type
CRAWLER_RUNNING	crawler.h	/^    CRAWLER_OK=0, CRAWLER_RUNNING, CRAWLER_BADCLASS, CRAWLER_NOTSTARTED, CRAWLER_ERROR$/;"	e	enum:crawler_result_type
CRAWLER_WAIT	crawler.h	31;"	d
CRC32C_H	crc32c.h	2;"	d
CREATE_ABCk	vendor/lua/src/lopcodes.h	156;"	d
CREATE_ABx	vendor/lua/src/lopcodes.h	162;"	d
CREATE_Ax	vendor/lua/src/lopcodes.h	166;"	d
CREATE_sJ	vendor/lua/src/lopcodes.h	169;"	d
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CSCOPE	doc/Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	doc/Makefile	/^CTAGS = ctags$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	doc/Makefile	/^CYGPATH_W = echo$/;"	m
CallInfo	vendor/lua/src/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	vendor/lua/src/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallS	vendor/lua/src/lapi.c	/^struct CallS {  \/* data to 'f_call' *\/$/;"	s	file:
CloseP	vendor/lua/src/ldo.c	/^struct CloseP {$/;"	s	file:
Closure	vendor/lua/src/lobject.h	/^typedef union Closure {$/;"	u
Closure	vendor/lua/src/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	vendor/lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure
ClosureHeader	vendor/lua/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure
ClosureHeader	vendor/lua/src/lobject.h	631;"	d
CommonHeader	vendor/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:GCObject
CommonHeader	vendor/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto
CommonHeader	vendor/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:TString
CommonHeader	vendor/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Table
CommonHeader	vendor/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata
CommonHeader	vendor/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata0
CommonHeader	vendor/lua/src/lobject.h	/^  CommonHeader;$/;"	m	struct:UpVal
CommonHeader	vendor/lua/src/lobject.h	275;"	d
CommonHeader	vendor/lua/src/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State
ConsControl	vendor/lua/src/lparser.c	/^typedef struct ConsControl {$/;"	s	file:
ConsControl	vendor/lua/src/lparser.c	/^} ConsControl;$/;"	t	typeref:struct:ConsControl	file:
DEBUG_REFCNT	items.c	151;"	d	file:
DEFAULT_BUCKET_SIZE	proxy_ring_hash.c	35;"	d	file:
DEFAULT_HASH_BULK_MOVE	assoc.c	190;"	d	file:
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	doc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DELTA_ITEM_CAS_MISMATCH	memcached.h	/^    OK, NON_NUMERIC, EOM, DELTA_ITEM_NOT_FOUND, DELTA_ITEM_CAS_MISMATCH$/;"	e	enum:delta_result_type
DELTA_ITEM_NOT_FOUND	memcached.h	/^    OK, NON_NUMERIC, EOM, DELTA_ITEM_NOT_FOUND, DELTA_ITEM_CAS_MISMATCH$/;"	e	enum:delta_result_type
DENY_ACTION	linux_priv.c	58;"	d	file:
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	doc/Makefile	/^DEPDIR = .deps$/;"	m
DESTROY	t/lib/MemcachedTest.pm	/^sub DESTROY {$/;"	s
DIBS	vendor/lua/src/ldump.c	59;"	d	file:
DIGITBIT	vendor/lua/src/lctype.h	40;"	d
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	doc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_COMMON	doc/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_DIRS	Makefile	/^DIST_DIRS = scripts$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__memcached_SOURCES_DIST) \\$/;"	m
DIST_SOURCES	doc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = doc vendor$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DLMSG	vendor/lua/src/loadlib.c	237;"	d	file:
DONT_UPDATE	memcached.h	983;"	d
DO_UPDATE	memcached.h	982;"	d
DTRACE	Makefile	/^DTRACE = $/;"	m
DTRACE	doc/Makefile	/^DTRACE = $/;"	m
DTRACEFLAGS	Makefile	/^DTRACEFLAGS = $/;"	m
DTRACEFLAGS	doc/Makefile	/^DTRACEFLAGS = $/;"	m
DumpState	vendor/lua/src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon26	file:
Dyndata	vendor/lua/src/lparser.h	/^typedef struct Dyndata {$/;"	s
Dyndata	vendor/lua/src/lparser.h	/^} Dyndata;$/;"	t	typeref:struct:Dyndata
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	doc/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	doc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	doc/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	doc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENABLE_SASL	Makefile	/^ENABLE_SASL = $/;"	m
ENABLE_SASL	doc/Makefile	/^ENABLE_SASL = $/;"	m
ENDIAN_LITTLE	config.h	26;"	d
ENDLEN	proxy.h	76;"	d
ENDSTR	proxy.h	75;"	d
ENTRY_EXISTS	t/udp.t	/^use constant ENTRY_EXISTS     => 0;$/;"	c
ENTRY_MISSING	t/udp.t	/^use constant ENTRY_MISSING    => 1;$/;"	c
EOFMARK	vendor/lua/src/lua.c	454;"	d	file:
EOM	memcached.h	/^    OK, NON_NUMERIC, EOM, DELTA_ITEM_NOT_FOUND, DELTA_ITEM_CAS_MISMATCH$/;"	e	enum:delta_result_type
EOZ	vendor/lua/src/lzio.h	16;"	d
ERRFUNC	vendor/lua/src/loadlib.c	377;"	d	file:
ERRLIB	vendor/lua/src/loadlib.c	376;"	d	file:
ERRORSTACKSIZE	vendor/lua/src/ldo.c	177;"	d	file:
ERROR_CLOSE	memcached.h	/^    ERROR_CLOSE,$/;"	e	enum:close_reasons
ERROR_MSG_SIZE	tls.c	/^const unsigned ERROR_MSG_SIZE = 64;$/;"	v
ERR_AUTH_ERROR	t/binary-sasl.t	/^use constant ERR_AUTH_ERROR   => 0x20;$/;"	c
ERR_DELTA_BADVAL	t/binary-extstore.t	/^use constant ERR_DELTA_BADVAL => 0x6;$/;"	c
ERR_DELTA_BADVAL	t/binary-sasl.t	/^use constant ERR_DELTA_BADVAL => 0x6;$/;"	c
ERR_DELTA_BADVAL	t/binary.t	/^use constant ERR_DELTA_BADVAL => 0x6;$/;"	c
ERR_EINVAL	t/binary-extstore.t	/^use constant ERR_EINVAL       => 0x4;$/;"	c
ERR_EINVAL	t/binary-sasl.t	/^use constant ERR_EINVAL       => 0x4;$/;"	c
ERR_EINVAL	t/binary.t	/^use constant ERR_EINVAL       => 0x4;$/;"	c
ERR_EXISTS	t/binary-extstore.t	/^use constant ERR_EXISTS       => 0x2;$/;"	c
ERR_EXISTS	t/binary-sasl.t	/^use constant ERR_EXISTS       => 0x2;$/;"	c
ERR_EXISTS	t/binary.t	/^use constant ERR_EXISTS       => 0x2;$/;"	c
ERR_NOT_FOUND	t/binary-extstore.t	/^use constant ERR_NOT_FOUND    => 0x1;$/;"	c
ERR_NOT_FOUND	t/binary-sasl.t	/^use constant ERR_NOT_FOUND    => 0x1;$/;"	c
ERR_NOT_FOUND	t/binary.t	/^use constant ERR_NOT_FOUND    => 0x1;$/;"	c
ERR_NOT_STORED	t/binary-extstore.t	/^use constant ERR_NOT_STORED   => 0x5;$/;"	c
ERR_NOT_STORED	t/binary-sasl.t	/^use constant ERR_NOT_STORED   => 0x5;$/;"	c
ERR_NOT_STORED	t/binary.t	/^use constant ERR_NOT_STORED   => 0x5;$/;"	c
ERR_TOO_BIG	t/binary-extstore.t	/^use constant ERR_TOO_BIG      => 0x3;$/;"	c
ERR_TOO_BIG	t/binary-sasl.t	/^use constant ERR_TOO_BIG      => 0x3;$/;"	c
ERR_TOO_BIG	t/binary.t	/^use constant ERR_TOO_BIG      => 0x3;$/;"	c
ERR_UNKNOWN_CMD	t/binary-extstore.t	/^use constant ERR_UNKNOWN_CMD  => 0x81;$/;"	c
ERR_UNKNOWN_CMD	t/binary-sasl.t	/^use constant ERR_UNKNOWN_CMD  => 0x81;$/;"	c
ERR_UNKNOWN_CMD	t/binary.t	/^use constant ERR_UNKNOWN_CMD  => 0x81;$/;"	c
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	doc/Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	doc/Makefile	/^EXEEXT = $/;"	m
EXISTS	memcached.h	/^    NOT_STORED=0, STORED, EXISTS, NOT_FOUND, TOO_LARGE, NO_MEMORY$/;"	e	enum:store_item_type
EXIT_NORMALLY	memcached.h	/^    EXIT_NORMALLY$/;"	e	enum:stop_reasons
EXPTIME_TO_POSITIVE_TIME	memcached.h	1022;"	d
EXTRAARG	vendor/lua/src/luac.c	331;"	d	file:
EXTRAARGC	vendor/lua/src/luac.c	332;"	d	file:
EXTRA_DIST	Makefile	/^EXTRA_DIST = doc scripts t memcached.spec memcached_dtrace.d \\$/;"	m
EXTRA_DIST	doc/Makefile	/^EXTRA_DIST = $(srcdir)\/*.txt $(SPECIFICATIONS)$/;"	m
EXTRA_STACK	vendor/lua/src/lstate.h	137;"	d
EXTSTORE	config.h	29;"	d
EXTSTORE_H	extstore.h	2;"	d
EXTSTORE_INIT_BAD_WBUF_SIZE	extstore.h	/^    EXTSTORE_INIT_BAD_WBUF_SIZE = 1,$/;"	e	enum:extstore_res
EXTSTORE_INIT_NEED_MORE_BUCKETS	extstore.h	/^    EXTSTORE_INIT_NEED_MORE_BUCKETS,$/;"	e	enum:extstore_res
EXTSTORE_INIT_NEED_MORE_WBUF	extstore.h	/^    EXTSTORE_INIT_NEED_MORE_WBUF,$/;"	e	enum:extstore_res
EXTSTORE_INIT_OOM	extstore.h	/^    EXTSTORE_INIT_OOM,$/;"	e	enum:extstore_res
EXTSTORE_INIT_OPEN_FAIL	extstore.h	/^    EXTSTORE_INIT_OPEN_FAIL,$/;"	e	enum:extstore_res
EXTSTORE_INIT_PAGE_WBUF_ALIGNMENT	extstore.h	/^    EXTSTORE_INIT_PAGE_WBUF_ALIGNMENT,$/;"	e	enum:extstore_res
EXTSTORE_INIT_THREAD_FAIL	extstore.h	/^    EXTSTORE_INIT_THREAD_FAIL$/;"	e	enum:extstore_res
EXTSTORE_INIT_TOO_MANY_PAGES	extstore.h	/^    EXTSTORE_INIT_TOO_MANY_PAGES,$/;"	e	enum:extstore_res
EXTSTORE_THREAD_STATS_FIELDS	memcached.h	336;"	d
E_DEBUG	extstore.c	23;"	d	file:
E_DEBUG	extstore.c	28;"	d	file:
F	md5.c	202;"	d	file:
F2Iceil	vendor/lua/src/lvm.h	/^  F2Iceil    \/* takes the ceil of the number *\/$/;"	e	enum:__anon44
F2Ieq	vendor/lua/src/lvm.h	/^  F2Ieq,     \/* no rounding; accepts only integral values *\/$/;"	e	enum:__anon44
F2Ifloor	vendor/lua/src/lvm.h	/^  F2Ifloor,  \/* takes the floor of the number *\/$/;"	e	enum:__anon44
F2Imod	vendor/lua/src/lvm.h	/^} F2Imod;$/;"	t	typeref:enum:__anon44
FIGS	vendor/lua/src/lmathlib.c	253;"	d	file:
FIGS	vendor/lua/src/lmathlib.c	257;"	d	file:
FIGS	vendor/lua/src/lmathlib.c	258;"	d	file:
FINALIZEDBIT	vendor/lua/src/lgc.h	78;"	d
FIRST_RESERVED	vendor/lua/src/llex.h	20;"	d
FLAGS_CONV	memcached.h	170;"	d
FLAGS_SIZE	memcached.h	178;"	d
FLAG_BUF_IS_ERROR	vendor/mcmc/mcmc.c	27;"	d	file:
FLAG_BUF_IS_NUMERIC	vendor/mcmc/mcmc.c	28;"	d	file:
FLAG_BUF_WANTED_READ	vendor/mcmc/mcmc.c	29;"	d	file:
FORCE_INLINE	murmur3_hash.c	19;"	d	file:
FORCE_INLINE	murmur3_hash.c	31;"	d	file:
FUNCTION	vendor/lua/src/luac.c	124;"	d	file:
FuncState	vendor/lua/src/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	vendor/lua/src/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
G	md5.c	228;"	d	file:
G	vendor/lua/src/lstate.h	330;"	d
GCFINALIZECOST	vendor/lua/src/lgc.c	46;"	d	file:
GCFINMAX	vendor/lua/src/lgc.c	40;"	d	file:
GCObject	vendor/lua/src/lobject.h	/^typedef struct GCObject {$/;"	s
GCObject	vendor/lua/src/lobject.h	/^} GCObject;$/;"	t	typeref:struct:GCObject
GCSWEEPMAX	vendor/lua/src/lgc.c	35;"	d	file:
GCSatomic	vendor/lua/src/lgc.h	33;"	d
GCScallfin	vendor/lua/src/lgc.h	38;"	d
GCSenteratomic	vendor/lua/src/lgc.h	32;"	d
GCSpause	vendor/lua/src/lgc.h	39;"	d
GCSpropagate	vendor/lua/src/lgc.h	31;"	d
GCSswpallgc	vendor/lua/src/lgc.h	34;"	d
GCSswpend	vendor/lua/src/lgc.h	37;"	d
GCSswpfinobj	vendor/lua/src/lgc.h	35;"	d
GCSswptobefnz	vendor/lua/src/lgc.h	36;"	d
GCTM	vendor/lua/src/lgc.c	/^static void GCTM (lua_State *L) {$/;"	f	file:
GCUnion	vendor/lua/src/lstate.h	/^union GCUnion {$/;"	u
GCdebt	vendor/lua/src/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State
GCestimate	vendor/lua/src/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State
GETARG_A	vendor/lua/src/lopcodes.h	125;"	d
GETARG_Ax	vendor/lua/src/lopcodes.h	143;"	d
GETARG_B	vendor/lua/src/lopcodes.h	128;"	d
GETARG_Bx	vendor/lua/src/lopcodes.h	140;"	d
GETARG_C	vendor/lua/src/lopcodes.h	132;"	d
GETARG_k	vendor/lua/src/lopcodes.h	137;"	d
GETARG_sB	vendor/lua/src/lopcodes.h	129;"	d
GETARG_sBx	vendor/lua/src/lopcodes.h	146;"	d
GETARG_sC	vendor/lua/src/lopcodes.h	133;"	d
GETARG_sJ	vendor/lua/src/lopcodes.h	150;"	d
GET_LOGGER	logger.h	11;"	d
GET_LRU	items.h	7;"	d
GET_OPCODE	vendor/lua/src/lopcodes.h	114;"	d
GMatchState	vendor/lua/src/lstrlib.c	/^typedef struct GMatchState {$/;"	s	file:
GMatchState	vendor/lua/src/lstrlib.c	/^} GMatchState;$/;"	t	typeref:struct:GMatchState	file:
GRACE_STOP	memcached.h	/^    GRACE_STOP,$/;"	e	enum:stop_reasons
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	doc/Makefile	/^GREP = \/bin\/grep$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
G_NEW	vendor/lua/src/lgc.h	106;"	d
G_OLD	vendor/lua/src/lgc.h	110;"	d
G_OLD0	vendor/lua/src/lgc.h	108;"	d
G_OLD1	vendor/lua/src/lgc.h	109;"	d
G_SURVIVAL	vendor/lua/src/lgc.h	107;"	d
G_TOUCHED1	vendor/lua/src/lgc.h	111;"	d
G_TOUCHED2	vendor/lua/src/lgc.h	112;"	d
H	md5.c	254;"	d	file:
HASHPOWER_DEFAULT	memcached.h	89;"	d
HASHPOWER_MAX	memcached.h	90;"	d
HASH_BIG_ENDIAN	jenkins_hash.c	22;"	d	file:
HASH_BIG_ENDIAN	jenkins_hash.c	26;"	d	file:
HASH_BIG_ENDIAN	jenkins_hash.c	29;"	d	file:
HASH_H	hash.h	2;"	d
HASH_LITTLE_ENDIAN	jenkins_hash.c	21;"	d	file:
HASH_LITTLE_ENDIAN	jenkins_hash.c	25;"	d	file:
HASH_LITTLE_ENDIAN	jenkins_hash.c	28;"	d	file:
HAVE_ACCEPT4	config.h	32;"	d
HAVE_CLOCK_GETTIME	config.h	38;"	d
HAVE_EVENTFD	config.h	47;"	d
HAVE_GCC_64ATOMICS	config.h	50;"	d
HAVE_GCC_ATOMICS	config.h	53;"	d
HAVE_GETOPT_LONG	config.h	56;"	d
HAVE_INTTYPES_H	config.h	65;"	d
HAVE_LIBEVENT_NEW	config.h	68;"	d
HAVE_MLOCKALL	config.h	77;"	d
HAVE_PREAD	config.h	83;"	d
HAVE_PREADV	config.h	86;"	d
HAVE_STDBOOL_H	config.h	107;"	d
HAVE_STDINT_H	config.h	110;"	d
HAVE_STDIO_H	config.h	113;"	d
HAVE_STDLIB_H	config.h	116;"	d
HAVE_STRINGS_H	config.h	119;"	d
HAVE_STRING_H	config.h	122;"	d
HAVE_SYSCONF	config.h	125;"	d
HAVE_SYS_STAT_H	config.h	128;"	d
HAVE_SYS_TYPES_H	config.h	131;"	d
HAVE_UNISTD_H	config.h	134;"	d
HAVE__BOOL	config.h	137;"	d
HEADERS	Makefile	/^HEADERS = $(pkginclude_HEADERS)$/;"	m
HOOKKEY	vendor/lua/src/ldblib.c	/^static const char *const HOOKKEY = "_HOOKKEY";$/;"	v	file:
HOT_LRU	items.h	1;"	d
Header	vendor/lua/src/lstrlib.c	/^typedef struct Header {$/;"	s	file:
Header	vendor/lua/src/lstrlib.c	/^} Header;$/;"	t	typeref:struct:Header	file:
I	md5.c	280;"	d	file:
I2UInt	vendor/lua/src/lmathlib.c	/^static lua_Unsigned I2UInt (Rand64 x) {$/;"	f	file:
I2UInt	vendor/lua/src/lmathlib.c	342;"	d	file:
I2d	vendor/lua/src/lmathlib.c	/^static lua_Number I2d (Rand64 x) {$/;"	f	file:
IDLE_TIMEOUT_CLOSE	memcached.h	/^    IDLE_TIMEOUT_CLOSE,$/;"	e	enum:close_reasons
INCRDECR_PKT_FMT	t/binary-extstore.t	/^use constant INCRDECR_PKT_FMT => "NNNNN";$/;"	c
INCRDECR_PKT_FMT	t/binary-sasl.t	/^use constant INCRDECR_PKT_FMT => "NNNNN";$/;"	c
INCRDECR_PKT_FMT	t/binary.t	/^use constant INCRDECR_PKT_FMT => "NNNNN";$/;"	c
INCRDECR_PKT_FMT	t/udp.t	/^use constant INCRDECR_PKT_FMT => "NNNNN";$/;"	c
INCR_MAX_STORAGE_LEN	memcached.h	74;"	d
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	doc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	vendor/lua/Makefile	/^INSTALL= install -p$/;"	m
INSTALL_BIN	vendor/lua/Makefile	/^INSTALL_BIN= $(INSTALL_TOP)\/bin$/;"	m
INSTALL_CMOD	vendor/lua/Makefile	/^INSTALL_CMOD= $(INSTALL_TOP)\/lib\/lua\/$V$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	doc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	vendor/lua/Makefile	/^INSTALL_DATA= $(INSTALL) -m 0644$/;"	m
INSTALL_EXEC	vendor/lua/Makefile	/^INSTALL_EXEC= $(INSTALL) -m 0755$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	doc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_INC	vendor/lua/Makefile	/^INSTALL_INC= $(INSTALL_TOP)\/include$/;"	m
INSTALL_LIB	vendor/lua/Makefile	/^INSTALL_LIB= $(INSTALL_TOP)\/lib$/;"	m
INSTALL_LMOD	vendor/lua/Makefile	/^INSTALL_LMOD= $(INSTALL_TOP)\/share\/lua\/$V$/;"	m
INSTALL_MAN	vendor/lua/Makefile	/^INSTALL_MAN= $(INSTALL_TOP)\/man\/man1$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	doc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	doc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	doc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_TOP	vendor/lua/Makefile	/^INSTALL_TOP= \/usr\/local$/;"	m
IOPREF_LEN	vendor/lua/src/liolib.c	150;"	d	file:
IOV_MAX	memcached.h	31;"	d
IO_INPUT	vendor/lua/src/liolib.c	151;"	d	file:
IO_OUTPUT	vendor/lua/src/liolib.c	152;"	d	file:
IO_PREFIX	vendor/lua/src/liolib.c	149;"	d	file:
IO_QUEUE_COUNT	memcached.h	662;"	d
IO_QUEUE_EXTSTORE	memcached.h	665;"	d
IO_QUEUE_NONE	memcached.h	664;"	d
IO_QUEUE_PROXY	memcached.h	666;"	d
IS	vendor/lua/src/luac.c	74;"	d	file:
ISK	vendor/lua/src/luac.c	333;"	d	file:
IS_ASCII	t/udp.t	/^use constant IS_ASCII         => 0;$/;"	c
IS_BINARY	t/udp.t	/^use constant IS_BINARY        => 1;$/;"	c
IS_TCP	memcached.h	266;"	d
IS_UDP	memcached.h	267;"	d
ITEMS_PER_ALLOC	thread.c	32;"	d	file:
ITEM_ACTIVE	memcached.h	555;"	d
ITEM_CAS	memcached.h	547;"	d
ITEM_CFLAGS	memcached.h	562;"	d
ITEM_CHUNK	memcached.h	558;"	d
ITEM_CHUNKED	memcached.h	557;"	d
ITEM_FETCHED	memcached.h	553;"	d
ITEM_HDR	memcached.h	560;"	d
ITEM_KEY_BINARY	memcached.h	570;"	d
ITEM_LINKED	memcached.h	546;"	d
ITEM_SIZE_MAX_LOWER_LIMIT	memcached.h	102;"	d
ITEM_SIZE_MAX_UPPER_LIMIT	memcached.h	103;"	d
ITEM_SLABBED	memcached.h	550;"	d
ITEM_STALE	memcached.h	568;"	d
ITEM_TOKEN_RESERVED	memcached.h	566;"	d
ITEM_TOKEN_SENT	memcached.h	564;"	d
ITEM_UPDATE_INTERVAL	memcached.h	97;"	d
ITEM_clsid	memcached.h	148;"	d
ITEM_data	memcached.h	139;"	d
ITEM_get_cas	memcached.h	124;"	d
ITEM_key	memcached.h	133;"	d
ITEM_lruid	memcached.h	149;"	d
ITEM_ntotal	memcached.h	143;"	d
ITEM_schunk	memcached.h	/^static inline char *ITEM_schunk(item *it) {$/;"	f
ITEM_schunk	memcached.h	649;"	d
ITEM_set_cas	memcached.h	127;"	d
ITEM_suffix	memcached.h	136;"	d
ITERATIONS	testapp.c	131;"	d	file:
ITERATIONS	testapp.c	144;"	d	file:
ITOA_LJUST_H	itoa_ljust.h	2;"	d
IT_REFCOUNT_LIMIT	memcached.c	2187;"	d	file:
Iadd	vendor/lua/src/lmathlib.c	/^static Rand64 Iadd (Rand64 i1, Rand64 i2) {$/;"	f	file:
IdxT	vendor/lua/src/ltablib.c	/^typedef unsigned int IdxT;$/;"	t	file:
Instruction	vendor/lua/src/llimits.h	/^typedef l_uint32 Instruction;$/;"	t
Int2I	vendor/lua/src/lmathlib.c	/^static Rand64 Int2I (lua_Unsigned n) {$/;"	f	file:
Int2I	vendor/lua/src/lmathlib.c	345;"	d	file:
Ishl	vendor/lua/src/lmathlib.c	/^static Rand64 Ishl (Rand64 i, int n) {$/;"	f	file:
Ixor	vendor/lua/src/lmathlib.c	/^static void Ixor (Rand64 *i1, Rand64 i2) {$/;"	f	file:
JENKINS_HASH	hash.h	/^    JENKINS_HASH=0, MURMUR3_HASH, XXH3_HASH$/;"	e	enum:hashfunc_type
JENKINS_HASH_H	jenkins_hash.h	2;"	d
KB	vendor/lua/src/lvm.c	1044;"	d	file:
KC	vendor/lua/src/lvm.c	1047;"	d	file:
KEY_HASH_FILTER_MAX	proxy.h	414;"	d
KEY_MAX_LENGTH	memcached.h	68;"	d
KEY_MAX_URI_ENCODED_LENGTH	memcached.h	71;"	d
KEY_TOKEN	proto_text.c	238;"	d	file:
KGC_GEN	vendor/lua/src/lstate.h	147;"	d
KGC_INC	vendor/lua/src/lstate.h	146;"	d
KILL_MSG_STR	linux_priv.c	14;"	d	file:
KOption	vendor/lua/src/lstrlib.c	/^typedef enum KOption {$/;"	g	file:
KOption	vendor/lua/src/lstrlib.c	/^} KOption;$/;"	t	typeref:enum:KOption	file:
Kchar	vendor/lua/src/lstrlib.c	/^  Kchar,	\/* fixed-length strings *\/$/;"	e	enum:KOption	file:
Kdouble	vendor/lua/src/lstrlib.c	/^  Kdouble,	\/* double-precision floating-point numbers *\/$/;"	e	enum:KOption	file:
Kfloat	vendor/lua/src/lstrlib.c	/^  Kfloat,	\/* single-precision floating-point numbers *\/$/;"	e	enum:KOption	file:
Kint	vendor/lua/src/lstrlib.c	/^  Kint,		\/* signed integers *\/$/;"	e	enum:KOption	file:
Knop	vendor/lua/src/lstrlib.c	/^  Knop		\/* no-op (configuration or spaces) *\/$/;"	e	enum:KOption	file:
Knumber	vendor/lua/src/lstrlib.c	/^  Knumber,	\/* Lua "native" floating-point numbers *\/$/;"	e	enum:KOption	file:
Kpaddalign	vendor/lua/src/lstrlib.c	/^  Kpaddalign,	\/* padding for alignment *\/$/;"	e	enum:KOption	file:
Kpadding	vendor/lua/src/lstrlib.c	/^  Kpadding,	\/* padding *\/$/;"	e	enum:KOption	file:
Kstring	vendor/lua/src/lstrlib.c	/^  Kstring,	\/* strings with prefixed length *\/$/;"	e	enum:KOption	file:
Kuint	vendor/lua/src/lstrlib.c	/^  Kuint,	\/* unsigned integers *\/$/;"	e	enum:KOption	file:
Kzstr	vendor/lua/src/lstrlib.c	/^  Kzstr,	\/* zero-terminated strings *\/$/;"	e	enum:KOption	file:
L	memcached.h	/^    void *L;$/;"	m	struct:__anon110
L	vendor/lua/src/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer
L	vendor/lua/src/ldump.c	/^  lua_State *L;$/;"	m	struct:__anon26	file:
L	vendor/lua/src/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State
L	vendor/lua/src/lobject.c	/^  lua_State *L;$/;"	m	struct:BuffFS	file:
L	vendor/lua/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:Header	file:
L	vendor/lua/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	vendor/lua/src/lundump.c	/^  lua_State *L;$/;"	m	struct:__anon45	file:
L	vendor/lua/src/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio
LARGEST_ID	crawler.c	25;"	d	file:
LARGEST_ID	items.c	30;"	d	file:
LClosure	vendor/lua/src/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	vendor/lua/src/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LDFLAGS	Makefile	/^LDFLAGS = -L\/usr\/local\/lib  -Wl,-rpath,\/usr\/local\/lib\/lib$/;"	m
LDFLAGS	doc/Makefile	/^LDFLAGS = -L\/usr\/local\/lib  -Wl,-rpath,\/usr\/local\/lib\/lib$/;"	m
LDFLAGS	vendor/lua/src/Makefile	/^LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)$/;"	m
LEVELS1	vendor/lua/src/lauxlib.c	43;"	d	file:
LEVELS2	vendor/lua/src/lauxlib.c	44;"	d	file:
LEfloatint	vendor/lua/src/lvm.c	/^static int LEfloatint (lua_Number f, lua_Integer i) {$/;"	f	file:
LEintfloat	vendor/lua/src/lvm.c	/^static int LEintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:
LEnum	vendor/lua/src/lvm.c	/^static int LEnum (const TValue *l, const TValue *r) {$/;"	f	file:
LFIELDS_PER_FLUSH	vendor/lua/src/lopcodes.h	390;"	d
LG	vendor/lua/src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	vendor/lua/src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	vendor/lua/src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBEVENT_THREAD	memcached.h	/^} LIBEVENT_THREAD;$/;"	t	typeref:struct:__anon110
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	doc/Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = -levent $/;"	m
LIBS	doc/Makefile	/^LIBS = -levent $/;"	m
LIBS	vendor/lua/src/Makefile	/^LIBS= -lm $(SYSLIBS) $(MYLIBS)$/;"	m
LIB_FAIL	vendor/lua/src/loadlib.c	233;"	d	file:
LIB_FAIL	vendor/lua/src/loadlib.c	234;"	d	file:
LIB_FAIL	vendor/lua/src/loadlib.c	64;"	d	file:
LIB_O	vendor/lua/src/Makefile	/^LIB_O=	lauxlib.o lbaselib.o lcorolib.o ldblib.o liolib.o lmathlib.o loadlib.o loslib.o lstrlib.o ltablib.o lutf8lib.o linit.o$/;"	m
LIMLINEDIFF	vendor/lua/src/lcode.c	318;"	d	file:
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LIST_CLASS_ENTRY	queue.h	462;"	d
LIST_CLASS_HEAD	queue.h	448;"	d
LIST_CONCAT	queue.h	514;"	d
LIST_EMPTY	queue.h	531;"	d
LIST_ENTRY	queue.h	456;"	d
LIST_FIRST	queue.h	533;"	d
LIST_FOREACH	queue.h	535;"	d
LIST_FOREACH_FROM	queue.h	540;"	d
LIST_FOREACH_FROM_SAFE	queue.h	550;"	d
LIST_FOREACH_SAFE	queue.h	545;"	d
LIST_HEAD	queue.h	443;"	d
LIST_HEAD_INITIALIZER	queue.h	453;"	d
LIST_INIT	queue.h	555;"	d
LIST_INSERT_AFTER	queue.h	559;"	d
LIST_INSERT_BEFORE	queue.h	568;"	d
LIST_INSERT_HEAD	queue.h	576;"	d
LIST_NEXT	queue.h	584;"	d
LIST_PREV	queue.h	586;"	d
LIST_REMOVE	queue.h	591;"	d
LIST_SWAP	queue.h	604;"	d
LL	vendor/lua/src/llimits.h	70;"	d
LOGGER_ADD_WATCHER_FAILED	logger.h	/^    LOGGER_ADD_WATCHER_FAILED$/;"	e	enum:logger_add_watcher_ret
LOGGER_ADD_WATCHER_OK	logger.h	/^    LOGGER_ADD_WATCHER_OK,$/;"	e	enum:logger_add_watcher_ret
LOGGER_ADD_WATCHER_TOO_MANY	logger.h	/^    LOGGER_ADD_WATCHER_TOO_MANY = 0,$/;"	e	enum:logger_add_watcher_ret
LOGGER_ASCII_CMD	logger.h	/^    LOGGER_ASCII_CMD = 0,$/;"	e	enum:log_entry_type
LOGGER_BUF_SIZE	logger.h	8;"	d
LOGGER_COMPACT_ABORT	logger.h	/^    LOGGER_COMPACT_ABORT,$/;"	e	enum:log_entry_type
LOGGER_COMPACT_END	logger.h	/^    LOGGER_COMPACT_END,$/;"	e	enum:log_entry_type
LOGGER_COMPACT_FRAGINFO	logger.h	/^    LOGGER_COMPACT_FRAGINFO,$/;"	e	enum:log_entry_type
LOGGER_COMPACT_READ_END	logger.h	/^    LOGGER_COMPACT_READ_END,$/;"	e	enum:log_entry_type
LOGGER_COMPACT_READ_START	logger.h	/^    LOGGER_COMPACT_READ_START,$/;"	e	enum:log_entry_type
LOGGER_COMPACT_START	logger.h	/^    LOGGER_COMPACT_START,$/;"	e	enum:log_entry_type
LOGGER_CONNECTION_CLOSE	logger.h	/^    LOGGER_CONNECTION_CLOSE,$/;"	e	enum:log_entry_type
LOGGER_CONNECTION_NEW	logger.h	/^    LOGGER_CONNECTION_NEW,$/;"	e	enum:log_entry_type
LOGGER_CRAWLER_STATUS	logger.h	/^    LOGGER_CRAWLER_STATUS,$/;"	e	enum:log_entry_type
LOGGER_ENTRY_MAX_SIZE	logger.h	10;"	d
LOGGER_EVICTION	logger.h	/^    LOGGER_EVICTION,$/;"	e	enum:log_entry_type
LOGGER_EXTSTORE_WRITE	logger.h	/^    LOGGER_EXTSTORE_WRITE,$/;"	e	enum:log_entry_type
LOGGER_H	logger.h	3;"	d
LOGGER_ITEM_GET	logger.h	/^    LOGGER_ITEM_GET,$/;"	e	enum:log_entry_type
LOGGER_ITEM_STORE	logger.h	/^    LOGGER_ITEM_STORE,$/;"	e	enum:log_entry_type
LOGGER_LOG	logger.h	207;"	d
LOGGER_PARSE_ENTRY_FAILED	logger.h	/^    LOGGER_PARSE_ENTRY_FAILED$/;"	e	enum:logger_parse_entry_ret
LOGGER_PARSE_ENTRY_FULLBUF	logger.h	/^    LOGGER_PARSE_ENTRY_FULLBUF,$/;"	e	enum:logger_parse_entry_ret
LOGGER_PARSE_ENTRY_OK	logger.h	/^    LOGGER_PARSE_ENTRY_OK = 0,$/;"	e	enum:logger_parse_entry_ret
LOGGER_PARSE_SCRATCH	logger.c	193;"	d	file:
LOGGER_PROXY_BE_ERROR	logger.h	/^    LOGGER_PROXY_BE_ERROR,$/;"	e	enum:log_entry_type
LOGGER_PROXY_CONFIG	logger.h	/^    LOGGER_PROXY_CONFIG,$/;"	e	enum:log_entry_type
LOGGER_PROXY_ERROR	logger.h	/^    LOGGER_PROXY_ERROR,$/;"	e	enum:log_entry_type
LOGGER_PROXY_RAW	logger.h	/^    LOGGER_PROXY_RAW,$/;"	e	enum:log_entry_type
LOGGER_PROXY_REQ	logger.h	/^    LOGGER_PROXY_REQ,$/;"	e	enum:log_entry_type
LOGGER_PROXY_USER	logger.h	/^    LOGGER_PROXY_USER,$/;"	e	enum:log_entry_type
LOGGER_RET_ERR	logger.h	/^    LOGGER_RET_ERR$/;"	e	enum:logger_ret_type
LOGGER_RET_NOSPACE	logger.h	/^    LOGGER_RET_NOSPACE,$/;"	e	enum:logger_ret_type
LOGGER_RET_OK	logger.h	/^    LOGGER_RET_OK = 0,$/;"	e	enum:logger_ret_type
LOGGER_SLAB_MOVE	logger.h	/^    LOGGER_SLAB_MOVE,$/;"	e	enum:log_entry_type
LOGGER_WATCHER_BUF_SIZE	logger.h	9;"	d
LOGGER_WATCHER_CLIENT	logger.h	/^    LOGGER_WATCHER_CLIENT = 1$/;"	e	enum:logger_watcher_type
LOGGER_WATCHER_STDERR	logger.h	/^    LOGGER_WATCHER_STDERR = 0,$/;"	e	enum:logger_watcher_type
LOG_CONNEVENTS	logger.h	151;"	d
LOG_EVICTIONS	logger.h	152;"	d
LOG_FETCHERS	logger.h	148;"	d
LOG_MUTATIONS	logger.h	149;"	d
LOG_PROXYEVENTS	logger.h	156;"	d
LOG_PROXYREQS	logger.h	155;"	d
LOG_PROXYUSER	logger.h	157;"	d
LOG_RAWCMDS	logger.h	154;"	d
LOG_STRICT	logger.h	153;"	d
LOG_SYSERRORS	logger.h	150;"	d
LOG_SYSEVENTS	logger.h	147;"	d
LONG	crc32c.c	141;"	d	file:
LONGx1	crc32c.c	142;"	d	file:
LONGx2	crc32c.c	143;"	d	file:
LRU_BUMP_BUF_SIZE	items.c	105;"	d	file:
LRU_CRAWLER_CAP_REMAINING	crawler.h	4;"	d
LRU_CRAWLER_WRITEBUF	crawler.c	110;"	d	file:
LRU_PULL_CRAWL_BLOCKS	items.h	39;"	d
LRU_PULL_EVICT	items.h	38;"	d
LRU_PULL_RETURN_ITEM	items.h	40;"	d
LStream	vendor/lua/src/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	doc/Makefile	/^LTLIBOBJS = $/;"	m
LTfloatint	vendor/lua/src/lvm.c	/^static int LTfloatint (lua_Number f, lua_Integer i) {$/;"	f	file:
LTintfloat	vendor/lua/src/lvm.c	/^static int LTintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:
LTnum	vendor/lua/src/lvm.c	/^static int LTnum (const TValue *l, const TValue *r) {$/;"	f	file:
LUAC_DATA	vendor/lua/src/lundump.h	16;"	d
LUAC_FORMAT	vendor/lua/src/lundump.h	27;"	d
LUAC_INT	vendor/lua/src/lundump.h	18;"	d
LUAC_NUM	vendor/lua/src/lundump.h	19;"	d
LUAC_O	vendor/lua/src/Makefile	/^LUAC_O=	luac.o$/;"	m
LUAC_T	vendor/lua/src/Makefile	/^LUAC_T=	luac$/;"	m
LUAC_VERSION	vendor/lua/src/lundump.h	25;"	d
LUAI_DDEC	vendor/lua/src/luaconf.h	315;"	d
LUAI_DDEF	vendor/lua/src/luaconf.h	316;"	d
LUAI_FUNC	vendor/lua/src/luaconf.h	310;"	d
LUAI_FUNC	vendor/lua/src/luaconf.h	312;"	d
LUAI_GCMUL	vendor/lua/src/lgc.h	138;"	d
LUAI_GCPAUSE	vendor/lua/src/lgc.h	129;"	d
LUAI_GCSTEPSIZE	vendor/lua/src/lgc.h	141;"	d
LUAI_GENMAJORMUL	vendor/lua/src/lgc.h	125;"	d
LUAI_GENMINORMUL	vendor/lua/src/lgc.h	126;"	d
LUAI_IS32INT	vendor/lua/src/luaconf.h	76;"	d
LUAI_MAXALIGN	vendor/lua/src/lauxlib.h	/^    LUAI_MAXALIGN;  \/* ensure maximum alignment for buffer *\/$/;"	m	union:luaL_Buffer::__anon49
LUAI_MAXALIGN	vendor/lua/src/lobject.h	/^  LUAI_MAXALIGN;  \/* ensures maximum alignment for udata bytes *\/$/;"	m	union:UValue
LUAI_MAXALIGN	vendor/lua/src/lobject.h	/^  union {LUAI_MAXALIGN;} bindata;$/;"	m	union:Udata0::__anon52
LUAI_MAXALIGN	vendor/lua/src/luaconf.h	770;"	d
LUAI_MAXCCALLS	vendor/lua/src/llimits.h	228;"	d
LUAI_MAXSHORTLEN	vendor/lua/src/llimits.h	189;"	d
LUAI_MAXSTACK	vendor/lua/src/luaconf.h	738;"	d
LUAI_MAXSTACK	vendor/lua/src/luaconf.h	740;"	d
LUAI_THROW	vendor/lua/src/ldo.c	58;"	d	file:
LUAI_THROW	vendor/lua/src/ldo.c	66;"	d	file:
LUAI_THROW	vendor/lua/src/ldo.c	73;"	d	file:
LUAI_TRY	vendor/lua/src/ldo.c	59;"	d	file:
LUAI_TRY	vendor/lua/src/ldo.c	67;"	d	file:
LUAI_TRY	vendor/lua/src/ldo.c	74;"	d	file:
LUAI_UACINT	vendor/lua/src/luaconf.h	497;"	d
LUAI_UACNUMBER	vendor/lua/src/luaconf.h	431;"	d
LUAI_UACNUMBER	vendor/lua/src/luaconf.h	447;"	d
LUAI_UACNUMBER	vendor/lua/src/luaconf.h	462;"	d
LUALIB_API	vendor/lua/src/luaconf.h	290;"	d
LUAL_BUFFERSIZE	vendor/lua/src/luaconf.h	763;"	d
LUAL_NUMSIZES	vendor/lua/src/lauxlib.h	44;"	d
LUAL_PACKPADBYTE	vendor/lua/src/lstrlib.c	1332;"	d	file:
LUAMOD_API	vendor/lua/src/luaconf.h	291;"	d
LUA_32BITS	vendor/lua/src/luaconf.h	119;"	d
LUA_A	vendor/lua/src/Makefile	/^LUA_A=	liblua.a$/;"	m
LUA_API	vendor/lua/src/luaconf.h	275;"	d
LUA_API	vendor/lua/src/luaconf.h	277;"	d
LUA_API	vendor/lua/src/luaconf.h	282;"	d
LUA_AUTHORS	vendor/lua/src/lua.h	29;"	d
LUA_C89_NUMBERS	vendor/lua/src/luaconf.h	128;"	d
LUA_C89_NUMBERS	vendor/lua/src/luaconf.h	130;"	d
LUA_CDIR	vendor/lua/src/luaconf.h	200;"	d
LUA_CDIR	vendor/lua/src/luaconf.h	222;"	d
LUA_COLIBNAME	vendor/lua/src/lualib.h	20;"	d
LUA_COMPAT_APIINTCASTS	vendor/lua/src/luaconf.h	349;"	d
LUA_COMPAT_LT_LE	vendor/lua/src/luaconf.h	356;"	d
LUA_COMPAT_MATHLIB	vendor/lua/src/luaconf.h	340;"	d
LUA_COPYRIGHT	vendor/lua/src/lua.h	28;"	d
LUA_CORE	vendor/lua/src/lapi.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lcode.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lctype.c	8;"	d	file:
LUA_CORE	vendor/lua/src/ldebug.c	8;"	d	file:
LUA_CORE	vendor/lua/src/ldo.c	8;"	d	file:
LUA_CORE	vendor/lua/src/ldump.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lfunc.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lgc.c	8;"	d	file:
LUA_CORE	vendor/lua/src/llex.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lmem.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lobject.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lopcodes.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lparser.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lstate.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lstring.c	8;"	d	file:
LUA_CORE	vendor/lua/src/ltable.c	8;"	d	file:
LUA_CORE	vendor/lua/src/ltm.c	8;"	d	file:
LUA_CORE	vendor/lua/src/luac.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lundump.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lvm.c	8;"	d	file:
LUA_CORE	vendor/lua/src/lzio.c	8;"	d	file:
LUA_CPATH_DEFAULT	vendor/lua/src/luaconf.h	212;"	d
LUA_CPATH_DEFAULT	vendor/lua/src/luaconf.h	232;"	d
LUA_CPATH_VAR	vendor/lua/src/loadlib.c	277;"	d	file:
LUA_CSUBSEP	vendor/lua/src/loadlib.c	43;"	d	file:
LUA_DBLIBNAME	vendor/lua/src/lualib.h	41;"	d
LUA_DIRSEP	vendor/lua/src/luaconf.h	247;"	d
LUA_DIRSEP	vendor/lua/src/luaconf.h	249;"	d
LUA_DL_DLL	vendor/lua/src/luaconf.h	56;"	d
LUA_ENV	vendor/lua/src/llex.h	24;"	d
LUA_ERRERR	vendor/lua/src/lua.h	54;"	d
LUA_ERRFILE	vendor/lua/src/lauxlib.h	27;"	d
LUA_ERRMEM	vendor/lua/src/lua.h	53;"	d
LUA_ERRRUN	vendor/lua/src/lua.h	51;"	d
LUA_ERRSYNTAX	vendor/lua/src/lua.h	52;"	d
LUA_EXEC_DIR	vendor/lua/src/luaconf.h	180;"	d
LUA_EXTRASPACE	vendor/lua/src/luaconf.h	749;"	d
LUA_FILEHANDLE	vendor/lua/src/lauxlib.h	234;"	d
LUA_FLOAT_DEFAULT	vendor/lua/src/luaconf.h	113;"	d
LUA_FLOAT_DOUBLE	vendor/lua/src/luaconf.h	107;"	d
LUA_FLOAT_FLOAT	vendor/lua/src/luaconf.h	106;"	d
LUA_FLOAT_LONGDOUBLE	vendor/lua/src/luaconf.h	108;"	d
LUA_FLOAT_TYPE	vendor/lua/src/luaconf.h	143;"	d
LUA_FLOAT_TYPE	vendor/lua/src/luaconf.h	150;"	d
LUA_FLOAT_TYPE	vendor/lua/src/luaconf.h	156;"	d
LUA_FLOORN2I	vendor/lua/src/lvm.h	36;"	d
LUA_GCCOLLECT	vendor/lua/src/lua.h	321;"	d
LUA_GCCOUNT	vendor/lua/src/lua.h	322;"	d
LUA_GCCOUNTB	vendor/lua/src/lua.h	323;"	d
LUA_GCGEN	vendor/lua/src/lua.h	328;"	d
LUA_GCINC	vendor/lua/src/lua.h	329;"	d
LUA_GCISRUNNING	vendor/lua/src/lua.h	327;"	d
LUA_GCRESTART	vendor/lua/src/lua.h	320;"	d
LUA_GCSETPAUSE	vendor/lua/src/lua.h	325;"	d
LUA_GCSETSTEPMUL	vendor/lua/src/lua.h	326;"	d
LUA_GCSTEP	vendor/lua/src/lua.h	324;"	d
LUA_GCSTOP	vendor/lua/src/lua.h	319;"	d
LUA_GNAME	vendor/lua/src/lauxlib.h	20;"	d
LUA_HOOKCALL	vendor/lua/src/lua.h	430;"	d
LUA_HOOKCOUNT	vendor/lua/src/lua.h	433;"	d
LUA_HOOKLINE	vendor/lua/src/lua.h	432;"	d
LUA_HOOKRET	vendor/lua/src/lua.h	431;"	d
LUA_HOOKTAILCALL	vendor/lua/src/lua.h	434;"	d
LUA_IDSIZE	vendor/lua/src/luaconf.h	757;"	d
LUA_IGMARK	vendor/lua/src/loadlib.c	32;"	d	file:
LUA_INITVARVERSION	vendor/lua/src/lua.c	32;"	d	file:
LUA_INIT_VAR	vendor/lua/src/lua.c	29;"	d	file:
LUA_INTEGER	vendor/lua/src/luaconf.h	516;"	d
LUA_INTEGER	vendor/lua/src/luaconf.h	526;"	d
LUA_INTEGER	vendor/lua/src/luaconf.h	540;"	d
LUA_INTEGER	vendor/lua/src/luaconf.h	551;"	d
LUA_INTEGER_FMT	vendor/lua/src/luaconf.h	495;"	d
LUA_INTEGER_FRMLEN	vendor/lua/src/luaconf.h	517;"	d
LUA_INTEGER_FRMLEN	vendor/lua/src/luaconf.h	527;"	d
LUA_INTEGER_FRMLEN	vendor/lua/src/luaconf.h	541;"	d
LUA_INTEGER_FRMLEN	vendor/lua/src/luaconf.h	552;"	d
LUA_INT_DEFAULT	vendor/lua/src/luaconf.h	112;"	d
LUA_INT_INT	vendor/lua/src/luaconf.h	101;"	d
LUA_INT_LONG	vendor/lua/src/luaconf.h	102;"	d
LUA_INT_LONGLONG	vendor/lua/src/luaconf.h	103;"	d
LUA_INT_TYPE	vendor/lua/src/luaconf.h	139;"	d
LUA_INT_TYPE	vendor/lua/src/luaconf.h	141;"	d
LUA_INT_TYPE	vendor/lua/src/luaconf.h	149;"	d
LUA_INT_TYPE	vendor/lua/src/luaconf.h	155;"	d
LUA_IOLIBNAME	vendor/lua/src/lualib.h	26;"	d
LUA_KCONTEXT	vendor/lua/src/luaconf.h	642;"	d
LUA_KCONTEXT	vendor/lua/src/luaconf.h	648;"	d
LUA_KCONTEXT	vendor/lua/src/luaconf.h	649;"	d
LUA_LDIR	vendor/lua/src/luaconf.h	199;"	d
LUA_LDIR	vendor/lua/src/luaconf.h	221;"	d
LUA_LIB	vendor/lua/src/lauxlib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/lbaselib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/lcorolib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/ldblib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/linit.c	9;"	d	file:
LUA_LIB	vendor/lua/src/liolib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/lmathlib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/loadlib.c	12;"	d	file:
LUA_LIB	vendor/lua/src/loslib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/lstrlib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/ltablib.c	8;"	d	file:
LUA_LIB	vendor/lua/src/lutf8lib.c	8;"	d	file:
LUA_LLE_FLAGS	vendor/lua/src/loadlib.c	166;"	d	file:
LUA_LOADED_TABLE	vendor/lua/src/lauxlib.h	31;"	d
LUA_LOADLIBNAME	vendor/lua/src/lualib.h	44;"	d
LUA_LSUBSEP	vendor/lua/src/loadlib.c	47;"	d	file:
LUA_MASKCALL	vendor/lua/src/lua.h	440;"	d
LUA_MASKCOUNT	vendor/lua/src/lua.h	443;"	d
LUA_MASKLINE	vendor/lua/src/lua.h	442;"	d
LUA_MASKRET	vendor/lua/src/lua.h	441;"	d
LUA_MATHLIBNAME	vendor/lua/src/lualib.h	38;"	d
LUA_MAXCAPTURES	vendor/lua/src/lstrlib.c	35;"	d	file:
LUA_MAXINPUT	vendor/lua/src/lua.c	375;"	d	file:
LUA_MAXINTEGER	vendor/lua/src/luaconf.h	519;"	d
LUA_MAXINTEGER	vendor/lua/src/luaconf.h	529;"	d
LUA_MAXINTEGER	vendor/lua/src/luaconf.h	543;"	d
LUA_MAXINTEGER	vendor/lua/src/luaconf.h	554;"	d
LUA_MAXUNSIGNED	vendor/lua/src/luaconf.h	522;"	d
LUA_MAXUNSIGNED	vendor/lua/src/luaconf.h	532;"	d
LUA_MAXUNSIGNED	vendor/lua/src/luaconf.h	546;"	d
LUA_MAXUNSIGNED	vendor/lua/src/luaconf.h	557;"	d
LUA_MINBUFFER	vendor/lua/src/llimits.h	217;"	d
LUA_MININTEGER	vendor/lua/src/luaconf.h	520;"	d
LUA_MININTEGER	vendor/lua/src/luaconf.h	530;"	d
LUA_MININTEGER	vendor/lua/src/luaconf.h	544;"	d
LUA_MININTEGER	vendor/lua/src/luaconf.h	555;"	d
LUA_MINSTACK	vendor/lua/src/lua.h	80;"	d
LUA_MULTRET	vendor/lua/src/lua.h	36;"	d
LUA_NOREF	vendor/lua/src/lauxlib.h	86;"	d
LUA_NUMBER	vendor/lua/src/luaconf.h	427;"	d
LUA_NUMBER	vendor/lua/src/luaconf.h	443;"	d
LUA_NUMBER	vendor/lua/src/luaconf.h	458;"	d
LUA_NUMBER_FMT	vendor/lua/src/luaconf.h	434;"	d
LUA_NUMBER_FMT	vendor/lua/src/luaconf.h	450;"	d
LUA_NUMBER_FMT	vendor/lua/src/luaconf.h	465;"	d
LUA_NUMBER_FRMLEN	vendor/lua/src/luaconf.h	433;"	d
LUA_NUMBER_FRMLEN	vendor/lua/src/luaconf.h	449;"	d
LUA_NUMBER_FRMLEN	vendor/lua/src/luaconf.h	464;"	d
LUA_NUMTAGS	vendor/lua/src/lua.h	416;"	d
LUA_NUMTYPES	vendor/lua/src/lua.h	75;"	d
LUA_O	vendor/lua/src/Makefile	/^LUA_O=	lua.o$/;"	m
LUA_OFSEP	vendor/lua/src/loadlib.c	55;"	d	file:
LUA_OK	vendor/lua/src/lua.h	49;"	d
LUA_OPADD	vendor/lua/src/lua.h	205;"	d
LUA_OPBAND	vendor/lua/src/lua.h	212;"	d
LUA_OPBNOT	vendor/lua/src/lua.h	218;"	d
LUA_OPBOR	vendor/lua/src/lua.h	213;"	d
LUA_OPBXOR	vendor/lua/src/lua.h	214;"	d
LUA_OPDIV	vendor/lua/src/lua.h	210;"	d
LUA_OPEQ	vendor/lua/src/lua.h	222;"	d
LUA_OPIDIV	vendor/lua/src/lua.h	211;"	d
LUA_OPLE	vendor/lua/src/lua.h	224;"	d
LUA_OPLT	vendor/lua/src/lua.h	223;"	d
LUA_OPMOD	vendor/lua/src/lua.h	208;"	d
LUA_OPMUL	vendor/lua/src/lua.h	207;"	d
LUA_OPPOW	vendor/lua/src/lua.h	209;"	d
LUA_OPSHL	vendor/lua/src/lua.h	215;"	d
LUA_OPSHR	vendor/lua/src/lua.h	216;"	d
LUA_OPSUB	vendor/lua/src/lua.h	206;"	d
LUA_OPUNM	vendor/lua/src/lua.h	217;"	d
LUA_OSLIBNAME	vendor/lua/src/lualib.h	29;"	d
LUA_PATH_DEFAULT	vendor/lua/src/luaconf.h	204;"	d
LUA_PATH_DEFAULT	vendor/lua/src/luaconf.h	225;"	d
LUA_PATH_MARK	vendor/lua/src/luaconf.h	179;"	d
LUA_PATH_SEP	vendor/lua/src/luaconf.h	178;"	d
LUA_PATH_VAR	vendor/lua/src/loadlib.c	273;"	d	file:
LUA_POF	vendor/lua/src/loadlib.c	52;"	d	file:
LUA_PRELOAD_TABLE	vendor/lua/src/lauxlib.h	35;"	d
LUA_PROGNAME	vendor/lua/src/lua.c	25;"	d	file:
LUA_PROMPT	vendor/lua/src/lua.c	370;"	d	file:
LUA_PROMPT2	vendor/lua/src/lua.c	371;"	d	file:
LUA_REFNIL	vendor/lua/src/lauxlib.h	87;"	d
LUA_REGISTRYINDEX	vendor/lua/src/lua.h	44;"	d
LUA_RELEASE	vendor/lua/src/lua.h	27;"	d
LUA_RIDX_GLOBALS	vendor/lua/src/lua.h	85;"	d
LUA_RIDX_LAST	vendor/lua/src/lua.h	86;"	d
LUA_RIDX_MAINTHREAD	vendor/lua/src/lua.h	84;"	d
LUA_ROOT	vendor/lua/src/luaconf.h	220;"	d
LUA_SHRDIR	vendor/lua/src/luaconf.h	201;"	d
LUA_SIGNATURE	vendor/lua/src/lua.h	33;"	d
LUA_STRFTIMEOPTIONS	vendor/lua/src/loslib.c	45;"	d	file:
LUA_STRFTIMEOPTIONS	vendor/lua/src/loslib.c	47;"	d	file:
LUA_STRFTIMEOPTIONS	vendor/lua/src/loslib.c	49;"	d	file:
LUA_STRLIBNAME	vendor/lua/src/lualib.h	32;"	d
LUA_T	vendor/lua/src/Makefile	/^LUA_T=	lua$/;"	m
LUA_TABLIBNAME	vendor/lua/src/lualib.h	23;"	d
LUA_TBOOLEAN	vendor/lua/src/lua.h	66;"	d
LUA_TDEADKEY	vendor/lua/src/lobject.h	24;"	d
LUA_TFUNCTION	vendor/lua/src/lua.h	71;"	d
LUA_TLIGHTUSERDATA	vendor/lua/src/lua.h	67;"	d
LUA_TMPNAMBUFSIZE	vendor/lua/src/loslib.c	117;"	d	file:
LUA_TMPNAMBUFSIZE	vendor/lua/src/loslib.c	132;"	d	file:
LUA_TMPNAMTEMPLATE	vendor/lua/src/loslib.c	120;"	d	file:
LUA_TNIL	vendor/lua/src/lua.h	65;"	d
LUA_TNONE	vendor/lua/src/lua.h	63;"	d
LUA_TNUMBER	vendor/lua/src/lua.h	68;"	d
LUA_TOTALTYPES	vendor/lua/src/lobject.h	31;"	d
LUA_TPROTO	vendor/lua/src/lobject.h	23;"	d
LUA_TSTRING	vendor/lua/src/lua.h	69;"	d
LUA_TTABLE	vendor/lua/src/lua.h	70;"	d
LUA_TTHREAD	vendor/lua/src/lua.h	73;"	d
LUA_TUPVAL	vendor/lua/src/lobject.h	22;"	d
LUA_TUSERDATA	vendor/lua/src/lua.h	72;"	d
LUA_UNSIGNED	vendor/lua/src/luaconf.h	506;"	d
LUA_UNSIGNEDBITS	vendor/lua/src/luaconf.h	509;"	d
LUA_USE_C89	vendor/lua/src/luaconf.h	57;"	d
LUA_USE_CTYPE	vendor/lua/src/lctype.h	23;"	d
LUA_USE_CTYPE	vendor/lua/src/lctype.h	26;"	d
LUA_USE_DLOPEN	vendor/lua/src/luaconf.h	63;"	d
LUA_USE_DLOPEN	vendor/lua/src/luaconf.h	69;"	d
LUA_USE_JUMPTABLE	vendor/lua/src/lvm.c	40;"	d	file:
LUA_USE_JUMPTABLE	vendor/lua/src/lvm.c	42;"	d	file:
LUA_USE_POSIX	vendor/lua/src/luaconf.h	62;"	d
LUA_USE_POSIX	vendor/lua/src/luaconf.h	68;"	d
LUA_USE_WINDOWS	vendor/lua/src/luaconf.h	51;"	d
LUA_UTF8LIBNAME	vendor/lua/src/lualib.h	35;"	d
LUA_VABSTKEY	vendor/lua/src/lobject.h	176;"	d
LUA_VCCL	vendor/lua/src/lobject.h	579;"	d
LUA_VDIR	vendor/lua/src/luaconf.h	193;"	d
LUA_VEMPTY	vendor/lua/src/lobject.h	173;"	d
LUA_VERSION	vendor/lua/src/lua.h	26;"	d
LUA_VERSION_MAJOR	vendor/lua/src/lua.h	19;"	d
LUA_VERSION_MINOR	vendor/lua/src/lua.h	20;"	d
LUA_VERSION_NUM	vendor/lua/src/lua.h	23;"	d
LUA_VERSION_RELEASE	vendor/lua/src/lua.h	21;"	d
LUA_VERSION_RELEASE_NUM	vendor/lua/src/lua.h	24;"	d
LUA_VERSUFFIX	vendor/lua/src/lualib.h	15;"	d
LUA_VFALSE	vendor/lua/src/lobject.h	226;"	d
LUA_VLCF	vendor/lua/src/lobject.h	578;"	d
LUA_VLCL	vendor/lua/src/lobject.h	577;"	d
LUA_VLIGHTUSERDATA	vendor/lua/src/lobject.h	416;"	d
LUA_VLNGSTR	vendor/lua/src/lobject.h	348;"	d
LUA_VNIL	vendor/lua/src/lobject.h	170;"	d
LUA_VNUMFLT	vendor/lua/src/lobject.h	311;"	d
LUA_VNUMINT	vendor/lua/src/lobject.h	310;"	d
LUA_VPROTO	vendor/lua/src/lobject.h	496;"	d
LUA_VSHRSTR	vendor/lua/src/lobject.h	347;"	d
LUA_VTABLE	vendor/lua/src/lobject.h	665;"	d
LUA_VTHREAD	vendor/lua/src/lobject.h	249;"	d
LUA_VTRUE	vendor/lua/src/lobject.h	227;"	d
LUA_VUPVAL	vendor/lua/src/lobject.h	573;"	d
LUA_VUSERDATA	vendor/lua/src/lobject.h	418;"	d
LUA_YIELD	vendor/lua/src/lua.h	50;"	d
LX	vendor/lua/src/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	vendor/lua/src/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_DEBUG	logger.c	20;"	d	file:
L_DEBUG	logger.c	25;"	d	file:
L_ESC	vendor/lua/src/lstrlib.c	382;"	d	file:
L_FMTFLAGS	vendor/lua/src/lstrlib.c	1094;"	d	file:
L_INTHASBITS	vendor/lua/src/lopcodes.h	68;"	d
L_MAXLENNUM	vendor/lua/src/liolib.c	422;"	d	file:
L_MAXLENNUM	vendor/lua/src/lobject.c	220;"	d	file:
L_MODEEXT	vendor/lua/src/liolib.c	36;"	d	file:
L_NBFD	vendor/lua/src/lstrlib.c	1010;"	d	file:
L_STRFTIMEC89	vendor/lua/src/loslib.c	34;"	d	file:
L_STRFTIMEC99	vendor/lua/src/loslib.c	37;"	d	file:
L_STRFTIMEWIN	vendor/lua/src/loslib.c	41;"	d	file:
Labeldesc	vendor/lua/src/lparser.h	/^typedef struct Labeldesc {$/;"	s
Labeldesc	vendor/lua/src/lparser.h	/^} Labeldesc;$/;"	t	typeref:struct:Labeldesc
Labellist	vendor/lua/src/lparser.h	/^typedef struct Labellist {$/;"	s
Labellist	vendor/lua/src/lparser.h	/^} Labellist;$/;"	t	typeref:struct:Labellist
LexState	vendor/lua/src/llex.h	/^typedef struct LexState {$/;"	s
LexState	vendor/lua/src/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LoadF	vendor/lua/src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	vendor/lua/src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadS	vendor/lua/src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	vendor/lua/src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	vendor/lua/src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon45	file:
LocVar	vendor/lua/src/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	vendor/lua/src/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' makeinfo$/;"	m
MAKEINFO	doc/Makefile	/^MAKEINFO = ${SHELL} '\/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/missing' makeinfo$/;"	m
MANS	doc/Makefile	/^MANS = $(man_MANS)$/;"	m
MASK	vendor/lua/src/lctype.h	46;"	d
MASK0	vendor/lua/src/lopcodes.h	108;"	d
MASK1	vendor/lua/src/lopcodes.h	105;"	d
MAXABITS	vendor/lua/src/ltable.c	46;"	d	file:
MAXALIGN	vendor/lua/src/lstrlib.c	1361;"	d	file:
MAXARGLINE	vendor/lua/src/liolib.c	352;"	d	file:
MAXARG_A	vendor/lua/src/lopcodes.h	95;"	d
MAXARG_Ax	vendor/lua/src/lopcodes.h	81;"	d
MAXARG_Ax	vendor/lua/src/lopcodes.h	83;"	d
MAXARG_B	vendor/lua/src/lopcodes.h	96;"	d
MAXARG_Bx	vendor/lua/src/lopcodes.h	72;"	d
MAXARG_Bx	vendor/lua/src/lopcodes.h	74;"	d
MAXARG_C	vendor/lua/src/lopcodes.h	97;"	d
MAXARG_sJ	vendor/lua/src/lopcodes.h	87;"	d
MAXARG_sJ	vendor/lua/src/lopcodes.h	89;"	d
MAXASIZE	vendor/lua/src/ltable.c	54;"	d	file:
MAXBY10	vendor/lua/src/lobject.c	273;"	d	file:
MAXCCALLS	vendor/lua/src/lstrlib.c	378;"	d	file:
MAXDELTA	vendor/lua/src/lfunc.c	162;"	d	file:
MAXHBITS	vendor/lua/src/ltable.c	60;"	d	file:
MAXHSIZE	vendor/lua/src/ltable.c	68;"	d	file:
MAXINDEXRK	vendor/lua/src/lopcodes.h	175;"	d
MAXINTFITSF	vendor/lua/src/lvm.c	71;"	d	file:
MAXINTSIZE	vendor/lua/src/lstrlib.c	1336;"	d	file:
MAXIWTHABS	vendor/lua/src/ldebug.h	35;"	d
MAXLASTD	vendor/lua/src/lobject.c	274;"	d	file:
MAXMISS	vendor/lua/src/lfunc.h	42;"	d
MAXNUMBER2STR	vendor/lua/src/lobject.c	349;"	d	file:
MAXPATHLEN	memcached.h	35;"	d
MAXPATHLEN	tls.c	12;"	d	file:
MAXREGS	vendor/lua/src/lcode.c	34;"	d	file:
MAXSIGDIG	vendor/lua/src/lobject.c	159;"	d	file:
MAXSIZE	vendor/lua/src/lstrlib.c	49;"	d	file:
MAXSTRTB	vendor/lua/src/lstring.c	28;"	d	file:
MAXTAGLOOP	vendor/lua/src/lvm.c	49;"	d	file:
MAXUNICODE	vendor/lua/src/lutf8lib.c	24;"	d	file:
MAXUPVAL	vendor/lua/src/lfunc.h	29;"	d
MAXUTF	vendor/lua/src/lutf8lib.c	26;"	d	file:
MAXVARS	vendor/lua/src/lparser.c	35;"	d	file:
MAX_ENTRIES	authfile.c	18;"	d	file:
MAX_ENTRY_LEN	authfile.c	16;"	d	file:
MAX_ENTRY_LEN	sasl_defs.c	43;"	d	file:
MAX_FORMAT	vendor/lua/src/lstrlib.c	1101;"	d	file:
MAX_INT	vendor/lua/src/llimits.h	53;"	d
MAX_ITEM	vendor/lua/src/lstrlib.c	1089;"	d	file:
MAX_ITEMF	vendor/lua/src/lstrlib.c	1078;"	d	file:
MAX_LMEM	vendor/lua/src/llimits.h	50;"	d
MAX_LOGGER_SLEEP	logger.c	762;"	d	file:
MAX_LRU_MAINTAINER_SLEEP	items.c	1582;"	d	file:
MAX_LUMEM	vendor/lua/src/llimits.h	48;"	d
MAX_MAINTCRAWL_WAIT	crawler.c	106;"	d	file:
MAX_MAINTCRAWL_WAIT	items.c	1461;"	d	file:
MAX_NAMELEN	proxy.h	298;"	d
MAX_NUMBER_OF_SLAB_CLASSES	memcached.h	117;"	d
MAX_PIPE_EVENTS	thread.c	536;"	d	file:
MAX_PORTLEN	proxy.h	299;"	d
MAX_READ_WRITE_SIZE	t/lib/MemcachedTest.pm	/^use constant MAX_READ_WRITE_SIZE => 16384;$/;"	c
MAX_REQ_TOKENS	proxy.h	286;"	d
MAX_RESP_PER_BUNDLE	memcached.h	772;"	d
MAX_SASL_MECH_LEN	sasl_defs.h	5;"	d
MAX_SENDBUF_SIZE	memcached.h	83;"	d
MAX_SIZE	vendor/lua/src/llimits.h	44;"	d
MAX_SIZET	vendor/lua/src/lauxlib.c	32;"	d	file:
MAX_SIZET	vendor/lua/src/llimits.h	41;"	d
MAX_SIZET	vendor/lua/src/lstrlib.c	47;"	d	file:
MAX_TOKENS	proto_text.c	240;"	d	file:
MAX_VERBOSITY_LEVEL	memcached.h	430;"	d
MC	vendor/lua/src/lstrlib.c	1342;"	d	file:
MC::Client	t/binary-extstore.t	/^package MC::Client;$/;"	p
MC::Client	t/binary-sasl.t	/^package MC::Client;$/;"	p
MC::Client	t/binary.t	/^package MC::Client;$/;"	p
MC::Error	t/binary-extstore.t	/^package MC::Error;$/;"	p
MC::Error	t/binary-sasl.t	/^package MC::Error;$/;"	p
MC::Error	t/binary.t	/^package MC::Error;$/;"	p
MCMC_CODE_DELETED	vendor/mcmc/mcmc.h	17;"	d
MCMC_CODE_EXISTS	vendor/mcmc/mcmc.h	16;"	d
MCMC_CODE_MISS	vendor/mcmc/mcmc.h	26;"	d
MCMC_CODE_NOP	vendor/mcmc/mcmc.h	23;"	d
MCMC_CODE_NOT_FOUND	vendor/mcmc/mcmc.h	20;"	d
MCMC_CODE_NOT_STORED	vendor/mcmc/mcmc.h	21;"	d
MCMC_CODE_OK	vendor/mcmc/mcmc.h	22;"	d
MCMC_CODE_STORED	vendor/mcmc/mcmc.h	15;"	d
MCMC_CODE_TOUCHED	vendor/mcmc/mcmc.h	18;"	d
MCMC_CODE_VERSION	vendor/mcmc/mcmc.h	19;"	d
MCMC_CONNECTED	vendor/mcmc/mcmc.h	7;"	d
MCMC_CONNECTING	vendor/mcmc/mcmc.h	8;"	d
MCMC_ERR	vendor/mcmc/mcmc.h	5;"	d
MCMC_ERROR_CODE_MAX	vendor/mcmc/mcmc.h	44;"	d
MCMC_ERROR_MSG_MAX	vendor/mcmc/mcmc.h	45;"	d
MCMC_HAS_RESULT	vendor/mcmc/mcmc.h	11;"	d
MCMC_HEADER	vendor/mcmc/mcmc.h	2;"	d
MCMC_NOT_CONNECTED	vendor/mcmc/mcmc.h	6;"	d
MCMC_OK	vendor/mcmc/mcmc.h	4;"	d
MCMC_OPTION_BLANK	vendor/mcmc/mcmc.h	38;"	d
MCMC_OPTION_NONBLOCK	vendor/mcmc/mcmc.h	39;"	d
MCMC_OPTION_TCP_KEEPALIVE	vendor/mcmc/mcmc.h	40;"	d
MCMC_PARSE_ERROR	vendor/mcmc/mcmc.h	25;"	d
MCMC_PARSE_ERROR_SHORT	vendor/mcmc/mcmc.h	24;"	d
MCMC_RESP_END	vendor/mcmc/mcmc.h	34;"	d
MCMC_RESP_GENERIC	vendor/mcmc/mcmc.h	33;"	d
MCMC_RESP_GET	vendor/mcmc/mcmc.h	30;"	d
MCMC_RESP_META	vendor/mcmc/mcmc.h	31;"	d
MCMC_RESP_NUMERIC	vendor/mcmc/mcmc.h	36;"	d
MCMC_RESP_STAT	vendor/mcmc/mcmc.h	32;"	d
MCMC_RESP_VERSION	vendor/mcmc/mcmc.h	35;"	d
MCMC_WANT_READ	vendor/mcmc/mcmc.h	10;"	d
MCMC_WANT_WRITE	vendor/mcmc/mcmc.h	9;"	d
MCP_ATTACH_UPVALUE	proxy.h	79;"	d
MCP_BACKEND_UPVALUE	proxy.h	80;"	d
MCP_PARSER_KEY	proxy.h	284;"	d
MCP_REQUEST_MAXLEN	proxy.h	73;"	d
MCP_THREAD_UPVALUE	proxy.h	78;"	d
MC_RESP_IOVCOUNT	memcached.h	742;"	d
MEMCACHED_ASSOC_DELETE	trace.h	7;"	d
MEMCACHED_ASSOC_DELETE_ENABLED	trace.h	8;"	d
MEMCACHED_ASSOC_FIND	trace.h	9;"	d
MEMCACHED_ASSOC_FIND_ENABLED	trace.h	10;"	d
MEMCACHED_ASSOC_INSERT	trace.h	11;"	d
MEMCACHED_ASSOC_INSERT_ENABLED	trace.h	12;"	d
MEMCACHED_COMMAND_ADD	trace.h	13;"	d
MEMCACHED_COMMAND_ADD_ENABLED	trace.h	14;"	d
MEMCACHED_COMMAND_APPEND	trace.h	15;"	d
MEMCACHED_COMMAND_APPEND_ENABLED	trace.h	16;"	d
MEMCACHED_COMMAND_CAS	trace.h	17;"	d
MEMCACHED_COMMAND_CAS_ENABLED	trace.h	18;"	d
MEMCACHED_COMMAND_DECR	trace.h	19;"	d
MEMCACHED_COMMAND_DECR_ENABLED	trace.h	20;"	d
MEMCACHED_COMMAND_DELETE	trace.h	21;"	d
MEMCACHED_COMMAND_DELETE_ENABLED	trace.h	22;"	d
MEMCACHED_COMMAND_GET	trace.h	23;"	d
MEMCACHED_COMMAND_GET_ENABLED	trace.h	24;"	d
MEMCACHED_COMMAND_INCR	trace.h	27;"	d
MEMCACHED_COMMAND_INCR_ENABLED	trace.h	28;"	d
MEMCACHED_COMMAND_PREPEND	trace.h	29;"	d
MEMCACHED_COMMAND_PREPEND_ENABLED	trace.h	30;"	d
MEMCACHED_COMMAND_REPLACE	trace.h	31;"	d
MEMCACHED_COMMAND_REPLACE_ENABLED	trace.h	32;"	d
MEMCACHED_COMMAND_SET	trace.h	33;"	d
MEMCACHED_COMMAND_SET_ENABLED	trace.h	34;"	d
MEMCACHED_COMMAND_TOUCH	trace.h	25;"	d
MEMCACHED_COMMAND_TOUCH_ENABLED	trace.h	26;"	d
MEMCACHED_CONN_ALLOCATE	trace.h	35;"	d
MEMCACHED_CONN_ALLOCATE_ENABLED	trace.h	36;"	d
MEMCACHED_CONN_CREATE	trace.h	37;"	d
MEMCACHED_CONN_CREATE_ENABLED	trace.h	38;"	d
MEMCACHED_CONN_DESTROY	trace.h	39;"	d
MEMCACHED_CONN_DESTROY_ENABLED	trace.h	40;"	d
MEMCACHED_CONN_DISPATCH	trace.h	41;"	d
MEMCACHED_CONN_DISPATCH_ENABLED	trace.h	42;"	d
MEMCACHED_CONN_RELEASE	trace.h	43;"	d
MEMCACHED_CONN_RELEASE_ENABLED	trace.h	44;"	d
MEMCACHED_ITEM_LINK	trace.h	45;"	d
MEMCACHED_ITEM_LINK_ENABLED	trace.h	46;"	d
MEMCACHED_ITEM_REMOVE	trace.h	47;"	d
MEMCACHED_ITEM_REMOVE_ENABLED	trace.h	48;"	d
MEMCACHED_ITEM_REPLACE	trace.h	49;"	d
MEMCACHED_ITEM_REPLACE_ENABLED	trace.h	50;"	d
MEMCACHED_ITEM_UNLINK	trace.h	51;"	d
MEMCACHED_ITEM_UNLINK_ENABLED	trace.h	52;"	d
MEMCACHED_ITEM_UPDATE	trace.h	53;"	d
MEMCACHED_ITEM_UPDATE_ENABLED	trace.h	54;"	d
MEMCACHED_PROCESS_COMMAND_END	trace.h	55;"	d
MEMCACHED_PROCESS_COMMAND_END_ENABLED	trace.h	56;"	d
MEMCACHED_PROCESS_COMMAND_START	trace.h	57;"	d
MEMCACHED_PROCESS_COMMAND_START_ENABLED	trace.h	58;"	d
MEMCACHED_SLABS_ALLOCATE	trace.h	59;"	d
MEMCACHED_SLABS_ALLOCATE_ENABLED	trace.h	60;"	d
MEMCACHED_SLABS_ALLOCATE_FAILED	trace.h	61;"	d
MEMCACHED_SLABS_ALLOCATE_FAILED_ENABLED	trace.h	62;"	d
MEMCACHED_SLABS_FREE	trace.h	63;"	d
MEMCACHED_SLABS_FREE_ENABLED	trace.h	64;"	d
MEMCACHED_SLABS_SLABCLASS_ALLOCATE	trace.h	65;"	d
MEMCACHED_SLABS_SLABCLASS_ALLOCATE_ENABLED	trace.h	66;"	d
MEMCACHED_SLABS_SLABCLASS_ALLOCATE_FAILED	trace.h	67;"	d
MEMCACHED_SLABS_SLABCLASS_ALLOCATE_FAILED_ENABLED	trace.h	68;"	d
MEMERRMSG	vendor/lua/src/lstring.h	19;"	d
META_CHAR	proto_text.c	26;"	d	file:
META_KEY	proto_text.c	36;"	d	file:
META_SPACE	proto_text.c	21;"	d	file:
MFLAG_MAX_OPAQUE_LENGTH	proto_text.c	893;"	d	file:
MFLAG_MAX_OPT_LENGTH	proto_text.c	892;"	d	file:
MICROSECONDS	proxy_lua.c	545;"	d	file:
MINSIZEARRAY	vendor/lua/src/lmem.c	76;"	d	file:
MINSTRTABSIZE	vendor/lua/src/llimits.h	200;"	d
MIN_BUFFER_SIZE	vendor/mcmc/mcmc.c	25;"	d	file:
MIN_LOGGER_SLEEP	logger.c	763;"	d	file:
MIN_LRU_MAINTAINER_SLEEP	items.c	1583;"	d	file:
MIN_PAGES_FOR_RECLAIM	slab_automove.c	14;"	d	file:
MIN_PAGES_FOR_RECLAIM	slab_automove_extstore.c	14;"	d	file:
MIN_PAGES_FOR_SOURCE	slab_automove.c	13;"	d	file:
MIN_PAGES_FOR_SOURCE	slab_automove_extstore.c	13;"	d	file:
MIN_PAGES_FREE	slab_automove_extstore.c	15;"	d	file:
MIN_PAGES_FREE	storage.c	575;"	d	file:
MIN_RECV_BYTES	t/binary-extstore.t	/^use constant MIN_RECV_BYTES   => length(pack(RES_PKT_FMT));$/;"	c
MIN_RECV_BYTES	t/binary-sasl.t	/^use constant MIN_RECV_BYTES   => length(pack(RES_PKT_FMT));$/;"	c
MIN_RECV_BYTES	t/binary.t	/^use constant MIN_RECV_BYTES   => length(pack(RES_PKT_FMT));$/;"	c
MIN_RECV_BYTES	t/udp.t	/^use constant MIN_RECV_BYTES   => length(pack(RES_PKT_FMT));$/;"	c
MIN_STORAGE_COMPACT_SLEEP	storage.c	768;"	d	file:
MKDIR	vendor/lua/Makefile	/^MKDIR= mkdir -p$/;"	m
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	doc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MODE_DEFAULT	proxy_ring_hash.c	123;"	d	file:
MODE_EVCACHE	proxy_ring_hash.c	126;"	d	file:
MODE_KETAMA	proxy_ring_hash.c	124;"	d	file:
MODE_TWEMPROXY	proxy_ring_hash.c	125;"	d	file:
MOSTLYCLEANFILES	Makefile	/^MOSTLYCLEANFILES = *.gcov *.gcno *.gcda *.tcov$/;"	m
MOSTLYCLEANFILES	doc/Makefile	/^MOSTLYCLEANFILES = $/;"	m
MOVE_BUSY	slabs.c	/^    MOVE_PASS=0, MOVE_FROM_SLAB, MOVE_FROM_LRU, MOVE_BUSY, MOVE_LOCKED$/;"	e	enum:move_status	file:
MOVE_FROM_LRU	slabs.c	/^    MOVE_PASS=0, MOVE_FROM_SLAB, MOVE_FROM_LRU, MOVE_BUSY, MOVE_LOCKED$/;"	e	enum:move_status	file:
MOVE_FROM_SLAB	slabs.c	/^    MOVE_PASS=0, MOVE_FROM_SLAB, MOVE_FROM_LRU, MOVE_BUSY, MOVE_LOCKED$/;"	e	enum:move_status	file:
MOVE_LOCKED	slabs.c	/^    MOVE_PASS=0, MOVE_FROM_SLAB, MOVE_FROM_LRU, MOVE_BUSY, MOVE_LOCKED$/;"	e	enum:move_status	file:
MOVE_PASS	slabs.c	/^    MOVE_PASS=0, MOVE_FROM_SLAB, MOVE_FROM_LRU, MOVE_BUSY, MOVE_LOCKED$/;"	e	enum:move_status	file:
MURMUR3_HASH	hash.h	/^    JENKINS_HASH=0, MURMUR3_HASH, XXH3_HASH$/;"	e	enum:hashfunc_type
MURMURHASH3_H	murmur3_hash.h	6;"	d
MYCFLAGS	vendor/lua/src/Makefile	/^MYCFLAGS=$/;"	m
MYINT	vendor/lua/src/lundump.h	24;"	d
MYLDFLAGS	vendor/lua/src/Makefile	/^MYLDFLAGS=$/;"	m
MYLIBS	vendor/lua/src/Makefile	/^MYLIBS=$/;"	m
MYOBJS	vendor/lua/src/Makefile	/^MYOBJS=$/;"	m
MatchState	vendor/lua/src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	vendor/lua/src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
Mbuffer	vendor/lua/src/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	vendor/lua/src/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
Memcached::Handle	t/lib/MemcachedTest.pm	/^package Memcached::Handle;$/;"	p
MemcachedTest	t/lib/MemcachedTest.pm	/^package MemcachedTest;$/;"	p
MurmurHash3_x86_32	murmur3_hash.c	/^uint32_t MurmurHash3_x86_32 ( const void * key, size_t length)$/;"	f
NANOSECONDS	proxy_lua.c	544;"	d	file:
NB	vendor/lua/src/lstrlib.c	1339;"	d	file:
NBITS	vendor/lua/src/lvm.c	764;"	d	file:
NBM	vendor/lua/src/lvm.c	58;"	d	file:
NDEBUG	testapp.c	2;"	d	file:
NDEBUG	vendor/lua/src/llimits.h	91;"	d
NONA	vendor/lua/src/lctype.c	22;"	d	file:
NONA	vendor/lua/src/lctype.c	24;"	d	file:
NON_NUMERIC	memcached.h	/^    OK, NON_NUMERIC, EOM, DELTA_ITEM_NOT_FOUND, DELTA_ITEM_CAS_MISMATCH$/;"	e	enum:delta_result_type
NOREPLYLEN	proxy_request.c	226;"	d	file:
NOREPLYSTR	proxy_request.c	225;"	d	file:
NORMAL_CLOSE	memcached.h	/^    NORMAL_CLOSE,$/;"	e	enum:close_reasons
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	doc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	doc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOT_FOUND	memcached.h	/^    NOT_STORED=0, STORED, EXISTS, NOT_FOUND, TOO_LARGE, NO_MEMORY$/;"	e	enum:store_item_type
NOT_STOP	memcached.h	/^    NOT_STOP,$/;"	e	enum:stop_reasons
NOT_STORED	memcached.h	/^    NOT_STORED=0, STORED, EXISTS, NOT_FOUND, TOO_LARGE, NO_MEMORY$/;"	e	enum:store_item_type
NO_JUMP	vendor/lua/src/lcode.h	20;"	d
NO_MEMORY	memcached.h	/^    NOT_STORED=0, STORED, EXISTS, NOT_FOUND, TOO_LARGE, NO_MEMORY$/;"	e	enum:store_item_type
NO_REG	vendor/lua/src/lopcodes.h	182;"	d
NREAD_ADD	memcached.h	269;"	d
NREAD_APPEND	memcached.h	272;"	d
NREAD_CAS	memcached.h	274;"	d
NREAD_PREPEND	memcached.h	273;"	d
NREAD_REPLACE	memcached.h	271;"	d
NREAD_SET	memcached.h	270;"	d
NROFF	doc/Makefile	/^NROFF = nroff$/;"	m
NUM_OPCODES	vendor/lua/src/lopcodes.h	312;"	d
NUM_RESERVED	vendor/lua/src/llex.h	46;"	d
Node	vendor/lua/src/lobject.h	/^typedef union Node {$/;"	u
Node	vendor/lua/src/lobject.h	/^} Node;$/;"	t	typeref:union:Node
NodeKey	vendor/lua/src/lobject.h	/^  struct NodeKey {$/;"	s	union:Node
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	doc/Makefile	/^OBJEXT = o$/;"	m
OBJ_IO_READ	extstore.h	/^    OBJ_IO_READ = 0,$/;"	e	enum:obj_io_mode
OBJ_IO_WRITE	extstore.h	/^    OBJ_IO_WRITE,$/;"	e	enum:obj_io_mode
OFFSET_sBx	vendor/lua/src/lopcodes.h	77;"	d
OFFSET_sC	vendor/lua/src/lopcodes.h	98;"	d
OFFSET_sJ	vendor/lua/src/lopcodes.h	92;"	d
OK	memcached.h	/^    OK, NON_NUMERIC, EOM, DELTA_ITEM_NOT_FOUND, DELTA_ITEM_CAS_MISMATCH$/;"	e	enum:delta_result_type
OPENSSL_CFLAGS	Makefile	/^OPENSSL_CFLAGS = $/;"	m
OPENSSL_CFLAGS	doc/Makefile	/^OPENSSL_CFLAGS = $/;"	m
OPENSSL_LIBS	Makefile	/^OPENSSL_LIBS = $/;"	m
OPENSSL_LIBS	doc/Makefile	/^OPENSSL_LIBS = $/;"	m
OPR_ADD	vendor/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	vendor/lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_BAND	vendor/lua/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BNOT	vendor/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_BOR	vendor/lua/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BXOR	vendor/lua/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_CONCAT	vendor/lua/src/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	vendor/lua/src/lcode.h	/^  OPR_DIV, OPR_IDIV,$/;"	e	enum:BinOpr
OPR_EQ	vendor/lua/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_GE	vendor/lua/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	vendor/lua/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_IDIV	vendor/lua/src/lcode.h	/^  OPR_DIV, OPR_IDIV,$/;"	e	enum:BinOpr
OPR_LE	vendor/lua/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_LEN	vendor/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	vendor/lua/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_MINUS	vendor/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	vendor/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	vendor/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	vendor/lua/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_NOBINOPR	vendor/lua/src/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	vendor/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	vendor/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	vendor/lua/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	vendor/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SHL	vendor/lua/src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SHR	vendor/lua/src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SUB	vendor/lua/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OP_ADD	vendor/lua/src/lopcodes.h	/^OP_ADD,\/*	A B C	R[A] := R[B] + R[C]				*\/$/;"	e	enum:__anon43
OP_ADDI	vendor/lua/src/lopcodes.h	/^OP_ADDI,\/*	A B sC	R[A] := R[B] + sC				*\/$/;"	e	enum:__anon43
OP_ADDK	vendor/lua/src/lopcodes.h	/^OP_ADDK,\/*	A B C	R[A] := R[B] + K[C]:number			*\/$/;"	e	enum:__anon43
OP_BAND	vendor/lua/src/lopcodes.h	/^OP_BAND,\/*	A B C	R[A] := R[B] & R[C]				*\/$/;"	e	enum:__anon43
OP_BANDK	vendor/lua/src/lopcodes.h	/^OP_BANDK,\/*	A B C	R[A] := R[B] & K[C]:integer			*\/$/;"	e	enum:__anon43
OP_BNOT	vendor/lua/src/lopcodes.h	/^OP_BNOT,\/*	A B	R[A] := ~R[B]					*\/$/;"	e	enum:__anon43
OP_BOR	vendor/lua/src/lopcodes.h	/^OP_BOR,\/*	A B C	R[A] := R[B] | R[C]				*\/$/;"	e	enum:__anon43
OP_BORK	vendor/lua/src/lopcodes.h	/^OP_BORK,\/*	A B C	R[A] := R[B] | K[C]:integer			*\/$/;"	e	enum:__anon43
OP_BXOR	vendor/lua/src/lopcodes.h	/^OP_BXOR,\/*	A B C	R[A] := R[B] ~ R[C]				*\/$/;"	e	enum:__anon43
OP_BXORK	vendor/lua/src/lopcodes.h	/^OP_BXORK,\/*	A B C	R[A] := R[B] ~ K[C]:integer			*\/$/;"	e	enum:__anon43
OP_CALL	vendor/lua/src/lopcodes.h	/^OP_CALL,\/*	A B C	R[A], ... ,R[A+C-2] := R[A](R[A+1], ... ,R[A+B-1]) *\/$/;"	e	enum:__anon43
OP_CLOSE	vendor/lua/src/lopcodes.h	/^OP_CLOSE,\/*	A	close all upvalues >= R[A]			*\/$/;"	e	enum:__anon43
OP_CLOSURE	vendor/lua/src/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R[A] := closure(KPROTO[Bx])			*\/$/;"	e	enum:__anon43
OP_CONCAT	vendor/lua/src/lopcodes.h	/^OP_CONCAT,\/*	A B	R[A] := R[A].. ... ..R[A + B - 1]		*\/$/;"	e	enum:__anon43
OP_DIV	vendor/lua/src/lopcodes.h	/^OP_DIV,\/*	A B C	R[A] := R[B] \/ R[C]				*\/$/;"	e	enum:__anon43
OP_DIVK	vendor/lua/src/lopcodes.h	/^OP_DIVK,\/*	A B C	R[A] := R[B] \/ K[C]:number			*\/$/;"	e	enum:__anon43
OP_EQ	vendor/lua/src/lopcodes.h	/^OP_EQ,\/*	A B k	if ((R[A] == R[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon43
OP_EQI	vendor/lua/src/lopcodes.h	/^OP_EQI,\/*	A sB k	if ((R[A] == sB) ~= k) then pc++		*\/$/;"	e	enum:__anon43
OP_EQK	vendor/lua/src/lopcodes.h	/^OP_EQK,\/*	A B k	if ((R[A] == K[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon43
OP_EXTRAARG	vendor/lua/src/lopcodes.h	/^OP_EXTRAARG\/*	Ax	extra (larger) argument for previous opcode	*\/$/;"	e	enum:__anon43
OP_FORLOOP	vendor/lua/src/lopcodes.h	/^OP_FORLOOP,\/*	A Bx	update counters; if loop continues then pc-=Bx; *\/$/;"	e	enum:__anon43
OP_FORPREP	vendor/lua/src/lopcodes.h	/^OP_FORPREP,\/*	A Bx	<check values and prepare counters>;$/;"	e	enum:__anon43
OP_GEI	vendor/lua/src/lopcodes.h	/^OP_GEI,\/*	A sB k	if ((R[A] >= sB) ~= k) then pc++		*\/$/;"	e	enum:__anon43
OP_GETFIELD	vendor/lua/src/lopcodes.h	/^OP_GETFIELD,\/*	A B C	R[A] := R[B][K[C]:string]			*\/$/;"	e	enum:__anon43
OP_GETI	vendor/lua/src/lopcodes.h	/^OP_GETI,\/*	A B C	R[A] := R[B][C]					*\/$/;"	e	enum:__anon43
OP_GETTABLE	vendor/lua/src/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R[A] := R[B][R[C]]				*\/$/;"	e	enum:__anon43
OP_GETTABUP	vendor/lua/src/lopcodes.h	/^OP_GETTABUP,\/*	A B C	R[A] := UpValue[B][K[C]:string]			*\/$/;"	e	enum:__anon43
OP_GETUPVAL	vendor/lua/src/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R[A] := UpValue[B]				*\/$/;"	e	enum:__anon43
OP_GTI	vendor/lua/src/lopcodes.h	/^OP_GTI,\/*	A sB k	if ((R[A] > sB) ~= k) then pc++			*\/$/;"	e	enum:__anon43
OP_IDIV	vendor/lua/src/lopcodes.h	/^OP_IDIV,\/*	A B C	R[A] := R[B] \/\/ R[C]				*\/$/;"	e	enum:__anon43
OP_IDIVK	vendor/lua/src/lopcodes.h	/^OP_IDIVK,\/*	A B C	R[A] := R[B] \/\/ K[C]:number			*\/$/;"	e	enum:__anon43
OP_JMP	vendor/lua/src/lopcodes.h	/^OP_JMP,\/*	sJ	pc += sJ					*\/$/;"	e	enum:__anon43
OP_LE	vendor/lua/src/lopcodes.h	/^OP_LE,\/*	A B k	if ((R[A] <= R[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon43
OP_LEI	vendor/lua/src/lopcodes.h	/^OP_LEI,\/*	A sB k	if ((R[A] <= sB) ~= k) then pc++		*\/$/;"	e	enum:__anon43
OP_LEN	vendor/lua/src/lopcodes.h	/^OP_LEN,\/*	A B	R[A] := #R[B] (length operator)			*\/$/;"	e	enum:__anon43
OP_LFALSESKIP	vendor/lua/src/lopcodes.h	/^OP_LFALSESKIP,\/*A	R[A] := false; pc++				*\/$/;"	e	enum:__anon43
OP_LOADF	vendor/lua/src/lopcodes.h	/^OP_LOADF,\/*	A sBx	R[A] := (lua_Number)sBx				*\/$/;"	e	enum:__anon43
OP_LOADFALSE	vendor/lua/src/lopcodes.h	/^OP_LOADFALSE,\/*	A	R[A] := false					*\/$/;"	e	enum:__anon43
OP_LOADI	vendor/lua/src/lopcodes.h	/^OP_LOADI,\/*	A sBx	R[A] := sBx					*\/$/;"	e	enum:__anon43
OP_LOADK	vendor/lua/src/lopcodes.h	/^OP_LOADK,\/*	A Bx	R[A] := K[Bx]					*\/$/;"	e	enum:__anon43
OP_LOADKX	vendor/lua/src/lopcodes.h	/^OP_LOADKX,\/*	A	R[A] := K[extra arg]				*\/$/;"	e	enum:__anon43
OP_LOADNIL	vendor/lua/src/lopcodes.h	/^OP_LOADNIL,\/*	A B	R[A], R[A+1], ..., R[A+B] := nil		*\/$/;"	e	enum:__anon43
OP_LOADTRUE	vendor/lua/src/lopcodes.h	/^OP_LOADTRUE,\/*	A	R[A] := true					*\/$/;"	e	enum:__anon43
OP_LT	vendor/lua/src/lopcodes.h	/^OP_LT,\/*	A B k	if ((R[A] <  R[B]) ~= k) then pc++		*\/$/;"	e	enum:__anon43
OP_LTI	vendor/lua/src/lopcodes.h	/^OP_LTI,\/*	A sB k	if ((R[A] < sB) ~= k) then pc++			*\/$/;"	e	enum:__anon43
OP_MMBIN	vendor/lua/src/lopcodes.h	/^OP_MMBIN,\/*	A B C	call C metamethod over R[A] and R[B]		*\/$/;"	e	enum:__anon43
OP_MMBINI	vendor/lua/src/lopcodes.h	/^OP_MMBINI,\/*	A sB C k	call C metamethod over R[A] and sB	*\/$/;"	e	enum:__anon43
OP_MMBINK	vendor/lua/src/lopcodes.h	/^OP_MMBINK,\/*	A B C k		call C metamethod over R[A] and K[B]	*\/$/;"	e	enum:__anon43
OP_MOD	vendor/lua/src/lopcodes.h	/^OP_MOD,\/*	A B C	R[A] := R[B] % R[C]				*\/$/;"	e	enum:__anon43
OP_MODK	vendor/lua/src/lopcodes.h	/^OP_MODK,\/*	A B C	R[A] := R[B] % K[C]:number			*\/$/;"	e	enum:__anon43
OP_MOVE	vendor/lua/src/lopcodes.h	/^OP_MOVE,\/*	A B	R[A] := R[B]					*\/$/;"	e	enum:__anon43
OP_MUL	vendor/lua/src/lopcodes.h	/^OP_MUL,\/*	A B C	R[A] := R[B] * R[C]				*\/$/;"	e	enum:__anon43
OP_MULK	vendor/lua/src/lopcodes.h	/^OP_MULK,\/*	A B C	R[A] := R[B] * K[C]:number			*\/$/;"	e	enum:__anon43
OP_NEWTABLE	vendor/lua/src/lopcodes.h	/^OP_NEWTABLE,\/*	A B C k	R[A] := {}					*\/$/;"	e	enum:__anon43
OP_NOT	vendor/lua/src/lopcodes.h	/^OP_NOT,\/*	A B	R[A] := not R[B]				*\/$/;"	e	enum:__anon43
OP_POW	vendor/lua/src/lopcodes.h	/^OP_POW,\/*	A B C	R[A] := R[B] ^ R[C]				*\/$/;"	e	enum:__anon43
OP_POWK	vendor/lua/src/lopcodes.h	/^OP_POWK,\/*	A B C	R[A] := R[B] ^ K[C]:number			*\/$/;"	e	enum:__anon43
OP_RETURN	vendor/lua/src/lopcodes.h	/^OP_RETURN,\/*	A B C k	return R[A], ... ,R[A+B-2]	(see note)	*\/$/;"	e	enum:__anon43
OP_RETURN0	vendor/lua/src/lopcodes.h	/^OP_RETURN0,\/*		return						*\/$/;"	e	enum:__anon43
OP_RETURN1	vendor/lua/src/lopcodes.h	/^OP_RETURN1,\/*	A	return R[A]					*\/$/;"	e	enum:__anon43
OP_SELF	vendor/lua/src/lopcodes.h	/^OP_SELF,\/*	A B C	R[A+1] := R[B]; R[A] := R[B][RK(C):string]	*\/$/;"	e	enum:__anon43
OP_SETFIELD	vendor/lua/src/lopcodes.h	/^OP_SETFIELD,\/*	A B C	R[A][K[B]:string] := RK(C)			*\/$/;"	e	enum:__anon43
OP_SETI	vendor/lua/src/lopcodes.h	/^OP_SETI,\/*	A B C	R[A][B] := RK(C)				*\/$/;"	e	enum:__anon43
OP_SETLIST	vendor/lua/src/lopcodes.h	/^OP_SETLIST,\/*	A B C k	R[A][C+i] := R[A+i], 1 <= i <= B		*\/$/;"	e	enum:__anon43
OP_SETTABLE	vendor/lua/src/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R[A][R[B]] := RK(C)				*\/$/;"	e	enum:__anon43
OP_SETTABUP	vendor/lua/src/lopcodes.h	/^OP_SETTABUP,\/*	A B C	UpValue[A][K[B]:string] := RK(C)		*\/$/;"	e	enum:__anon43
OP_SETUPVAL	vendor/lua/src/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R[A]				*\/$/;"	e	enum:__anon43
OP_SHL	vendor/lua/src/lopcodes.h	/^OP_SHL,\/*	A B C	R[A] := R[B] << R[C]				*\/$/;"	e	enum:__anon43
OP_SHLI	vendor/lua/src/lopcodes.h	/^OP_SHLI,\/*	A B sC	R[A] := sC << R[B]				*\/$/;"	e	enum:__anon43
OP_SHR	vendor/lua/src/lopcodes.h	/^OP_SHR,\/*	A B C	R[A] := R[B] >> R[C]				*\/$/;"	e	enum:__anon43
OP_SHRI	vendor/lua/src/lopcodes.h	/^OP_SHRI,\/*	A B sC	R[A] := R[B] >> sC				*\/$/;"	e	enum:__anon43
OP_SUB	vendor/lua/src/lopcodes.h	/^OP_SUB,\/*	A B C	R[A] := R[B] - R[C]				*\/$/;"	e	enum:__anon43
OP_SUBK	vendor/lua/src/lopcodes.h	/^OP_SUBK,\/*	A B C	R[A] := R[B] - K[C]:number			*\/$/;"	e	enum:__anon43
OP_TAILCALL	vendor/lua/src/lopcodes.h	/^OP_TAILCALL,\/*	A B C k	return R[A](R[A+1], ... ,R[A+B-1])		*\/$/;"	e	enum:__anon43
OP_TBC	vendor/lua/src/lopcodes.h	/^OP_TBC,\/*	A	mark variable A "to be closed"			*\/$/;"	e	enum:__anon43
OP_TEST	vendor/lua/src/lopcodes.h	/^OP_TEST,\/*	A k	if (not R[A] == k) then pc++			*\/$/;"	e	enum:__anon43
OP_TESTSET	vendor/lua/src/lopcodes.h	/^OP_TESTSET,\/*	A B k	if (not R[B] == k) then pc++ else R[A] := R[B]	*\/$/;"	e	enum:__anon43
OP_TFORCALL	vendor/lua/src/lopcodes.h	/^OP_TFORCALL,\/*	A C	R[A+4], ... ,R[A+3+C] := R[A](R[A+1], R[A+2]);	*\/$/;"	e	enum:__anon43
OP_TFORLOOP	vendor/lua/src/lopcodes.h	/^OP_TFORLOOP,\/*	A Bx	if R[A+2] ~= nil then { R[A]=R[A+2]; pc -= Bx }	*\/$/;"	e	enum:__anon43
OP_TFORPREP	vendor/lua/src/lopcodes.h	/^OP_TFORPREP,\/*	A Bx	create upvalue for R[A + 3]; pc+=Bx		*\/$/;"	e	enum:__anon43
OP_UNM	vendor/lua/src/lopcodes.h	/^OP_UNM,\/*	A B	R[A] := -R[B]					*\/$/;"	e	enum:__anon43
OP_VARARG	vendor/lua/src/lopcodes.h	/^OP_VARARG,\/*	A C	R[A], R[A+1], ..., R[A+C-2] = vararg		*\/$/;"	e	enum:__anon43
OP_VARARGPREP	vendor/lua/src/lopcodes.h	/^OP_VARARGPREP,\/*A	(adjust vararg parameters)			*\/$/;"	e	enum:__anon43
OUTPUT	vendor/lua/src/luac.c	32;"	d	file:
OpCode	vendor/lua/src/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon43
OpMode	vendor/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	g
Output	vendor/lua/src/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
PACKAGE	Makefile	/^PACKAGE = memcached$/;"	m
PACKAGE	config.h	143;"	d
PACKAGE	doc/Makefile	/^PACKAGE = memcached$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = memcached@googlegroups.com$/;"	m
PACKAGE_BUGREPORT	config.h	146;"	d
PACKAGE_BUGREPORT	doc/Makefile	/^PACKAGE_BUGREPORT = memcached@googlegroups.com$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = memcached$/;"	m
PACKAGE_NAME	config.h	149;"	d
PACKAGE_NAME	doc/Makefile	/^PACKAGE_NAME = memcached$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = memcached 1.6.17$/;"	m
PACKAGE_STRING	config.h	152;"	d
PACKAGE_STRING	doc/Makefile	/^PACKAGE_STRING = memcached 1.6.17$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = memcached$/;"	m
PACKAGE_TARNAME	config.h	155;"	d
PACKAGE_TARNAME	doc/Makefile	/^PACKAGE_TARNAME = memcached$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	158;"	d
PACKAGE_URL	doc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 1.6.17$/;"	m
PACKAGE_VERSION	config.h	161;"	d
PACKAGE_VERSION	doc/Makefile	/^PACKAGE_VERSION = 1.6.17$/;"	m
PAGE_BUCKET_CHUNKED	storage.c	16;"	d	file:
PAGE_BUCKET_COMPACT	storage.c	15;"	d	file:
PAGE_BUCKET_DEFAULT	storage.c	14;"	d	file:
PAGE_BUCKET_LOWTTL	storage.c	17;"	d	file:
PARSER_MAXLEN	proxy_request.c	5;"	d	file:
PARSER_MAX_TOKENS	proxy.h	257;"	d
PARTS	proxy_ring_hash.c	241;"	d	file:
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	doc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PAUSEADJ	vendor/lua/src/lgc.c	60;"	d	file:
PAUSE_ALL_THREADS	memcached.h	/^    PAUSE_ALL_THREADS,$/;"	e	enum:pause_thread_types
PAUSE_WORKER_THREADS	memcached.h	/^    PAUSE_WORKER_THREADS = 0,$/;"	e	enum:pause_thread_types
PI	vendor/lua/src/lmathlib.c	25;"	d	file:
PI	vendor/lua/src/lmathlib.c	26;"	d	file:
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	doc/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	doc/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	doc/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PLAT	vendor/lua/Makefile	/^PLAT= guess$/;"	m
PLAT	vendor/lua/src/Makefile	/^PLAT= guess$/;"	m
PLATS	vendor/lua/Makefile	/^PLATS= guess aix bsd c89 freebsd generic linux linux-readline macosx mingw posix solaris$/;"	m
PLATS	vendor/lua/src/Makefile	/^PLATS= guess aix bsd c89 freebsd generic linux linux-readline macosx mingw posix solaris$/;"	m
POLY	crc32c.c	49;"	d	file:
POS	vendor/lua/src/lobject.c	553;"	d	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	doc/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	doc/Makefile	/^POST_UNINSTALL = :$/;"	m
POS_A	vendor/lua/src/lopcodes.h	49;"	d
POS_Ax	vendor/lua/src/lopcodes.h	56;"	d
POS_B	vendor/lua/src/lopcodes.h	51;"	d
POS_Bx	vendor/lua/src/lopcodes.h	54;"	d
POS_C	vendor/lua/src/lopcodes.h	52;"	d
POS_OP	vendor/lua/src/lopcodes.h	47;"	d
POS_k	vendor/lua/src/lopcodes.h	50;"	d
POS_sJ	vendor/lua/src/lopcodes.h	58;"	d
POWER_LARGEST	memcached.h	113;"	d
POWER_SMALLEST	memcached.h	112;"	d
PRE	vendor/lua/src/lobject.c	552;"	d	file:
PREFIX	vendor/mcmc/Makefile	/^PREFIX=\/usr\/local$/;"	m
PREFIX_HASH_SIZE	stats_prefix.h	40;"	d
PREFIX_STATS	stats_prefix.h	/^typedef struct _prefix_stats PREFIX_STATS;$/;"	t	typeref:struct:_prefix_stats
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	doc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	doc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRIME32_1	xxhash.h	1735;"	d
PRIME32_2	xxhash.h	1736;"	d
PRIME32_3	xxhash.h	1737;"	d
PRIME32_4	xxhash.h	1738;"	d
PRIME32_5	xxhash.h	1739;"	d
PRIME64_1	xxhash.h	2277;"	d
PRIME64_2	xxhash.h	2278;"	d
PRIME64_3	xxhash.h	2279;"	d
PRIME64_4	xxhash.h	2280;"	d
PRIME64_5	xxhash.h	2281;"	d
PRING_QUEUE_CQ_ENTRIES	proxy.h	25;"	d
PRING_QUEUE_SQ_ENTRIES	proxy.h	24;"	d
PRINTBIT	vendor/lua/src/lctype.h	41;"	d
PROCESS1	xxhash.h	1905;"	d
PROCESS1_64	xxhash.h	2339;"	d
PROCESS4	xxhash.h	1906;"	d
PROCESS4_64	xxhash.h	2340;"	d
PROCESS8_64	xxhash.h	2341;"	d
PROCESS_MULTIGET	proto_proxy.c	13;"	d	file:
PROCESS_NORMAL	proto_proxy.c	14;"	d	file:
PROFILER	Makefile	/^PROFILER = \/usr\/bin\/gcov$/;"	m
PROFILER	doc/Makefile	/^PROFILER = \/usr\/bin\/gcov$/;"	m
PROFILER_FLAGS	Makefile	/^PROFILER_FLAGS = -fprofile-arcs -ftest-coverage$/;"	m
PROFILER_FLAGS	doc/Makefile	/^PROFILER_FLAGS = -fprofile-arcs -ftest-coverage$/;"	m
PROFILER_LDFLAGS	Makefile	/^PROFILER_LDFLAGS = -lgcov$/;"	m
PROFILER_LDFLAGS	doc/Makefile	/^PROFILER_LDFLAGS = -lgcov$/;"	m
PROGNAME	vendor/lua/src/luac.c	31;"	d	file:
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)$/;"	m
PROTOCOL_BINARY_CMD_ADD	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_ADD = 0x02,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_ADDQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_ADDQ = 0x12,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_APPEND	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_APPEND = 0x0e,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_APPENDQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_APPENDQ = 0x19,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_DECREMENT	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_DECREMENT = 0x06,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_DECREMENTQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_DECREMENTQ = 0x16,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_DELETE	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_DELETE = 0x04,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_DELETEQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_DELETEQ = 0x14,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_FLUSH	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_FLUSH = 0x08,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_FLUSHQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_FLUSHQ = 0x18,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GAT	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GAT = 0x1d,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GATK	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GATK = 0x23,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GATKQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GATKQ = 0x24,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GATQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GATQ = 0x1e,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GET	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GET = 0x00,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GETK	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GETK = 0x0c,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GETKQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GETKQ = 0x0d,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_GETQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_GETQ = 0x09,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_INCREMENT	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_INCREMENT = 0x05,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_INCREMENTQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_INCREMENTQ = 0x15,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_NOOP	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_NOOP = 0x0a,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_PREPEND	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_PREPEND = 0x0f,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_PREPENDQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_PREPENDQ = 0x1a,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_QUIT	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_QUIT = 0x07,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_QUITQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_QUITQ = 0x17,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RAPPEND	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RAPPEND   = 0x33,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RAPPENDQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RAPPENDQ  = 0x34,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RDECR	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RDECR     = 0x3b,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RDECRQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RDECRQ    = 0x3c$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RDELETE	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RDELETE   = 0x37,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RDELETEQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RDELETEQ  = 0x38,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_REPLACE	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_REPLACE = 0x03,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_REPLACEQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_REPLACEQ = 0x13,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RGET	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RGET      = 0x30,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RINCR	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RINCR     = 0x39,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RINCRQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RINCRQ    = 0x3a,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RPREPEND	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RPREPEND  = 0x35,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RPREPENDQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RPREPENDQ = 0x36,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RSET	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RSET      = 0x31,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_RSETQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_RSETQ     = 0x32,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_SASL_AUTH	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_SASL_AUTH = 0x21,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_SASL_LIST_MECHS	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_SASL_LIST_MECHS = 0x20,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_SASL_STEP	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_SASL_STEP = 0x22,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_SET	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_SET = 0x01,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_SETQ	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_SETQ = 0x11,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_STAT	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_STAT = 0x10,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_TOUCH	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_TOUCH = 0x1c,$/;"	e	enum:__anon63
PROTOCOL_BINARY_CMD_VERSION	protocol_binary.h	/^        PROTOCOL_BINARY_CMD_VERSION = 0x0b,$/;"	e	enum:__anon63
PROTOCOL_BINARY_H	protocol_binary.h	36;"	d
PROTOCOL_BINARY_RAW_BYTES	protocol_binary.h	/^        PROTOCOL_BINARY_RAW_BYTES = 0x00$/;"	e	enum:__anon64
PROTOCOL_BINARY_REQ	protocol_binary.h	/^        PROTOCOL_BINARY_REQ = 0x80,$/;"	e	enum:__anon61
PROTOCOL_BINARY_RES	protocol_binary.h	/^        PROTOCOL_BINARY_RES = 0x81$/;"	e	enum:__anon61
PROTOCOL_BINARY_RESPONSE_AUTH_CONTINUE	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_AUTH_CONTINUE = 0x21,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_AUTH_ERROR	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_AUTH_ERROR = 0x20,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_DELTA_BADVAL	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_DELTA_BADVAL = 0x06,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_E2BIG	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_E2BIG = 0x03,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_EINVAL	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_EINVAL = 0x04,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_ENOMEM	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_ENOMEM = 0x82$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_KEY_EEXISTS	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_KEY_EEXISTS = 0x02,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_KEY_ENOENT	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_KEY_ENOENT = 0x01,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_NOT_STORED	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_NOT_STORED = 0x05,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_SUCCESS	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_SUCCESS = 0x00,$/;"	e	enum:__anon62
PROTOCOL_BINARY_RESPONSE_UNKNOWN_COMMAND	protocol_binary.h	/^        PROTOCOL_BINARY_RESPONSE_UNKNOWN_COMMAND = 0x81,$/;"	e	enum:__anon62
PROTO_BIN_H	proto_bin.h	2;"	d
PROTO_PROXY_H	proto_proxy.h	2;"	d
PROTO_TEXT_H	proto_text.h	2;"	d
PROXY_H	proxy.h	2;"	d
PROXY_THREAD_STATS_FIELDS	memcached.h	346;"	d
P_BE_FAIL_CONNECTING	proxy.h	/^    P_BE_FAIL_CONNECTING,$/;"	e	enum:proxy_be_failures
P_BE_FAIL_DISCONNECTED	proxy.h	/^    P_BE_FAIL_DISCONNECTED,$/;"	e	enum:proxy_be_failures
P_BE_FAIL_PARSING	proxy.h	/^    P_BE_FAIL_PARSING,$/;"	e	enum:proxy_be_failures
P_BE_FAIL_READING	proxy.h	/^    P_BE_FAIL_READING,$/;"	e	enum:proxy_be_failures
P_BE_FAIL_TIMEOUT	proxy.h	/^    P_BE_FAIL_TIMEOUT = 0,$/;"	e	enum:proxy_be_failures
P_BE_FAIL_WRITING	proxy.h	/^    P_BE_FAIL_WRITING,$/;"	e	enum:proxy_be_failures
P_DEBUG	proxy.h	35;"	d
P_DEBUG	proxy.h	40;"	d
P_OK	proxy.h	/^    P_OK = 0,$/;"	e	enum:proxy_defines
Pfunc	vendor/lua/src/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PrintCode	vendor/lua/src/luac.c	/^static void PrintCode(const Proto* f)$/;"	f	file:
PrintConstant	vendor/lua/src/luac.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:
PrintDebug	vendor/lua/src/luac.c	/^static void PrintDebug(const Proto* f)$/;"	f	file:
PrintFunction	vendor/lua/src/luac.c	/^static void PrintFunction(const Proto* f, int full)$/;"	f	file:
PrintHeader	vendor/lua/src/luac.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:
PrintString	vendor/lua/src/luac.c	/^static void PrintString(const TString* ts)$/;"	f	file:
PrintType	vendor/lua/src/luac.c	/^static void PrintType(const Proto* f, int i)$/;"	f	file:
Protect	vendor/lua/src/lvm.c	1096;"	d	file:
ProtectNT	vendor/lua/src/lvm.c	1099;"	d	file:
Proto	vendor/lua/src/lobject.h	/^typedef struct Proto {$/;"	s
Proto	vendor/lua/src/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
QMD_IS_TRASHED	queue.h	160;"	d
QMD_IS_TRASHED	queue.h	164;"	d
QMD_LIST_CHECK_HEAD	queue.h	479;"	d
QMD_LIST_CHECK_HEAD	queue.h	509;"	d
QMD_LIST_CHECK_NEXT	queue.h	492;"	d
QMD_LIST_CHECK_NEXT	queue.h	510;"	d
QMD_LIST_CHECK_PREV	queue.h	504;"	d
QMD_LIST_CHECK_PREV	queue.h	511;"	d
QMD_SAVELINK	queue.h	158;"	d
QMD_SAVELINK	queue.h	162;"	d
QMD_SLIST_CHECK_PREVPTR	queue.h	206;"	d
QMD_SLIST_CHECK_PREVPTR	queue.h	212;"	d
QMD_TAILQ_CHECK_HEAD	queue.h	658;"	d
QMD_TAILQ_CHECK_HEAD	queue.h	698;"	d
QMD_TAILQ_CHECK_NEXT	queue.h	681;"	d
QMD_TAILQ_CHECK_NEXT	queue.h	700;"	d
QMD_TAILQ_CHECK_PREV	queue.h	693;"	d
QMD_TAILQ_CHECK_PREV	queue.h	701;"	d
QMD_TAILQ_CHECK_TAIL	queue.h	670;"	d
QMD_TAILQ_CHECK_TAIL	queue.h	699;"	d
QMD_TRACE_ELEM	queue.h	143;"	d
QMD_TRACE_ELEM	queue.h	151;"	d
QMD_TRACE_HEAD	queue.h	136;"	d
QMD_TRACE_HEAD	queue.h	152;"	d
QUEUE_MACRO_DEBUG_TRACE	queue.h	120;"	d
QUEUE_MACRO_DEBUG_TRASH	queue.h	121;"	d
QUEUE_TYPEOF	queue.h	171;"	d
QUEUE_TYPEOF	queue.h	173;"	d
R	vendor/lua/Makefile	/^R= $V.3$/;"	m
RA	vendor/lua/src/lvm.c	1041;"	d	file:
RANLIB	vendor/lua/src/Makefile	/^RANLIB= ranlib$/;"	m
RANLIMIT	vendor/lua/src/ltablib.c	261;"	d	file:
RB	vendor/lua/src/lvm.c	1042;"	d	file:
RC	vendor/lua/src/lvm.c	1045;"	d	file:
RDKCONST	vendor/lua/src/lparser.h	91;"	d
RDKCTC	vendor/lua/src/lparser.h	93;"	d
RDKTOCLOSE	vendor/lua/src/lparser.h	92;"	d
READ_BUFFER_CACHED	memcached.h	78;"	d
READ_BUFFER_SIZE	memcached.h	77;"	d
READ_DATA_RECEIVED	memcached.c	/^    READ_DATA_RECEIVED,$/;"	e	enum:try_read_result	file:
READ_ERROR	memcached.c	/^    READ_ERROR,            \/** an error occurred (on the socket) (or client closed connection) *\/$/;"	e	enum:try_read_result	file:
READ_MEMORY_ERROR	memcached.c	/^    READ_MEMORY_ERROR      \/** failed to allocate more memory *\/$/;"	e	enum:try_read_result	file:
READ_NO_DATA_RECEIVED	memcached.c	/^    READ_NO_DATA_RECEIVED,$/;"	e	enum:try_read_result	file:
REALTIME_MAXDELTA	memcached.h	1018;"	d
REASSIGN_BADCLASS	slabs.h	/^    REASSIGN_OK=0, REASSIGN_RUNNING, REASSIGN_BADCLASS, REASSIGN_NOSPARE,$/;"	e	enum:reassign_result_type
REASSIGN_NOSPARE	slabs.h	/^    REASSIGN_OK=0, REASSIGN_RUNNING, REASSIGN_BADCLASS, REASSIGN_NOSPARE,$/;"	e	enum:reassign_result_type
REASSIGN_OK	slabs.h	/^    REASSIGN_OK=0, REASSIGN_RUNNING, REASSIGN_BADCLASS, REASSIGN_NOSPARE,$/;"	e	enum:reassign_result_type
REASSIGN_RUNNING	slabs.h	/^    REASSIGN_OK=0, REASSIGN_RUNNING, REASSIGN_BADCLASS, REASSIGN_NOSPARE,$/;"	e	enum:reassign_result_type
REASSIGN_SRC_DST_SAME	slabs.h	/^    REASSIGN_SRC_DST_SAME$/;"	e	enum:reassign_result_type
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REQ_MAGIC	t/binary-extstore.t	/^use constant REQ_MAGIC        => 0x80;$/;"	c
REQ_MAGIC	t/binary-sasl.t	/^use constant REQ_MAGIC        => 0x80;$/;"	c
REQ_MAGIC	t/binary.t	/^use constant REQ_MAGIC        => 0x80;$/;"	c
REQ_PKT_FMT	t/binary-extstore.t	/^use constant REQ_PKT_FMT      => "CCnCCnNNNN";$/;"	c
REQ_PKT_FMT	t/binary-sasl.t	/^use constant REQ_PKT_FMT      => "CCnCCnNNNN";$/;"	c
REQ_PKT_FMT	t/binary.t	/^use constant REQ_PKT_FMT      => "CCnCCnNNNN";$/;"	c
REQ_PKT_FMT	t/udp.t	/^use constant REQ_PKT_FMT      => "CCnCCnNNNN";$/;"	c
RESERVED	vendor/lua/src/llex.h	/^enum RESERVED {$/;"	g
RESERVEDSLOT	vendor/lua/src/lbaselib.c	340;"	d	file:
RESP_CMD_MAX	proxy.h	368;"	d
RESP_MODE_METAQUIET	proxy.h	/^    RESP_MODE_METAQUIET$/;"	e	enum:mcp_resp_mode
RESP_MODE_NOREPLY	proxy.h	/^    RESP_MODE_NOREPLY,$/;"	e	enum:mcp_resp_mode
RESP_MODE_NORMAL	proxy.h	/^    RESP_MODE_NORMAL = 0,$/;"	e	enum:mcp_resp_mode
RESTART_BADLINE	restart.h	/^    RESTART_OK=0, RESTART_NOTAG, RESTART_BADLINE, RESTART_DONE$/;"	e	enum:restart_get_kv_ret
RESTART_DONE	restart.h	/^    RESTART_OK=0, RESTART_NOTAG, RESTART_BADLINE, RESTART_DONE$/;"	e	enum:restart_get_kv_ret
RESTART_H	restart.h	2;"	d
RESTART_NOTAG	restart.h	/^    RESTART_OK=0, RESTART_NOTAG, RESTART_BADLINE, RESTART_DONE$/;"	e	enum:restart_get_kv_ret
RESTART_OK	restart.h	/^    RESTART_OK=0, RESTART_NOTAG, RESTART_BADLINE, RESTART_DONE$/;"	e	enum:restart_get_kv_ret
RESTART_REQUIRED_META	memcached.c	4670;"	d	file:
RESTART_TAG_MAXLEN	restart.h	4;"	d
RESUME_ALL_THREADS	memcached.h	/^    RESUME_ALL_THREADS,$/;"	e	enum:pause_thread_types
RESUME_WORKER_THREADS	memcached.h	/^    RESUME_WORKER_THREADS$/;"	e	enum:pause_thread_types
RES_MAGIC	t/binary-extstore.t	/^use constant RES_MAGIC        => 0x81;$/;"	c
RES_MAGIC	t/binary-sasl.t	/^use constant RES_MAGIC        => 0x81;$/;"	c
RES_MAGIC	t/binary.t	/^use constant RES_MAGIC        => 0x81;$/;"	c
RES_PKT_FMT	t/binary-extstore.t	/^use constant RES_PKT_FMT      => "CCnCCnNNNN";$/;"	c
RES_PKT_FMT	t/binary-sasl.t	/^use constant RES_PKT_FMT      => "CCnCCnNNNN";$/;"	c
RES_PKT_FMT	t/binary.t	/^use constant RES_PKT_FMT      => "CCnCCnNNNN";$/;"	c
RES_PKT_FMT	t/udp.t	/^use constant RES_PKT_FMT      => "CCnCCnNNNN";$/;"	c
RETS	vendor/lua/src/lobject.c	551;"	d	file:
RKC	vendor/lua/src/lvm.c	1048;"	d	file:
RM	vendor/lua/Makefile	/^RM= rm -f$/;"	m
RM	vendor/lua/src/Makefile	/^RM= rm -f$/;"	m
RN	vendor/lua/src/liolib.c	/^} RN;$/;"	t	typeref:struct:__anon47	file:
ROTATE_LEFT	md5.c	197;"	d	file:
ROTL32	murmur3_hash.c	23;"	d	file:
ROTL32	murmur3_hash.c	38;"	d	file:
RanState	vendor/lua/src/lmathlib.c	/^} RanState;$/;"	t	typeref:struct:__anon27	file:
Rand64	vendor/lua/src/lmathlib.c	/^typedef struct Rand64 {$/;"	s	file:
Rand64	vendor/lua/src/lmathlib.c	/^} Rand64;$/;"	t	typeref:struct:Rand64	file:
Rand64	vendor/lua/src/lmathlib.c	273;"	d	file:
Rand64	vendor/lua/src/lmathlib.c	278;"	d	file:
Rand64	vendor/lua/src/lmathlib.c	283;"	d	file:
S	vendor/lua/src/luac.c	667;"	d	file:
SASL_CONTINUE	sasl_defs.h	27;"	d
SASL_DEFS_H	sasl_defs.h	2;"	d
SASL_OK	sasl_defs.h	26;"	d
SESSION_ID_CONTEXT	tls.h	6;"	d
SET	md5.c	203;"	d	file:
SET	md5.c	223;"	d	file:
SET	md5.c	229;"	d	file:
SET	md5.c	249;"	d	file:
SET	md5.c	255;"	d	file:
SET	md5.c	275;"	d	file:
SET	md5.c	281;"	d	file:
SET	md5.c	301;"	d	file:
SETARG_A	vendor/lua/src/lopcodes.h	126;"	d
SETARG_Ax	vendor/lua/src/lopcodes.h	144;"	d
SETARG_B	vendor/lua/src/lopcodes.h	130;"	d
SETARG_Bx	vendor/lua/src/lopcodes.h	141;"	d
SETARG_C	vendor/lua/src/lopcodes.h	134;"	d
SETARG_k	vendor/lua/src/lopcodes.h	138;"	d
SETARG_sBx	vendor/lua/src/lopcodes.h	148;"	d
SETARG_sJ	vendor/lua/src/lopcodes.h	152;"	d
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	doc/Makefile	/^SET_MAKE = $/;"	m
SET_OPCODE	vendor/lua/src/lopcodes.h	115;"	d
SET_VAL_MAX	restart.c	267;"	d	file:
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	doc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHORT	crc32c.c	144;"	d	file:
SHORTx1	crc32c.c	145;"	d	file:
SHORTx2	crc32c.c	146;"	d	file:
SHUTDOWN_CLOSE	memcached.h	/^    SHUTDOWN_CLOSE,$/;"	e	enum:close_reasons
SIZELENMOD	vendor/lua/src/lstrlib.c	1001;"	d	file:
SIZEOF_VOID_P	config.h	167;"	d
SIZETIMEFMT	vendor/lua/src/loslib.c	301;"	d	file:
SIZE_A	vendor/lua/src/lopcodes.h	41;"	d
SIZE_Ax	vendor/lua/src/lopcodes.h	42;"	d
SIZE_B	vendor/lua/src/lopcodes.h	39;"	d
SIZE_Bx	vendor/lua/src/lopcodes.h	40;"	d
SIZE_C	vendor/lua/src/lopcodes.h	38;"	d
SIZE_OP	vendor/lua/src/lopcodes.h	45;"	d
SIZE_sJ	vendor/lua/src/lopcodes.h	43;"	d
SKIP	t/stats-conns.t	/^    SKIP: {$/;"	l
SKIP	t/watcher.t	/^SKIP: {$/;"	l
SLABS_ALLOC_NO_NEWPAGE	slabs.h	25;"	d
SLABS_H	slabs.h	3;"	d
SLAB_AUTOMOVE_EXTSTORE_H	slab_automove_extstore.h	2;"	d
SLAB_AUTOMOVE_H	slab_automove.h	2;"	d
SLAB_GLOBAL_PAGE_POOL	memcached.h	114;"	d
SLAB_MOVE_MAX_LOOPS	slabs.c	837;"	d	file:
SLAB_STATS_FIELDS	memcached.h	292;"	d
SLIST_CLASS_ENTRY	queue.h	197;"	d
SLIST_CLASS_HEAD	queue.h	184;"	d
SLIST_CONCAT	queue.h	215;"	d
SLIST_EMPTY	queue.h	228;"	d
SLIST_ENTRY	queue.h	192;"	d
SLIST_FIRST	queue.h	230;"	d
SLIST_FOREACH	queue.h	232;"	d
SLIST_FOREACH_FROM	queue.h	237;"	d
SLIST_FOREACH_FROM_SAFE	queue.h	247;"	d
SLIST_FOREACH_PREVPTR	queue.h	252;"	d
SLIST_FOREACH_SAFE	queue.h	242;"	d
SLIST_HEAD	queue.h	179;"	d
SLIST_HEAD_INITIALIZER	queue.h	189;"	d
SLIST_INIT	queue.h	257;"	d
SLIST_INSERT_AFTER	queue.h	261;"	d
SLIST_INSERT_HEAD	queue.h	266;"	d
SLIST_NEXT	queue.h	271;"	d
SLIST_REMOVE	queue.h	273;"	d
SLIST_REMOVE_AFTER	queue.h	287;"	d
SLIST_REMOVE_HEAD	queue.h	292;"	d
SLIST_REMOVE_PREVPTR	queue.h	296;"	d
SLIST_SWAP	queue.h	302;"	d
SOCK_COOKIE_ID	memcached.h	41;"	d
SOCK_COOKIE_ID	memcached.h	43;"	d
SOCK_COOKIE_ID	memcached.h	45;"	d
SOURCES	Makefile	/^SOURCES = $(memcached_SOURCES) $(memcached_debug_SOURCES) sizes.c \\$/;"	m
SOURCES	doc/Makefile	/^SOURCES =$/;"	m
SO_INCOMING_NAPI_ID	memcached.h	64;"	d
SPACEBIT	vendor/lua/src/lctype.h	42;"	d
SPACECHARS	vendor/lua/src/lbaselib.c	58;"	d	file:
SPECIALS	vendor/lua/src/lstrlib.c	383;"	d	file:
SPECIFICATIONS	doc/Makefile	/^SPECIFICATIONS = protocol-binary.txt protocol-binary-range.txt$/;"	m
SParser	vendor/lua/src/ldo.c	/^struct SParser {  \/* data to 'f_parser' *\/$/;"	s	file:
SRV_CRT	t/lib/MemcachedTest.pm	/^use constant SRV_CRT => "server_crt.pem";$/;"	c
SRV_KEY	t/lib/MemcachedTest.pm	/^use constant SRV_KEY => "server_key.pem";$/;"	c
SS	vendor/lua/src/luac.c	666;"	d	file:
SSE42	crc32c.c	252;"	d	file:
SSL_ERROR_MSG_SIZE	tls.c	/^const size_t SSL_ERROR_MSG_SIZE = 256;$/;"	v
SSL_LOCK	tls.c	/^void SSL_LOCK() {$/;"	f
SSL_UNLOCK	tls.c	/^void SSL_UNLOCK(void) {$/;"	f
STAILQ_CLASS_ENTRY	queue.h	331;"	d
STAILQ_CLASS_HEAD	queue.h	317;"	d
STAILQ_CONCAT	queue.h	339;"	d
STAILQ_EMPTY	queue.h	347;"	d
STAILQ_ENTRY	queue.h	326;"	d
STAILQ_FIRST	queue.h	349;"	d
STAILQ_FOREACH	queue.h	351;"	d
STAILQ_FOREACH_FROM	queue.h	356;"	d
STAILQ_FOREACH_FROM_SAFE	queue.h	366;"	d
STAILQ_FOREACH_SAFE	queue.h	361;"	d
STAILQ_HEAD	queue.h	311;"	d
STAILQ_HEAD_INITIALIZER	queue.h	323;"	d
STAILQ_INIT	queue.h	371;"	d
STAILQ_INSERT_AFTER	queue.h	376;"	d
STAILQ_INSERT_HEAD	queue.h	382;"	d
STAILQ_INSERT_TAIL	queue.h	388;"	d
STAILQ_LAST	queue.h	394;"	d
STAILQ_NEXT	queue.h	399;"	d
STAILQ_REMOVE	queue.h	401;"	d
STAILQ_REMOVE_AFTER	queue.h	415;"	d
STAILQ_REMOVE_HEAD	queue.h	421;"	d
STAILQ_SWAP	queue.h	427;"	d
STATE_DEFAULT	vendor/mcmc/mcmc.c	31;"	d	file:
STATE_GET_RESP	vendor/mcmc/mcmc.c	32;"	d	file:
STATE_STAT_RESP	vendor/mcmc/mcmc.c	33;"	d	file:
STATE_STAT_RESP_DONE	vendor/mcmc/mcmc.c	34;"	d	file:
STATS_LOCK	testapp.c	/^void STATS_LOCK(void)$/;"	f
STATS_LOCK	thread.c	/^void STATS_LOCK() {$/;"	f
STATS_PREFIX_H	stats_prefix.h	2;"	d
STATS_UNLOCK	testapp.c	/^void STATS_UNLOCK(void)$/;"	f
STATS_UNLOCK	thread.c	/^void STATS_UNLOCK() {$/;"	f
STAT_DECR	extstore.c	39;"	d	file:
STAT_DECR	proxy.h	63;"	d
STAT_INCR	extstore.c	33;"	d	file:
STAT_INCR	proxy.h	57;"	d
STAT_KEY_LEN	memcached.h	151;"	d
STAT_L	extstore.c	31;"	d	file:
STAT_L	proxy.h	55;"	d
STAT_UL	extstore.c	32;"	d	file:
STAT_UL	proxy.h	56;"	d
STAT_VAL_LEN	memcached.h	152;"	d
STDC_HEADERS	config.h	175;"	d
STORAGE_H	storage.h	2;"	d
STORAGE_delete	storage.h	11;"	d
STORAGE_delete	storage.h	6;"	d
STORED	memcached.h	/^    NOT_STORED=0, STORED, EXISTS, NOT_FOUND, TOO_LARGE, NO_MEMORY$/;"	e	enum:store_item_type
STORE_OFFSET	storage.h	41;"	d
STRCACHE_M	vendor/lua/src/llimits.h	211;"	d
STRCACHE_N	vendor/lua/src/llimits.h	210;"	d
STRIP	Makefile	/^STRIP = $/;"	m
STRIP	doc/Makefile	/^STRIP = $/;"	m
STRIPE_LEN	xxhash.h	3517;"	d
SUBCOMMAND_TOKEN	proto_text.c	237;"	d	file:
SUBDIRS	Makefile	/^SUBDIRS = doc $(am__append_23)$/;"	m
SYSCFLAGS	vendor/lua/src/Makefile	/^SYSCFLAGS=$/;"	m
SYSLDFLAGS	vendor/lua/src/Makefile	/^SYSLDFLAGS=$/;"	m
SYSLIBS	vendor/lua/src/Makefile	/^SYSLIBS=$/;"	m
SZINT	vendor/lua/src/lstrlib.c	1345;"	d	file:
SemInfo	vendor/lua/src/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon46
StackValue	vendor/lua/src/lobject.h	/^typedef union StackValue {$/;"	u
StackValue	vendor/lua/src/lobject.h	/^} StackValue;$/;"	t	typeref:union:StackValue
StkId	vendor/lua/src/lobject.h	/^typedef StackValue *StkId;$/;"	t
T1	md5.c	65;"	d	file:
T10	md5.c	74;"	d	file:
T11	md5.c	75;"	d	file:
T12	md5.c	76;"	d	file:
T13	md5.c	77;"	d	file:
T14	md5.c	78;"	d	file:
T15	md5.c	79;"	d	file:
T16	md5.c	80;"	d	file:
T17	md5.c	81;"	d	file:
T18	md5.c	82;"	d	file:
T19	md5.c	83;"	d	file:
T2	md5.c	66;"	d	file:
T20	md5.c	84;"	d	file:
T21	md5.c	85;"	d	file:
T22	md5.c	86;"	d	file:
T23	md5.c	87;"	d	file:
T24	md5.c	88;"	d	file:
T25	md5.c	89;"	d	file:
T26	md5.c	90;"	d	file:
T27	md5.c	91;"	d	file:
T28	md5.c	92;"	d	file:
T29	md5.c	93;"	d	file:
T3	md5.c	67;"	d	file:
T30	md5.c	94;"	d	file:
T31	md5.c	95;"	d	file:
T32	md5.c	96;"	d	file:
T33	md5.c	97;"	d	file:
T34	md5.c	98;"	d	file:
T35	md5.c	99;"	d	file:
T36	md5.c	100;"	d	file:
T37	md5.c	101;"	d	file:
T38	md5.c	102;"	d	file:
T39	md5.c	103;"	d	file:
T4	md5.c	68;"	d	file:
T40	md5.c	104;"	d	file:
T41	md5.c	105;"	d	file:
T42	md5.c	106;"	d	file:
T43	md5.c	107;"	d	file:
T44	md5.c	108;"	d	file:
T45	md5.c	109;"	d	file:
T46	md5.c	110;"	d	file:
T47	md5.c	111;"	d	file:
T48	md5.c	112;"	d	file:
T49	md5.c	113;"	d	file:
T5	md5.c	69;"	d	file:
T50	md5.c	114;"	d	file:
T51	md5.c	115;"	d	file:
T52	md5.c	116;"	d	file:
T53	md5.c	117;"	d	file:
T54	md5.c	118;"	d	file:
T55	md5.c	119;"	d	file:
T56	md5.c	120;"	d	file:
T57	md5.c	121;"	d	file:
T58	md5.c	122;"	d	file:
T59	md5.c	123;"	d	file:
T6	md5.c	70;"	d	file:
T60	md5.c	124;"	d	file:
T61	md5.c	125;"	d	file:
T62	md5.c	126;"	d	file:
T63	md5.c	127;"	d	file:
T64	md5.c	128;"	d	file:
T7	md5.c	71;"	d	file:
T8	md5.c	72;"	d	file:
T9	md5.c	73;"	d	file:
TAB_L	vendor/lua/src/ltablib.c	29;"	d	file:
TAB_R	vendor/lua/src/ltablib.c	27;"	d	file:
TAB_RW	vendor/lua/src/ltablib.c	30;"	d	file:
TAB_W	vendor/lua/src/ltablib.c	28;"	d	file:
TAILQ_CLASS_ENTRY	queue.h	641;"	d
TAILQ_CLASS_HEAD	queue.h	624;"	d
TAILQ_CONCAT	queue.h	704;"	d
TAILQ_EMPTY	queue.h	715;"	d
TAILQ_ENTRY	queue.h	634;"	d
TAILQ_FIRST	queue.h	717;"	d
TAILQ_FOREACH	queue.h	719;"	d
TAILQ_FOREACH_FROM	queue.h	724;"	d
TAILQ_FOREACH_FROM_SAFE	queue.h	734;"	d
TAILQ_FOREACH_REVERSE	queue.h	739;"	d
TAILQ_FOREACH_REVERSE_FROM	queue.h	744;"	d
TAILQ_FOREACH_REVERSE_FROM_SAFE	queue.h	754;"	d
TAILQ_FOREACH_REVERSE_SAFE	queue.h	749;"	d
TAILQ_FOREACH_SAFE	queue.h	729;"	d
TAILQ_HEAD	queue.h	617;"	d
TAILQ_HEAD_INITIALIZER	queue.h	631;"	d
TAILQ_INIT	queue.h	759;"	d
TAILQ_INSERT_AFTER	queue.h	765;"	d
TAILQ_INSERT_BEFORE	queue.h	780;"	d
TAILQ_INSERT_HEAD	queue.h	790;"	d
TAILQ_INSERT_TAIL	queue.h	803;"	d
TAILQ_LAST	queue.h	813;"	d
TAILQ_LAST_FAST	queue.h	823;"	d
TAILQ_NEXT	queue.h	826;"	d
TAILQ_PREV	queue.h	828;"	d
TAILQ_PREV_FAST	queue.h	831;"	d
TAILQ_REMOVE	queue.h	835;"	d
TAILQ_SWAP	queue.h	853;"	d
TAIL_REPAIR_TIME_DEFAULT	memcached.h	121;"	d
TEMP_LRU	items.h	4;"	d
TESTARG_k	vendor/lua/src/lopcodes.h	136;"	d
TESTBIT	vendor/lua/src/lgc.h	80;"	d
TEST_FAIL	testapp.c	/^enum test_return { TEST_SKIP, TEST_PASS, TEST_FAIL };$/;"	e	enum:test_return	file:
TEST_FUNC	testapp.c	/^typedef enum test_return (*TEST_FUNC)(void);$/;"	t	typeref:enum:TEST_FUNC	file:
TEST_PASS	testapp.c	/^enum test_return { TEST_SKIP, TEST_PASS, TEST_FAIL };$/;"	e	enum:test_return	file:
TEST_SKIP	testapp.c	/^enum test_return { TEST_SKIP, TEST_PASS, TEST_FAIL };$/;"	e	enum:test_return	file:
THREAD_STATS_FIELDS	memcached.h	309;"	d
THR_STATS_LOCK	memcached.h	1003;"	d
THR_STATS_UNLOCK	memcached.h	1004;"	d
TK_AND	vendor/lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	vendor/lua/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	vendor/lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_DBCOLON	vendor/lua/src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DO	vendor/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	vendor/lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_ELSE	vendor/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	vendor/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	vendor/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	vendor/lua/src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_EQ	vendor/lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_FALSE	vendor/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FLT	vendor/lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_FOR	vendor/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	vendor/lua/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	vendor/lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_GOTO	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IDIV	vendor/lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_IF	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_INT	vendor/lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_LE	vendor/lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_LOCAL	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	vendor/lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_NE	vendor/lua/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_NIL	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_OR	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	vendor/lua/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	vendor/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_SHL	vendor/lua/src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_SHR	vendor/lua/src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_STRING	vendor/lua/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_THEN	vendor/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	vendor/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	vendor/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	vendor/lua/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TLS_H	tls.h	2;"	d
TMP_TEMPLATE	testapp.c	33;"	d	file:
TMS	vendor/lua/src/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon28
TM_ADD	vendor/lua/src/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon28
TM_BAND	vendor/lua/src/ltm.h	/^  TM_BAND,$/;"	e	enum:__anon28
TM_BNOT	vendor/lua/src/ltm.h	/^  TM_BNOT,$/;"	e	enum:__anon28
TM_BOR	vendor/lua/src/ltm.h	/^  TM_BOR,$/;"	e	enum:__anon28
TM_BXOR	vendor/lua/src/ltm.h	/^  TM_BXOR,$/;"	e	enum:__anon28
TM_CALL	vendor/lua/src/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon28
TM_CLOSE	vendor/lua/src/ltm.h	/^  TM_CLOSE,$/;"	e	enum:__anon28
TM_CONCAT	vendor/lua/src/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon28
TM_DIV	vendor/lua/src/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon28
TM_EQ	vendor/lua/src/ltm.h	/^  TM_EQ,  \/* last tag method with fast access *\/$/;"	e	enum:__anon28
TM_GC	vendor/lua/src/ltm.h	/^  TM_GC,$/;"	e	enum:__anon28
TM_IDIV	vendor/lua/src/ltm.h	/^  TM_IDIV,$/;"	e	enum:__anon28
TM_INDEX	vendor/lua/src/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon28
TM_LE	vendor/lua/src/ltm.h	/^  TM_LE,$/;"	e	enum:__anon28
TM_LEN	vendor/lua/src/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon28
TM_LT	vendor/lua/src/ltm.h	/^  TM_LT,$/;"	e	enum:__anon28
TM_MOD	vendor/lua/src/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon28
TM_MODE	vendor/lua/src/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon28
TM_MUL	vendor/lua/src/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon28
TM_N	vendor/lua/src/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon28
TM_NEWINDEX	vendor/lua/src/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon28
TM_POW	vendor/lua/src/ltm.h	/^  TM_POW,$/;"	e	enum:__anon28
TM_SHL	vendor/lua/src/ltm.h	/^  TM_SHL,$/;"	e	enum:__anon28
TM_SHR	vendor/lua/src/ltm.h	/^  TM_SHR,$/;"	e	enum:__anon28
TM_SUB	vendor/lua/src/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon28
TM_UNM	vendor/lua/src/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon28
TOO_LARGE	memcached.h	/^    NOT_STORED=0, STORED, EXISTS, NOT_FOUND, TOO_LARGE, NO_MEMORY$/;"	e	enum:store_item_type
TO_BIN	vendor/lua/Makefile	/^TO_BIN= lua luac$/;"	m
TO_INC	vendor/lua/Makefile	/^TO_INC= lua.h luaconf.h lualib.h lauxlib.h lua.hpp$/;"	m
TO_LIB	vendor/lua/Makefile	/^TO_LIB= liblua.a$/;"	m
TO_MAN	vendor/lua/Makefile	/^TO_MAN= lua.1 luac.1$/;"	m
TRACEBUF	queue.h	133;"	d
TRACEBUF	queue.h	153;"	d
TRACEBUF_INITIALIZER	queue.h	134;"	d
TRACEBUF_INITIALIZER	queue.h	154;"	d
TRACE_H	trace.h	2;"	d
TRANSMIT_ALL_RESP	memcached.c	2680;"	d	file:
TRANSMIT_COMPLETE	memcached.c	/^    TRANSMIT_COMPLETE,   \/** All done writing. *\/$/;"	e	enum:transmit_result	file:
TRANSMIT_HARD_ERROR	memcached.c	/^    TRANSMIT_HARD_ERROR  \/** Can't write (c->state is set to conn_closing) *\/$/;"	e	enum:transmit_result	file:
TRANSMIT_INCOMPLETE	memcached.c	/^    TRANSMIT_INCOMPLETE, \/** More data remaining to write. *\/$/;"	e	enum:transmit_result	file:
TRANSMIT_ONE_RESP	memcached.c	2679;"	d	file:
TRANSMIT_SOFT_ERROR	memcached.c	/^    TRANSMIT_SOFT_ERROR, \/** Can't write any more right now. *\/$/;"	e	enum:transmit_result	file:
TRASHIT	queue.h	159;"	d
TRASHIT	queue.h	163;"	d
TString	vendor/lua/src/lobject.h	/^typedef struct TString {$/;"	s
TString	vendor/lua/src/lobject.h	/^} TString;$/;"	t	typeref:struct:TString
TValue	vendor/lua/src/lobject.h	/^typedef struct TValue {$/;"	s
TValue	vendor/lua/src/lobject.h	/^} TValue;$/;"	t	typeref:struct:TValue
TValuefields	vendor/lua/src/lobject.h	/^    TValuefields;  \/* fields for value *\/$/;"	m	struct:Node::NodeKey
TValuefields	vendor/lua/src/lobject.h	/^    TValuefields;$/;"	m	struct:StackValue::__anon50
TValuefields	vendor/lua/src/lobject.h	/^  TValuefields;$/;"	m	struct:TValue
TValuefields	vendor/lua/src/lobject.h	63;"	d
TValuefields	vendor/lua/src/lparser.h	/^    TValuefields;  \/* constant value (if it is a compile-time constant) *\/$/;"	m	struct:Vardesc::__anon38
T_MASK	md5.c	64;"	d	file:
Table	vendor/lua/src/lobject.h	/^typedef struct Table {$/;"	s
Table	vendor/lua/src/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
Token	vendor/lua/src/llex.h	/^typedef struct Token {$/;"	s
Token	vendor/lua/src/llex.h	/^} Token;$/;"	t	typeref:struct:Token
U32	xxhash.h	1435;"	d
U64	xxhash.h	2144;"	d
U8	xxhash.h	1434;"	d
UBox	vendor/lua/src/lauxlib.c	/^typedef struct UBox {$/;"	s	file:
UBox	vendor/lua/src/lauxlib.c	/^} UBox;$/;"	t	typeref:struct:UBox	file:
UDP_DATA_SIZE	memcached.h	82;"	d
UDP_HEADER_SIZE	memcached.h	81;"	d
UDP_MAX_PAYLOAD_SIZE	memcached.h	80;"	d
UDP_READ_BUFFER_SIZE	memcached.h	79;"	d
UNAME	vendor/lua/src/Makefile	/^UNAME= uname$/;"	m
UNARY_PRIORITY	vendor/lua/src/lparser.c	1241;"	d	file:
UNUSED	vendor/lua/src/llimits.h	118;"	d
UONE	vendor/lua/src/lmathlib.c	455;"	d	file:
UPVALNAME	vendor/lua/src/luac.c	217;"	d	file:
USE_EVENTFD	proxy.h	17;"	d
UTF8BUFFSZ	vendor/lua/src/lobject.h	782;"	d
UTF8PATT	vendor/lua/src/lutf8lib.c	268;"	d	file:
UValue	vendor/lua/src/lobject.h	/^typedef union UValue {$/;"	u
UValue	vendor/lua/src/lobject.h	/^} UValue;$/;"	t	typeref:union:UValue
Udata	vendor/lua/src/lobject.h	/^typedef struct Udata {$/;"	s
Udata	vendor/lua/src/lobject.h	/^} Udata;$/;"	t	typeref:struct:Udata
Udata0	vendor/lua/src/lobject.h	/^typedef struct Udata0 {$/;"	s
Udata0	vendor/lua/src/lobject.h	/^} Udata0;$/;"	t	typeref:struct:Udata0
UnOpr	vendor/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	vendor/lua/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UpVal	vendor/lua/src/lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	vendor/lua/src/lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
Upvaldesc	vendor/lua/src/lobject.h	/^typedef struct Upvaldesc {$/;"	s
Upvaldesc	vendor/lua/src/lobject.h	/^} Upvaldesc;$/;"	t	typeref:struct:Upvaldesc
V	vendor/lua/Makefile	/^V= 5.4$/;"	m
VCALL	vendor/lua/src/lparser.h	/^  VCALL,  \/* expression is a function call; info = instruction pc *\/$/;"	e	enum:__anon34
VCONST	vendor/lua/src/lparser.h	/^  VCONST,  \/* compile-time <const> variable;$/;"	e	enum:__anon34
VDKREG	vendor/lua/src/lparser.h	90;"	d
VERSION	Makefile	/^VERSION = 1.6.17$/;"	m
VERSION	config.h	181;"	d
VERSION	doc/Makefile	/^VERSION = 1.6.17$/;"	m
VFALSE	vendor/lua/src/lparser.h	/^  VFALSE,  \/* constant false *\/$/;"	e	enum:__anon34
VINDEXED	vendor/lua/src/lparser.h	/^  VINDEXED,  \/* indexed variable;$/;"	e	enum:__anon34
VINDEXI	vendor/lua/src/lparser.h	/^  VINDEXI, \/* indexed variable with constant integer;$/;"	e	enum:__anon34
VINDEXSTR	vendor/lua/src/lparser.h	/^  VINDEXSTR, \/* indexed variable with literal string;$/;"	e	enum:__anon34
VINDEXUP	vendor/lua/src/lparser.h	/^  VINDEXUP,  \/* indexed upvalue;$/;"	e	enum:__anon34
VJMP	vendor/lua/src/lparser.h	/^  VJMP,  \/* expression is a test\/comparison;$/;"	e	enum:__anon34
VK	vendor/lua/src/lparser.h	/^  VK,  \/* constant in 'k'; info = index of constant in 'k' *\/$/;"	e	enum:__anon34
VKFLT	vendor/lua/src/lparser.h	/^  VKFLT,  \/* floating constant; nval = numerical float value *\/$/;"	e	enum:__anon34
VKINT	vendor/lua/src/lparser.h	/^  VKINT,  \/* integer constant; ival = numerical integer value *\/$/;"	e	enum:__anon34
VKSTR	vendor/lua/src/lparser.h	/^  VKSTR,  \/* string constant; strval = TString address;$/;"	e	enum:__anon34
VLOCAL	vendor/lua/src/lparser.h	/^  VLOCAL,  \/* local variable; var.ridx = register index;$/;"	e	enum:__anon34
VNIL	vendor/lua/src/lparser.h	/^  VNIL,  \/* constant nil *\/$/;"	e	enum:__anon34
VNONRELOC	vendor/lua/src/lparser.h	/^  VNONRELOC,  \/* expression has its value in a fixed register;$/;"	e	enum:__anon34
VOID	vendor/lua/src/luac.c	218;"	d	file:
VRELOC	vendor/lua/src/lparser.h	/^  VRELOC,  \/* expression can put result in any register;$/;"	e	enum:__anon34
VTRUE	vendor/lua/src/lparser.h	/^  VTRUE,  \/* constant true *\/$/;"	e	enum:__anon34
VUPVAL	vendor/lua/src/lparser.h	/^  VUPVAL,  \/* upvalue variable; info = index of upvalue in 'upvalues' *\/$/;"	e	enum:__anon34
VVARARG	vendor/lua/src/lparser.h	/^  VVARARG  \/* vararg expression; info = instruction pc *\/$/;"	e	enum:__anon34
VVOID	vendor/lua/src/lparser.h	/^  VVOID,  \/* when 'expdesc' describes the last expression of a list,$/;"	e	enum:__anon34
Value	vendor/lua/src/lobject.h	/^typedef union Value {$/;"	u
Value	vendor/lua/src/lobject.h	/^} Value;$/;"	t	typeref:union:Value
Vardesc	vendor/lua/src/lparser.h	/^typedef union Vardesc {$/;"	u
Vardesc	vendor/lua/src/lparser.h	/^} Vardesc;$/;"	t	typeref:union:Vardesc
WANT_TOKENS	proto_text.c	242;"	d	file:
WANT_TOKENS_MIN	proto_text.c	258;"	d	file:
WANT_TOKENS_OR	proto_text.c	250;"	d	file:
WARM_LRU	items.h	2;"	d
WATCHER_ALL	logger.c	49;"	d	file:
WATCHER_LIMIT	logger.c	44;"	d	file:
WHITE0BIT	vendor/lua/src/lgc.h	75;"	d
WHITE1BIT	vendor/lua/src/lgc.h	76;"	d
WHITEBITS	vendor/lua/src/lgc.h	84;"	d
WORDS_BIGENDIAN	config.h	187;"	d
WORK2MEM	vendor/lua/src/lgc.c	53;"	d	file:
WRITE_BUFFER_SIZE	memcached.h	76;"	d
WRITE_SLEEP_MIN	storage.c	574;"	d	file:
WSTAT_DECR	proxy.h	50;"	d
WSTAT_INCR	proxy.h	45;"	d
WSTAT_L	proxy.h	43;"	d
WSTAT_UL	proxy.h	44;"	d
X	memcached.h	304;"	d
X	memcached.h	306;"	d
X	memcached.h	358;"	d
X	memcached.h	366;"	d
X	proxy.h	119;"	d
X	proxy.h	128;"	d
X	proxy_lua.c	843;"	d	file:
X	proxy_lua.c	865;"	d	file:
X	thread.c	1015;"	d	file:
X	thread.c	1017;"	d	file:
X	thread.c	950;"	d	file:
X	thread.c	958;"	d	file:
X	thread.c	978;"	d	file:
X	thread.c	986;"	d	file:
X	thread.c	989;"	d	file:
X	thread.c	992;"	d	file:
XDIGITBIT	vendor/lua/src/lctype.h	43;"	d
XML2RFC	Makefile	/^XML2RFC = no$/;"	m
XML2RFC	doc/Makefile	/^XML2RFC = no$/;"	m
XSLTPROC	Makefile	/^XSLTPROC = no$/;"	m
XSLTPROC	doc/Makefile	/^XSLTPROC = no$/;"	m
XXH128	xxhash.h	/^XXH128(const void* input, size_t len, XXH64_hash_t seed)$/;"	f
XXH128	xxhash.h	248;"	d
XXH128_canonicalFromHash	xxhash.h	/^XXH128_canonicalFromHash(XXH128_canonical_t* dst, XXH128_hash_t hash)$/;"	f
XXH128_canonicalFromHash	xxhash.h	259;"	d
XXH128_canonical_t	xxhash.h	/^typedef struct { unsigned char digest[sizeof(XXH128_hash_t)]; } XXH128_canonical_t;$/;"	t	typeref:struct:__anon5
XXH128_canonical_t	xxhash.h	152;"	d
XXH128_cmp	xxhash.h	/^XXH_PUBLIC_API int XXH128_cmp(const void* h128_1, const void* h128_2)$/;"	f
XXH128_cmp	xxhash.h	258;"	d
XXH128_hashFromCanonical	xxhash.h	/^XXH128_hashFromCanonical(const XXH128_canonical_t* src)$/;"	f
XXH128_hashFromCanonical	xxhash.h	260;"	d
XXH128_hash_t	xxhash.h	/^} XXH128_hash_t;$/;"	t	typeref:struct:__anon4
XXH128_hash_t	xxhash.h	159;"	d
XXH128_isEqual	xxhash.h	/^XXH_PUBLIC_API int XXH128_isEqual(XXH128_hash_t h1, XXH128_hash_t h2)$/;"	f
XXH128_isEqual	xxhash.h	257;"	d
XXH128_mix32B	xxhash.h	/^XXH128_mix32B(XXH128_hash_t acc, const xxh_u8* input_1, const xxh_u8* input_2,$/;"	f
XXH32	xxhash.h	/^XXH_PUBLIC_API XXH32_hash_t XXH32 (const void* input, size_t len, XXH32_hash_t seed)$/;"	f
XXH32	xxhash.h	215;"	d
XXH32_avalanche	xxhash.h	/^static xxh_u32 XXH32_avalanche(xxh_u32 h32)$/;"	f
XXH32_canonicalFromHash	xxhash.h	/^XXH_PUBLIC_API void XXH32_canonicalFromHash(XXH32_canonical_t* dst, XXH32_hash_t hash)$/;"	f
XXH32_canonicalFromHash	xxhash.h	222;"	d
XXH32_canonical_t	xxhash.h	/^} XXH32_canonical_t;$/;"	t	typeref:struct:__anon2
XXH32_canonical_t	xxhash.h	150;"	d
XXH32_copyState	xxhash.h	/^XXH_PUBLIC_API void XXH32_copyState(XXH32_state_t* dstState, const XXH32_state_t* srcState)$/;"	f
XXH32_copyState	xxhash.h	221;"	d
XXH32_createState	xxhash.h	/^XXH_PUBLIC_API XXH32_state_t* XXH32_createState(void)$/;"	f
XXH32_createState	xxhash.h	216;"	d
XXH32_digest	xxhash.h	/^XXH_PUBLIC_API XXH32_hash_t XXH32_digest(const XXH32_state_t* state)$/;"	f
XXH32_digest	xxhash.h	220;"	d
XXH32_endian_align	xxhash.h	/^XXH32_endian_align(const xxh_u8* input, size_t len, xxh_u32 seed, XXH_alignment align)$/;"	f
XXH32_finalize	xxhash.h	/^XXH32_finalize(xxh_u32 h32, const xxh_u8* ptr, size_t len, XXH_alignment align)$/;"	f
XXH32_freeState	xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH32_freeState(XXH32_state_t* statePtr)$/;"	f
XXH32_freeState	xxhash.h	217;"	d
XXH32_hashFromCanonical	xxhash.h	/^XXH_PUBLIC_API XXH32_hash_t XXH32_hashFromCanonical(const XXH32_canonical_t* src)$/;"	f
XXH32_hashFromCanonical	xxhash.h	223;"	d
XXH32_hash_t	xxhash.h	/^        typedef unsigned long XXH32_hash_t;$/;"	t
XXH32_hash_t	xxhash.h	/^      typedef unsigned int XXH32_hash_t;$/;"	t
XXH32_hash_t	xxhash.h	/^    typedef uint32_t XXH32_hash_t;$/;"	t
XXH32_hash_t	xxhash.h	/^typedef uint32_t XXH32_hash_t;$/;"	t
XXH32_reset	xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH32_reset(XXH32_state_t* statePtr, XXH32_hash_t seed)$/;"	f
XXH32_reset	xxhash.h	218;"	d
XXH32_round	xxhash.h	/^static xxh_u32 XXH32_round(xxh_u32 acc, xxh_u32 input)$/;"	f
XXH32_state_s	xxhash.h	/^struct XXH32_state_s {$/;"	s
XXH32_state_s	xxhash.h	153;"	d
XXH32_state_t	xxhash.h	/^typedef struct XXH32_state_s XXH32_state_t;$/;"	t	typeref:struct:XXH32_state_s
XXH32_state_t	xxhash.h	154;"	d
XXH32_update	xxhash.h	/^XXH32_update(XXH32_state_t* state, const void* input, size_t len)$/;"	f
XXH32_update	xxhash.h	219;"	d
XXH3_128bits	xxhash.h	/^XXH_PUBLIC_API XXH128_hash_t XXH3_128bits(const void* input, size_t len)$/;"	f
XXH3_128bits	xxhash.h	249;"	d
XXH3_128bits_digest	xxhash.h	/^XXH_PUBLIC_API XXH128_hash_t XXH3_128bits_digest (const XXH3_state_t* state)$/;"	f
XXH3_128bits_digest	xxhash.h	256;"	d
XXH3_128bits_internal	xxhash.h	/^XXH3_128bits_internal(const void* input, size_t len,$/;"	f
XXH3_128bits_reset	xxhash.h	/^XXH3_128bits_reset(XXH3_state_t* statePtr)$/;"	f
XXH3_128bits_reset	xxhash.h	252;"	d
XXH3_128bits_reset_withSecret	xxhash.h	/^XXH3_128bits_reset_withSecret(XXH3_state_t* statePtr, const void* secret, size_t secretSize)$/;"	f
XXH3_128bits_reset_withSecret	xxhash.h	254;"	d
XXH3_128bits_reset_withSeed	xxhash.h	/^XXH3_128bits_reset_withSeed(XXH3_state_t* statePtr, XXH64_hash_t seed)$/;"	f
XXH3_128bits_reset_withSeed	xxhash.h	253;"	d
XXH3_128bits_update	xxhash.h	/^XXH3_128bits_update(XXH3_state_t* state, const void* input, size_t len)$/;"	f
XXH3_128bits_update	xxhash.h	255;"	d
XXH3_128bits_withSecret	xxhash.h	/^XXH3_128bits_withSecret(const void* input, size_t len, const void* secret, size_t secretSize)$/;"	f
XXH3_128bits_withSecret	xxhash.h	251;"	d
XXH3_128bits_withSeed	xxhash.h	/^XXH3_128bits_withSeed(const void* input, size_t len, XXH64_hash_t seed)$/;"	f
XXH3_128bits_withSeed	xxhash.h	250;"	d
XXH3_64bits	xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t XXH3_64bits(const void* input, size_t len)$/;"	f
XXH3_64bits	xxhash.h	235;"	d
XXH3_64bits_digest	xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t XXH3_64bits_digest (const XXH3_state_t* state)$/;"	f
XXH3_64bits_digest	xxhash.h	245;"	d
XXH3_64bits_internal	xxhash.h	/^XXH3_64bits_internal(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_64bits_reset	xxhash.h	/^XXH3_64bits_reset(XXH3_state_t* statePtr)$/;"	f
XXH3_64bits_reset	xxhash.h	241;"	d
XXH3_64bits_reset_withSecret	xxhash.h	/^XXH3_64bits_reset_withSecret(XXH3_state_t* statePtr, const void* secret, size_t secretSize)$/;"	f
XXH3_64bits_reset_withSecret	xxhash.h	243;"	d
XXH3_64bits_reset_withSeed	xxhash.h	/^XXH3_64bits_reset_withSeed(XXH3_state_t* statePtr, XXH64_hash_t seed)$/;"	f
XXH3_64bits_reset_withSeed	xxhash.h	242;"	d
XXH3_64bits_update	xxhash.h	/^XXH3_64bits_update(XXH3_state_t* state, const void* input, size_t len)$/;"	f
XXH3_64bits_update	xxhash.h	244;"	d
XXH3_64bits_withSecret	xxhash.h	/^XXH3_64bits_withSecret(const void* input, size_t len, const void* secret, size_t secretSize)$/;"	f
XXH3_64bits_withSecret	xxhash.h	236;"	d
XXH3_64bits_withSeed	xxhash.h	/^XXH3_64bits_withSeed(const void* input, size_t len, XXH64_hash_t seed)$/;"	f
XXH3_64bits_withSeed	xxhash.h	237;"	d
XXH3_HASH	hash.h	/^    JENKINS_HASH=0, MURMUR3_HASH, XXH3_HASH$/;"	e	enum:hashfunc_type
XXH3_INITSTATE	xxhash.h	1017;"	d
XXH3_INIT_ACC	xxhash.h	4286;"	d
XXH3_INTERNALBUFFER_SIZE	xxhash.h	944;"	d
XXH3_INTERNALBUFFER_STRIPES	xxhash.h	4627;"	d
XXH3_MIDSIZE_LASTOFFSET	xxhash.h	3465;"	d
XXH3_MIDSIZE_MAX	xxhash.h	3454;"	d
XXH3_MIDSIZE_STARTOFFSET	xxhash.h	3464;"	d
XXH3_SECRET_DEFAULT_SIZE	xxhash.h	953;"	d
XXH3_SECRET_SIZE_MIN	xxhash.h	709;"	d
XXH3_accumulate	xxhash.h	/^XXH3_accumulate(     xxh_u64* XXH_RESTRICT acc,$/;"	f
XXH3_accumulate_512	xxhash.h	4146;"	d
XXH3_accumulate_512	xxhash.h	4152;"	d
XXH3_accumulate_512	xxhash.h	4158;"	d
XXH3_accumulate_512	xxhash.h	4164;"	d
XXH3_accumulate_512	xxhash.h	4170;"	d
XXH3_accumulate_512	xxhash.h	4176;"	d
XXH3_accumulate_512_avx2	xxhash.h	/^XXH3_accumulate_512_avx2( void* XXH_RESTRICT acc,$/;"	f
XXH3_accumulate_512_avx512	xxhash.h	/^XXH3_accumulate_512_avx512(void* XXH_RESTRICT acc,$/;"	f
XXH3_accumulate_512_neon	xxhash.h	/^XXH3_accumulate_512_neon( void* XXH_RESTRICT acc,$/;"	f
XXH3_accumulate_512_scalar	xxhash.h	/^XXH3_accumulate_512_scalar(void* XXH_RESTRICT acc,$/;"	f
XXH3_accumulate_512_sse2	xxhash.h	/^XXH3_accumulate_512_sse2( void* XXH_RESTRICT acc,$/;"	f
XXH3_accumulate_512_vsx	xxhash.h	/^XXH3_accumulate_512_vsx(  void* XXH_RESTRICT acc,$/;"	f
XXH3_avalanche	xxhash.h	/^static XXH64_hash_t XXH3_avalanche(xxh_u64 h64)$/;"	f
XXH3_consumeStripes	xxhash.h	/^XXH3_consumeStripes(xxh_u64* XXH_RESTRICT acc,$/;"	f
XXH3_copyState	xxhash.h	/^XXH3_copyState(XXH3_state_t* dst_state, const XXH3_state_t* src_state)$/;"	f
XXH3_copyState	xxhash.h	240;"	d
XXH3_createState	xxhash.h	/^XXH_PUBLIC_API XXH3_state_t* XXH3_createState(void)$/;"	f
XXH3_createState	xxhash.h	238;"	d
XXH3_digest_long	xxhash.h	/^XXH3_digest_long (XXH64_hash_t* acc,$/;"	f
XXH3_f_accumulate_512	xxhash.h	/^typedef void (*XXH3_f_accumulate_512)(void* XXH_RESTRICT, const void*, const void*);$/;"	t
XXH3_f_initCustomSecret	xxhash.h	/^typedef void (*XXH3_f_initCustomSecret)(void* XXH_RESTRICT, xxh_u64);$/;"	t
XXH3_f_scrambleAcc	xxhash.h	/^typedef void (*XXH3_f_scrambleAcc)(void* XXH_RESTRICT, const void*);$/;"	t
XXH3_freeState	xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH3_freeState(XXH3_state_t* statePtr)$/;"	f
XXH3_freeState	xxhash.h	239;"	d
XXH3_generateSecret	xxhash.h	/^XXH3_generateSecret(void* secretBuffer, const void* customSeed, size_t customSeedSize)$/;"	f
XXH3_generateSecret	xxhash.h	246;"	d
XXH3_hash	hash.c	/^static uint32_t XXH3_hash(const void *key, size_t length) {$/;"	f	file:
XXH3_hashLong128_f	xxhash.h	/^typedef XXH128_hash_t (*XXH3_hashLong128_f)(const void* XXH_RESTRICT, size_t,$/;"	t
XXH3_hashLong64_f	xxhash.h	/^typedef XXH64_hash_t (*XXH3_hashLong64_f)(const void* XXH_RESTRICT, size_t,$/;"	t
XXH3_hashLong_128b_default	xxhash.h	/^XXH3_hashLong_128b_default(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_hashLong_128b_internal	xxhash.h	/^XXH3_hashLong_128b_internal(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_hashLong_128b_withSecret	xxhash.h	/^XXH3_hashLong_128b_withSecret(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_hashLong_128b_withSeed	xxhash.h	/^XXH3_hashLong_128b_withSeed(const void* input, size_t len,$/;"	f
XXH3_hashLong_128b_withSeed_internal	xxhash.h	/^XXH3_hashLong_128b_withSeed_internal(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_hashLong_64b_default	xxhash.h	/^XXH3_hashLong_64b_default(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_hashLong_64b_internal	xxhash.h	/^XXH3_hashLong_64b_internal(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_hashLong_64b_withSecret	xxhash.h	/^XXH3_hashLong_64b_withSecret(const void* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_hashLong_64b_withSeed	xxhash.h	/^XXH3_hashLong_64b_withSeed(const void* input, size_t len,$/;"	f
XXH3_hashLong_64b_withSeed_internal	xxhash.h	/^XXH3_hashLong_64b_withSeed_internal(const void* input, size_t len,$/;"	f
XXH3_hashLong_internal_loop	xxhash.h	/^XXH3_hashLong_internal_loop(xxh_u64* XXH_RESTRICT acc,$/;"	f
XXH3_initCustomSecret	xxhash.h	4148;"	d
XXH3_initCustomSecret	xxhash.h	4154;"	d
XXH3_initCustomSecret	xxhash.h	4160;"	d
XXH3_initCustomSecret	xxhash.h	4166;"	d
XXH3_initCustomSecret	xxhash.h	4172;"	d
XXH3_initCustomSecret	xxhash.h	4178;"	d
XXH3_initCustomSecret_avx2	xxhash.h	/^XXH_FORCE_INLINE XXH_TARGET_AVX2 void XXH3_initCustomSecret_avx2(void* XXH_RESTRICT customSecret, xxh_u64 seed64)$/;"	f
XXH3_initCustomSecret_avx512	xxhash.h	/^XXH3_initCustomSecret_avx512(void* XXH_RESTRICT customSecret, xxh_u64 seed64)$/;"	f
XXH3_initCustomSecret_scalar	xxhash.h	/^XXH3_initCustomSecret_scalar(void* XXH_RESTRICT customSecret, xxh_u64 seed64)$/;"	f
XXH3_initCustomSecret_sse2	xxhash.h	/^XXH_FORCE_INLINE XXH_TARGET_SSE2 void XXH3_initCustomSecret_sse2(void* XXH_RESTRICT customSecret, xxh_u64 seed64)$/;"	f
XXH3_kSecret	xxhash.h	/^XXH_ALIGN(64) static const xxh_u8 XXH3_kSecret[XXH_SECRET_DEFAULT_SIZE] = {$/;"	v
XXH3_len_0to16_128b	xxhash.h	/^XXH3_len_0to16_128b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_len_0to16_64b	xxhash.h	/^XXH3_len_0to16_64b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_len_129to240_128b	xxhash.h	/^XXH3_len_129to240_128b(const xxh_u8* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_len_129to240_64b	xxhash.h	/^XXH3_len_129to240_64b(const xxh_u8* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_len_17to128_128b	xxhash.h	/^XXH3_len_17to128_128b(const xxh_u8* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_len_17to128_64b	xxhash.h	/^XXH3_len_17to128_64b(const xxh_u8* XXH_RESTRICT input, size_t len,$/;"	f
XXH3_len_1to3_128b	xxhash.h	/^XXH3_len_1to3_128b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_len_1to3_64b	xxhash.h	/^XXH3_len_1to3_64b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_len_4to8_128b	xxhash.h	/^XXH3_len_4to8_128b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_len_4to8_64b	xxhash.h	/^XXH3_len_4to8_64b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_len_9to16_128b	xxhash.h	/^XXH3_len_9to16_128b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_len_9to16_64b	xxhash.h	/^XXH3_len_9to16_64b(const xxh_u8* input, size_t len, const xxh_u8* secret, XXH64_hash_t seed)$/;"	f
XXH3_mergeAccs	xxhash.h	/^XXH3_mergeAccs(const xxh_u64* XXH_RESTRICT acc, const xxh_u8* XXH_RESTRICT secret, xxh_u64 start)$/;"	f
XXH3_mix16B	xxhash.h	/^XXH_FORCE_INLINE xxh_u64 XXH3_mix16B(const xxh_u8* XXH_RESTRICT input,$/;"	f
XXH3_mix2Accs	xxhash.h	/^XXH3_mix2Accs(const xxh_u64* XXH_RESTRICT acc, const xxh_u8* XXH_RESTRICT secret)$/;"	f
XXH3_mul128_fold64	xxhash.h	/^XXH3_mul128_fold64(xxh_u64 lhs, xxh_u64 rhs)$/;"	f
XXH3_reset_internal	xxhash.h	/^XXH3_reset_internal(XXH3_state_t* statePtr,$/;"	f
XXH3_rrmxmx	xxhash.h	/^static XXH64_hash_t XXH3_rrmxmx(xxh_u64 h64, xxh_u64 len)$/;"	f
XXH3_scrambleAcc	xxhash.h	4147;"	d
XXH3_scrambleAcc	xxhash.h	4153;"	d
XXH3_scrambleAcc	xxhash.h	4159;"	d
XXH3_scrambleAcc	xxhash.h	4165;"	d
XXH3_scrambleAcc	xxhash.h	4171;"	d
XXH3_scrambleAcc	xxhash.h	4177;"	d
XXH3_scrambleAcc_avx2	xxhash.h	/^XXH3_scrambleAcc_avx2(void* XXH_RESTRICT acc, const void* XXH_RESTRICT secret)$/;"	f
XXH3_scrambleAcc_avx512	xxhash.h	/^XXH3_scrambleAcc_avx512(void* XXH_RESTRICT acc, const void* XXH_RESTRICT secret)$/;"	f
XXH3_scrambleAcc_neon	xxhash.h	/^XXH3_scrambleAcc_neon(void* XXH_RESTRICT acc, const void* XXH_RESTRICT secret)$/;"	f
XXH3_scrambleAcc_scalar	xxhash.h	/^XXH3_scrambleAcc_scalar(void* XXH_RESTRICT acc, const void* XXH_RESTRICT secret)$/;"	f
XXH3_scrambleAcc_sse2	xxhash.h	/^XXH3_scrambleAcc_sse2(void* XXH_RESTRICT acc, const void* XXH_RESTRICT secret)$/;"	f
XXH3_scrambleAcc_vsx	xxhash.h	/^XXH3_scrambleAcc_vsx(void* XXH_RESTRICT acc, const void* XXH_RESTRICT secret)$/;"	f
XXH3_state_s	xxhash.h	/^struct XXH3_state_s {$/;"	s
XXH3_state_s	xxhash.h	157;"	d
XXH3_state_t	xxhash.h	/^typedef struct XXH3_state_s XXH3_state_t;$/;"	t	typeref:struct:XXH3_state_s
XXH3_state_t	xxhash.h	158;"	d
XXH3_update	xxhash.h	/^XXH3_update(XXH3_state_t* state,$/;"	f
XXH64	xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t XXH64 (const void* input, size_t len, XXH64_hash_t seed)$/;"	f
XXH64	xxhash.h	225;"	d
XXH64_avalanche	xxhash.h	/^static xxh_u64 XXH64_avalanche(xxh_u64 h64)$/;"	f
XXH64_canonicalFromHash	xxhash.h	/^XXH_PUBLIC_API void XXH64_canonicalFromHash(XXH64_canonical_t* dst, XXH64_hash_t hash)$/;"	f
XXH64_canonicalFromHash	xxhash.h	232;"	d
XXH64_canonical_t	xxhash.h	/^typedef struct { unsigned char digest[sizeof(XXH64_hash_t)]; } XXH64_canonical_t;$/;"	t	typeref:struct:__anon3
XXH64_canonical_t	xxhash.h	151;"	d
XXH64_copyState	xxhash.h	/^XXH_PUBLIC_API void XXH64_copyState(XXH64_state_t* dstState, const XXH64_state_t* srcState)$/;"	f
XXH64_copyState	xxhash.h	231;"	d
XXH64_createState	xxhash.h	/^XXH_PUBLIC_API XXH64_state_t* XXH64_createState(void)$/;"	f
XXH64_createState	xxhash.h	226;"	d
XXH64_digest	xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t XXH64_digest(const XXH64_state_t* state)$/;"	f
XXH64_digest	xxhash.h	230;"	d
XXH64_endian_align	xxhash.h	/^XXH64_endian_align(const xxh_u8* input, size_t len, xxh_u64 seed, XXH_alignment align)$/;"	f
XXH64_finalize	xxhash.h	/^XXH64_finalize(xxh_u64 h64, const xxh_u8* ptr, size_t len, XXH_alignment align)$/;"	f
XXH64_freeState	xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH64_freeState(XXH64_state_t* statePtr)$/;"	f
XXH64_freeState	xxhash.h	227;"	d
XXH64_hashFromCanonical	xxhash.h	/^XXH_PUBLIC_API XXH64_hash_t XXH64_hashFromCanonical(const XXH64_canonical_t* src)$/;"	f
XXH64_hashFromCanonical	xxhash.h	233;"	d
XXH64_hash_t	xxhash.h	/^     typedef unsigned long XXH64_hash_t;$/;"	t
XXH64_hash_t	xxhash.h	/^     typedef unsigned long long XXH64_hash_t;$/;"	t
XXH64_hash_t	xxhash.h	/^   typedef uint64_t XXH64_hash_t;$/;"	t
XXH64_hash_t	xxhash.h	/^typedef uint64_t XXH64_hash_t;$/;"	t
XXH64_mergeRound	xxhash.h	/^static xxh_u64 XXH64_mergeRound(xxh_u64 acc, xxh_u64 val)$/;"	f
XXH64_reset	xxhash.h	/^XXH_PUBLIC_API XXH_errorcode XXH64_reset(XXH64_state_t* statePtr, XXH64_hash_t seed)$/;"	f
XXH64_reset	xxhash.h	228;"	d
XXH64_round	xxhash.h	/^static xxh_u64 XXH64_round(xxh_u64 acc, xxh_u64 input)$/;"	f
XXH64_state_s	xxhash.h	/^struct XXH64_state_s {$/;"	s
XXH64_state_s	xxhash.h	155;"	d
XXH64_state_t	xxhash.h	/^typedef struct XXH64_state_s XXH64_state_t;   \/* incomplete type *\/$/;"	t	typeref:struct:XXH64_state_s
XXH64_state_t	xxhash.h	156;"	d
XXH64_update	xxhash.h	/^XXH64_update (XXH64_state_t* state, const void* input, size_t len)$/;"	f
XXH64_update	xxhash.h	229;"	d
XXHASH_H_5627135585666179	xxhash.h	161;"	d
XXHASH_H_5627135585666179	xxhash.h	171;"	d
XXHASH_H_STATIC_13879238742	xxhash.h	162;"	d
XXHASH_H_STATIC_13879238742	xxhash.h	852;"	d
XXH_ACCEPT_NULL_INPUT_POINTER	xxhash.h	1177;"	d
XXH_ACCEPT_NULL_INPUT_POINTER	xxhash.h	1266;"	d
XXH_ACC_ALIGN	xxhash.h	2717;"	d
XXH_ACC_ALIGN	xxhash.h	2757;"	d
XXH_ACC_ALIGN	xxhash.h	2759;"	d
XXH_ACC_ALIGN	xxhash.h	2761;"	d
XXH_ACC_ALIGN	xxhash.h	2763;"	d
XXH_ACC_ALIGN	xxhash.h	2765;"	d
XXH_ACC_ALIGN	xxhash.h	2767;"	d
XXH_ACC_ALIGN	xxhash.h	2769;"	d
XXH_ACC_NB	xxhash.h	3514;"	d
XXH_ALIGN	xxhash.h	920;"	d
XXH_ALIGN	xxhash.h	922;"	d
XXH_ALIGN	xxhash.h	924;"	d
XXH_ALIGN	xxhash.h	926;"	d
XXH_ALIGN_MEMBER	xxhash.h	1004;"	d
XXH_ALIGN_MEMBER	xxhash.h	932;"	d
XXH_ALIGN_MEMBER	xxhash.h	934;"	d
XXH_ASSERT	xxhash.h	1389;"	d
XXH_ASSERT	xxhash.h	1391;"	d
XXH_AVX2	xxhash.h	/^    XXH_AVX2   = 2,  \/*!< AVX2 for Haswell and Bulldozer *\/$/;"	e	enum:XXH_VECTOR_TYPE
XXH_AVX2	xxhash.h	2724;"	d
XXH_AVX512	xxhash.h	/^    XXH_AVX512 = 3,  \/*!< AVX512 for Skylake and Icelake *\/$/;"	e	enum:XXH_VECTOR_TYPE
XXH_AVX512	xxhash.h	2725;"	d
XXH_CAT	xxhash.h	211;"	d
XXH_COMPILER_GUARD	xxhash.h	1414;"	d
XXH_COMPILER_GUARD	xxhash.h	1416;"	d
XXH_CPU_LITTLE_ENDIAN	xxhash.h	1563;"	d
XXH_CPU_LITTLE_ENDIAN	xxhash.h	1566;"	d
XXH_CPU_LITTLE_ENDIAN	xxhash.h	1583;"	d
XXH_DEBUGLEVEL	xxhash.h	1381;"	d
XXH_DEBUGLEVEL	xxhash.h	1383;"	d
XXH_ERROR	xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	e	enum:__anon1
XXH_ERROR	xxhash.h	148;"	d
XXH_FORCE_ALIGN_CHECK	xxhash.h	1204;"	d
XXH_FORCE_ALIGN_CHECK	xxhash.h	1272;"	d
XXH_FORCE_ALIGN_CHECK	xxhash.h	1274;"	d
XXH_FORCE_INLINE	xxhash.h	1345;"	d
XXH_FORCE_INLINE	xxhash.h	1347;"	d
XXH_FORCE_INLINE	xxhash.h	1352;"	d
XXH_FORCE_INLINE	xxhash.h	1355;"	d
XXH_FORCE_INLINE	xxhash.h	1359;"	d
XXH_FORCE_INLINE	xxhash.h	1362;"	d
XXH_FORCE_MEMORY_ACCESS	xxhash.h	1166;"	d
XXH_FORCE_MEMORY_ACCESS	xxhash.h	1261;"	d
XXH_GCC_VERSION	xxhash.h	1593;"	d
XXH_HAS_BUILTIN	xxhash.h	1596;"	d
XXH_HAS_BUILTIN	xxhash.h	1598;"	d
XXH_IMPLEMENTATION	xxhash.h	1061;"	d
XXH_IMPLEM_13a8737387	xxhash.h	1096;"	d
XXH_INLINE_ALL	hash.c	6;"	d	file:
XXH_INLINE_ALL	proxy.h	31;"	d
XXH_INLINE_ALL_31684351384	xxhash.h	105;"	d
XXH_IPREF	xxhash.h	146;"	d
XXH_MIN	xxhash.h	4733;"	d
XXH_NAME2	xxhash.h	212;"	d
XXH_NAMESPACE	xxhash.h	138;"	d
XXH_NAMESPACE	xxhash.h	206;"	d
XXH_NAMESPACE	xxhash.h	207;"	d
XXH_NEON	xxhash.h	/^    XXH_NEON   = 4,  \/*!< NEON for most ARMv7-A and all AArch64 *\/$/;"	e	enum:XXH_VECTOR_TYPE
XXH_NEON	xxhash.h	2726;"	d
XXH_NO_INLINE	xxhash.h	1349;"	d
XXH_NO_INLINE	xxhash.h	1353;"	d
XXH_NO_INLINE	xxhash.h	1356;"	d
XXH_NO_INLINE	xxhash.h	1360;"	d
XXH_NO_INLINE	xxhash.h	1363;"	d
XXH_NO_INLINE_HINTS	xxhash.h	1226;"	d
XXH_NO_INLINE_HINTS	xxhash.h	1281;"	d
XXH_NO_INLINE_HINTS	xxhash.h	1283;"	d
XXH_NO_LONG_LONG	xxhash.h	1114;"	d
XXH_NO_LONG_LONG	xxhash.h	1115;"	d
XXH_OK	xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	e	enum:__anon1
XXH_OK	xxhash.h	147;"	d
XXH_OLD_NAMES	xxhash.h	1249;"	d
XXH_OLD_NAMES	xxhash.h	1250;"	d
XXH_PREFETCH	xxhash.h	3018;"	d
XXH_PREFETCH	xxhash.h	3022;"	d
XXH_PREFETCH	xxhash.h	3024;"	d
XXH_PREFETCH	xxhash.h	3026;"	d
XXH_PREFETCH_DIST	xxhash.h	4186;"	d
XXH_PREFETCH_DIST	xxhash.h	4189;"	d
XXH_PREFETCH_DIST	xxhash.h	4191;"	d
XXH_PRIME32_1	xxhash.h	1728;"	d
XXH_PRIME32_2	xxhash.h	1729;"	d
XXH_PRIME32_3	xxhash.h	1730;"	d
XXH_PRIME32_4	xxhash.h	1731;"	d
XXH_PRIME32_5	xxhash.h	1732;"	d
XXH_PRIME64_1	xxhash.h	2270;"	d
XXH_PRIME64_2	xxhash.h	2271;"	d
XXH_PRIME64_3	xxhash.h	2272;"	d
XXH_PRIME64_4	xxhash.h	2273;"	d
XXH_PRIME64_5	xxhash.h	2274;"	d
XXH_PROCESS1	xxhash.h	1836;"	d
XXH_PROCESS1	xxhash.h	1908;"	d
XXH_PROCESS1_64	xxhash.h	2343;"	d
XXH_PROCESS4	xxhash.h	1841;"	d
XXH_PROCESS4	xxhash.h	1909;"	d
XXH_PROCESS4_64	xxhash.h	2344;"	d
XXH_PROCESS8_64	xxhash.h	2345;"	d
XXH_PUBLIC_API	xxhash.h	110;"	d
XXH_PUBLIC_API	xxhash.h	112;"	d
XXH_PUBLIC_API	xxhash.h	114;"	d
XXH_PUBLIC_API	xxhash.h	116;"	d
XXH_PUBLIC_API	xxhash.h	119;"	d
XXH_PUBLIC_API	xxhash.h	183;"	d
XXH_PUBLIC_API	xxhash.h	185;"	d
XXH_PUBLIC_API	xxhash.h	188;"	d
XXH_REROLL	xxhash.h	1240;"	d
XXH_REROLL	xxhash.h	1289;"	d
XXH_REROLL	xxhash.h	1291;"	d
XXH_RESTRICT	xxhash.h	2565;"	d
XXH_RESTRICT	xxhash.h	2567;"	d
XXH_RESTRICT	xxhash.h	2570;"	d
XXH_SCALAR	xxhash.h	/^    XXH_SCALAR = 0,  \/*!< Portable scalar version *\/$/;"	e	enum:XXH_VECTOR_TYPE
XXH_SCALAR	xxhash.h	2722;"	d
XXH_SECRET_CONSUME_RATE	xxhash.h	3513;"	d
XXH_SECRET_DEFAULT_SIZE	xxhash.h	3035;"	d
XXH_SECRET_LASTACC_START	xxhash.h	4246;"	d
XXH_SECRET_MERGEACCS_START	xxhash.h	4302;"	d
XXH_SEC_ALIGN	xxhash.h	2775;"	d
XXH_SEC_ALIGN	xxhash.h	2777;"	d
XXH_SPLIT_IN_PLACE	xxhash.h	2893;"	d
XXH_SPLIT_IN_PLACE	xxhash.h	2903;"	d
XXH_SSE2	xxhash.h	/^    XXH_SSE2   = 1,  \/*!<$/;"	e	enum:XXH_VECTOR_TYPE
XXH_SSE2	xxhash.h	2723;"	d
XXH_STATIC_ASSERT	xxhash.h	1395;"	d
XXH_STATIC_LINKING_ONLY	xxhash.h	107;"	d
XXH_STATIC_LINKING_ONLY	xxhash.h	108;"	d
XXH_STRIPE_LEN	xxhash.h	3512;"	d
XXH_TARGET_AVX2	xxhash.h	3675;"	d
XXH_TARGET_AVX512	xxhash.h	3568;"	d
XXH_TARGET_SSE2	xxhash.h	3778;"	d
XXH_VECTOR	xxhash.h	2685;"	d
XXH_VECTOR	xxhash.h	2732;"	d
XXH_VECTOR	xxhash.h	2734;"	d
XXH_VECTOR	xxhash.h	2736;"	d
XXH_VECTOR	xxhash.h	2741;"	d
XXH_VECTOR	xxhash.h	2745;"	d
XXH_VECTOR	xxhash.h	2747;"	d
XXH_VECTOR_TYPE	xxhash.h	/^enum XXH_VECTOR_TYPE \/* fake enum *\/ {$/;"	g
XXH_VERSION_MAJOR	xxhash.h	267;"	d
XXH_VERSION_MINOR	xxhash.h	268;"	d
XXH_VERSION_NUMBER	xxhash.h	270;"	d
XXH_VERSION_RELEASE	xxhash.h	269;"	d
XXH_VSX	xxhash.h	/^    XXH_VSX    = 5,  \/*!< VSX and ZVector for POWER8\/z13 (64-bit) *\/$/;"	e	enum:XXH_VECTOR_TYPE
XXH_VSX	xxhash.h	2727;"	d
XXH_VSX_BE	xxhash.h	2944;"	d
XXH_VSX_BE	xxhash.h	2947;"	d
XXH_VSX_BE	xxhash.h	2949;"	d
XXH_aligned	xxhash.h	/^    XXH_aligned,  \/*!< Aligned *\/$/;"	e	enum:__anon8
XXH_alignedFree	xxhash.h	/^static void XXH_alignedFree(void* p)$/;"	f
XXH_alignedMalloc	xxhash.h	/^static void* XXH_alignedMalloc(size_t s, size_t align)$/;"	f
XXH_alignment	xxhash.h	/^} XXH_alignment;$/;"	t	typeref:enum:__anon8
XXH_bigEndian	xxhash.h	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	enum:__anon7
XXH_endianess	xxhash.h	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	t	typeref:enum:__anon7
XXH_errorcode	xxhash.h	/^typedef enum { XXH_OK=0, XXH_ERROR } XXH_errorcode;$/;"	t	typeref:enum:__anon1
XXH_errorcode	xxhash.h	149;"	d
XXH_free	xxhash.h	/^static void XXH_free(void* p) { free(p); }$/;"	f
XXH_get32bits	xxhash.h	1817;"	d
XXH_get64bits	xxhash.h	2311;"	d
XXH_isLittleEndian	xxhash.h	/^static int XXH_isLittleEndian(void)$/;"	f
XXH_likely	xxhash.h	2576;"	d
XXH_likely	xxhash.h	2579;"	d
XXH_littleEndian	xxhash.h	/^typedef enum { XXH_bigEndian=0, XXH_littleEndian=1 } XXH_endianess;$/;"	e	enum:__anon7
XXH_malloc	xxhash.h	/^static void* XXH_malloc(size_t s) { return malloc(s); }$/;"	f
XXH_memcpy	xxhash.h	/^static void* XXH_memcpy(void* dest, const void* src, size_t size)$/;"	f
XXH_mult32to64	xxhash.h	/^XXH_mult32to64(xxh_u64 x, xxh_u64 y)$/;"	f
XXH_mult32to64	xxhash.h	3086;"	d
XXH_mult32to64	xxhash.h	3095;"	d
XXH_mult64to128	xxhash.h	/^XXH_mult64to128(xxh_u64 lhs, xxh_u64 rhs)$/;"	f
XXH_read32	xxhash.h	/^static xxh_u32 XXH_read32(const void* memPtr) { return *(const xxh_u32*) memPtr; }$/;"	f
XXH_read32	xxhash.h	/^static xxh_u32 XXH_read32(const void* memPtr)$/;"	f
XXH_read32	xxhash.h	/^static xxh_u32 XXH_read32(const void* ptr)$/;"	f
XXH_read64	xxhash.h	/^static xxh_u64 XXH_read64(const void* memPtr)$/;"	f
XXH_read64	xxhash.h	/^static xxh_u64 XXH_read64(const void* ptr)$/;"	f
XXH_readBE32	xxhash.h	/^XXH_FORCE_INLINE xxh_u32 XXH_readBE32(const void* memPtr)$/;"	f
XXH_readBE32	xxhash.h	/^static xxh_u32 XXH_readBE32(const void* ptr)$/;"	f
XXH_readBE64	xxhash.h	/^XXH_FORCE_INLINE xxh_u64 XXH_readBE64(const void* memPtr)$/;"	f
XXH_readBE64	xxhash.h	/^static xxh_u64 XXH_readBE64(const void* ptr)$/;"	f
XXH_readLE32	xxhash.h	/^XXH_FORCE_INLINE xxh_u32 XXH_readLE32(const void* memPtr)$/;"	f
XXH_readLE32	xxhash.h	/^XXH_FORCE_INLINE xxh_u32 XXH_readLE32(const void* ptr)$/;"	f
XXH_readLE32_align	xxhash.h	/^XXH_readLE32_align(const void* ptr, XXH_alignment align)$/;"	f
XXH_readLE64	xxhash.h	/^XXH_FORCE_INLINE xxh_u64 XXH_readLE64(const void* memPtr)$/;"	f
XXH_readLE64	xxhash.h	/^XXH_FORCE_INLINE xxh_u64 XXH_readLE64(const void* ptr)$/;"	f
XXH_readLE64_align	xxhash.h	/^XXH_readLE64_align(const void* ptr, XXH_alignment align)$/;"	f
XXH_rotl32	xxhash.h	1616;"	d
XXH_rotl32	xxhash.h	1620;"	d
XXH_rotl32	xxhash.h	1623;"	d
XXH_rotl64	xxhash.h	1617;"	d
XXH_rotl64	xxhash.h	1621;"	d
XXH_rotl64	xxhash.h	1624;"	d
XXH_swap32	xxhash.h	/^static xxh_u32 XXH_swap32 (xxh_u32 x)$/;"	f
XXH_swap32	xxhash.h	1636;"	d
XXH_swap32	xxhash.h	1638;"	d
XXH_swap64	xxhash.h	/^static xxh_u64 XXH_swap64(xxh_u64 x)$/;"	f
XXH_swap64	xxhash.h	2193;"	d
XXH_swap64	xxhash.h	2195;"	d
XXH_unaligned	xxhash.h	/^    XXH_unaligned \/*!< Possibly unaligned *\/$/;"	e	enum:__anon8
XXH_unlikely	xxhash.h	2577;"	d
XXH_unlikely	xxhash.h	2580;"	d
XXH_vec_loadu	xxhash.h	/^XXH_FORCE_INLINE xxh_u64x2 XXH_vec_loadu(const void *ptr)$/;"	f
XXH_vec_mule	xxhash.h	/^XXH_FORCE_INLINE xxh_u64x2 XXH_vec_mule(xxh_u32x4 a, xxh_u32x4 b)$/;"	f
XXH_vec_mule	xxhash.h	2991;"	d
XXH_vec_mule	xxhash.h	2995;"	d
XXH_vec_mulo	xxhash.h	/^XXH_FORCE_INLINE xxh_u64x2 XXH_vec_mulo(xxh_u32x4 a, xxh_u32x4 b)$/;"	f
XXH_vec_mulo	xxhash.h	2990;"	d
XXH_vec_mulo	xxhash.h	2994;"	d
XXH_vec_revb	xxhash.h	/^XXH_FORCE_INLINE xxh_u64x2 XXH_vec_revb(xxh_u64x2 val)$/;"	f
XXH_vec_revb	xxhash.h	2955;"	d
XXH_versionNumber	xxhash.h	/^XXH_PUBLIC_API unsigned XXH_versionNumber (void) { return XXH_VERSION_NUMBER; }$/;"	f
XXH_versionNumber	xxhash.h	213;"	d
XXH_writeLE64	xxhash.h	/^XXH_FORCE_INLINE void XXH_writeLE64(void* dst, xxh_u64 v64)$/;"	f
XXH_xorshift64	xxhash.h	/^XXH_FORCE_INLINE xxh_u64 XXH_xorshift64(xxh_u64 v64, int shift)$/;"	f
Z	vendor/lua/src/lundump.c	/^  ZIO *Z;$/;"	m	struct:__anon45	file:
ZIO	vendor/lua/src/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Zio	vendor/lua/src/lzio.h	/^struct Zio {$/;"	s
_CRT_SECURE_NO_WARNINGS	vendor/lua/src/lprefix.h	39;"	d
_FILE_OFFSET_BITS	vendor/lua/src/lprefix.h	27;"	d
_GNU_SOURCE	config.h	196;"	d
_LARGEFILE_SOURCE	vendor/lua/src/lprefix.h	26;"	d
_P1003_1B_VISIBLE	memcached.c	33;"	d	file:
_SYS_QUEUE_H_	queue.h	38;"	d
_XOPEN_SOURCE	vendor/lua/src/lprefix.h	17;"	d
_XOPEN_SOURCE	vendor/lua/src/lprefix.h	19;"	d
__APPLE_ALTIVEC__	xxhash.h	2932;"	d
__builtin_expect	memcached.h	1066;"	d
__check_for_switch_to_b	bipbuffer.c	/^static void __check_for_switch_to_b(bipbuf_t* me)$/;"	f	file:
__gcc_attribute__	util.h	31;"	d
__gcc_attribute__	util.h	33;"	d
__need_IOV_MAX	memcached.h	25;"	d
__store_wbuf	extstore.c	/^typedef struct __store_wbuf {$/;"	s	file:
_add_server_default	proxy_ring_hash.c	/^static void _add_server_default(ketama_t *kt, size_t hashstring_size, const char **parts,$/;"	f	file:
_add_server_evcache	proxy_ring_hash.c	/^static void _add_server_evcache(ketama_t *kt, size_t hashstring_size, const char **parts,$/;"	f	file:
_add_server_ketama	proxy_ring_hash.c	/^static void _add_server_ketama(ketama_t *kt, size_t hashstring_size, const char **parts,$/;"	f	file:
_add_server_twemproxy	proxy_ring_hash.c	/^static void _add_server_twemproxy(ketama_t *kt, size_t hashstring_size, const char **parts,$/;"	f	file:
_allocate_page	extstore.c	/^static store_page *_allocate_page(store_engine *e, unsigned int bucket,$/;"	f	file:
_allocate_wbuf	extstore.c	/^static void _allocate_wbuf(store_engine *e, store_page *p) {$/;"	f	file:
_append_prepend	t/binary-extstore.t	/^sub _append_prepend {$/;"	s
_append_prepend	t/binary-sasl.t	/^sub _append_prepend {$/;"	s
_append_prepend	t/binary.t	/^sub _append_prepend {$/;"	s
_backend_failed	proxy_network.c	/^static void _backend_failed(mcp_backend_t *be) {$/;"	f	file:
_backend_failed_ur	proxy_network.c	/^static void _backend_failed_ur(mcp_backend_t *be) {$/;"	f	file:
_copy_config_table	proxy_config.c	/^static void _copy_config_table(lua_State *from, lua_State *to) {$/;"	f	file:
_copy_pool	proxy_config.c	/^static int _copy_pool(lua_State *from, lua_State *to) {$/;"	f	file:
_crawler_module_t	crawler.c	/^struct _crawler_module_t {$/;"	s	file:
_do_command	t/binary-extstore.t	/^sub _do_command {$/;"	s
_do_command	t/binary-sasl.t	/^sub _do_command {$/;"	s
_do_command	t/binary.t	/^sub _do_command {$/;"	s
_dump_helper	proxy_config.c	/^static int _dump_helper(lua_State *L, const void *p, size_t sz, void *ud) {$/;"	f	file:
_dumpbuf	proxy_config.c	/^struct _dumpbuf {$/;"	s	file:
_entry_details	logger.h	/^struct _entry_details {$/;"	s
_finalize_mset	proto_text.c	/^static void _finalize_mset(conn *c, enum store_item_type ret) {$/;"	f	file:
_find_pagesize	restart.c	/^static long _find_pagesize(void) {$/;"	f	file:
_flush_pending_write	proxy_network.c	/^static int _flush_pending_write(mcp_backend_t *be) {$/;"	f	file:
_free_page	extstore.c	/^static void _free_page(store_engine *e, store_page *p) {$/;"	f	file:
_get_io_thread	extstore.c	/^static store_io_thread *_get_io_thread(store_engine *e) {$/;"	f	file:
_handle_single_response	t/binary-extstore.t	/^sub _handle_single_response {$/;"	s
_handle_single_response	t/binary-sasl.t	/^sub _handle_single_response {$/;"	s
_handle_single_response	t/binary.t	/^sub _handle_single_response {$/;"	s
_hashitem_before	assoc.c	/^static item** _hashitem_before (const char *key, const size_t nkey, const uint32_t hv) {$/;"	f	file:
_incrdecr	t/binary-extstore.t	/^sub _incrdecr {$/;"	s
_incrdecr	t/binary-sasl.t	/^sub _incrdecr {$/;"	s
_incrdecr	t/binary.t	/^sub _incrdecr {$/;"	s
_incrdecr_cas	t/binary-extstore.t	/^sub _incrdecr_cas {$/;"	s
_incrdecr_cas	t/binary.t	/^sub _incrdecr_cas {$/;"	s
_incrdecr_header	t/binary-extstore.t	/^sub _incrdecr_header {$/;"	s
_incrdecr_header	t/binary-sasl.t	/^sub _incrdecr_header {$/;"	s
_incrdecr_header	t/binary.t	/^sub _incrdecr_header {$/;"	s
_io_pending_proxy_t	proxy.h	/^struct _io_pending_proxy_t {$/;"	s
_io_pending_storage_t	storage.c	/^typedef struct _io_pending_storage_t {$/;"	s	file:
_io_pending_t	memcached.h	/^struct _io_pending_t {$/;"	s
_load_helper	proxy_config.c	/^static const char * _load_helper(lua_State *L, void *data, size_t *size) {$/;"	f	file:
_logentry	logger.h	/^struct _logentry {$/;"	s
_logger	logger.h	/^typedef struct _logger {$/;"	s
_logger_log_conn_event	logger.c	/^static void _logger_log_conn_event(logentry *e, const entry_details *d, const void *entry, va_list ap) {$/;"	f	file:
_logger_log_evictions	logger.c	/^static void _logger_log_evictions(logentry *e, const entry_details *d, const void *entry, va_list ap) {$/;"	f	file:
_logger_log_ext_write	logger.c	/^static void _logger_log_ext_write(logentry *e, const entry_details *d, const void *entry, va_list ap) {$/;"	f	file:
_logger_log_item_get	logger.c	/^static void _logger_log_item_get(logentry *e, const entry_details *d, const void *entry, va_list ap) {$/;"	f	file:
_logger_log_item_store	logger.c	/^static void _logger_log_item_store(logentry *e, const entry_details *d, const void *entry, va_list ap) {$/;"	f	file:
_logger_log_proxy_req	logger.c	/^static void _logger_log_proxy_req(logentry *e, const entry_details *d, const void *entry, va_list ap) {$/;"	f	file:
_logger_log_text	logger.c	/^static void _logger_log_text(logentry *e, const entry_details *d, const void *entry, va_list ap) {$/;"	f	file:
_logger_parse_cce	logger.c	/^static int _logger_parse_cce(logentry *e, char *scratch) {$/;"	f	file:
_logger_parse_cne	logger.c	/^static int _logger_parse_cne(logentry *e, char *scratch) {$/;"	f	file:
_logger_parse_ee	logger.c	/^static int _logger_parse_ee(logentry *e, char *scratch) {$/;"	f	file:
_logger_parse_extw	logger.c	/^static int _logger_parse_extw(logentry *e, char *scratch) {$/;"	f	file:
_logger_parse_ige	logger.c	/^static int _logger_parse_ige(logentry *e, char *scratch) {$/;"	f	file:
_logger_parse_ise	logger.c	/^static int _logger_parse_ise(logentry *e, char *scratch) {$/;"	f	file:
_logger_parse_prx_req	logger.c	/^static int _logger_parse_prx_req(logentry *e, char *scratch) {$/;"	f	file:
_logger_parse_text	logger.c	/^static int _logger_parse_text(logentry *e, char *scratch) {$/;"	f	file:
_logger_util_addr_endpoint	logger.c	/^static int _logger_util_addr_endpoint(struct sockaddr_in6 *addr, char *rip,$/;"	f	file:
_lru_bump_buf	items.c	/^typedef struct _lru_bump_buf {$/;"	s	file:
_mc_meta_data	memcached.c	/^struct _mc_meta_data {$/;"	s	file:
_mc_meta_load_cb	memcached.c	/^static int _mc_meta_load_cb(const char *tag, void *ctx, void *data) {$/;"	f	file:
_mc_meta_save_cb	memcached.c	/^static int _mc_meta_save_cb(const char *tag, void *ctx, void *data) {$/;"	f	file:
_mc_resp	memcached.h	/^typedef struct _mc_resp {$/;"	s
_mc_resp_bundle	memcached.h	/^struct _mc_resp_bundle {$/;"	s
_mcmc_parse_response	vendor/mcmc/mcmc.c	/^static int _mcmc_parse_response(mcmc_ctx_t *ctx, mcmc_resp_t *r) {$/;"	f	file:
_mcmc_parse_value_line	vendor/mcmc/mcmc.c	/^static int _mcmc_parse_value_line(mcmc_ctx_t *ctx, mcmc_resp_t *r) {$/;"	f	file:
_mcplib_pool_dist	proxy_lua.c	/^static void _mcplib_pool_dist(lua_State *L, mcp_pool_t *p) {$/;"	f	file:
_meta_flag_preparse	proto_text.c	/^static int _meta_flag_preparse(token_t *tokens, const size_t start,$/;"	f	file:
_meta_flags	proto_text.c	/^struct _meta_flags {$/;"	s	file:
_next_version	extstore.c	/^static uint64_t _next_version(store_engine *e) {$/;"	f	file:
_nextrand	proxy_lua.c	/^static uint32_t _nextrand(uint32_t *s) {$/;"	f	file:
_obj_io	extstore.h	/^struct _obj_io {$/;"	s
_parse_slab_sizes	memcached.c	/^static bool _parse_slab_sizes(char *s, uint32_t *slab_sizes) {$/;"	f	file:
_prefix_stats	stats_prefix.h	/^struct _prefix_stats {$/;"	s
_prep_pending_write	proxy_network.c	/^static int _prep_pending_write(mcp_backend_t *be, unsigned int *tosend) {$/;"	f	file:
_process_request_gat	proxy_request.c	/^static int _process_request_gat(mcp_parser_t *pr) {$/;"	f	file:
_process_request_key	proxy_request.c	/^static int _process_request_key(mcp_parser_t *pr) {$/;"	f	file:
_process_request_meta	proxy_request.c	/^static int _process_request_meta(mcp_parser_t *pr) {$/;"	f	file:
_process_request_metaflags	proxy_request.c	/^static int _process_request_metaflags(mcp_parser_t *pr, int token) {$/;"	f	file:
_process_request_mset	proxy_request.c	/^static int _process_request_mset(mcp_parser_t *pr) {$/;"	f	file:
_process_request_next_key	proxy_request.c	/^size_t _process_request_next_key(mcp_parser_t *pr) {$/;"	f
_process_request_noreply	proxy_request.c	/^static int _process_request_noreply(mcp_parser_t *pr) {$/;"	f	file:
_process_request_simple	proxy_request.c	/^static int _process_request_simple(mcp_parser_t *pr, const size_t max) {$/;"	f	file:
_process_request_storage	proxy_request.c	/^static int _process_request_storage(mcp_parser_t *pr, size_t max) {$/;"	f	file:
_process_token_len	proxy_request.c	/^static int _process_token_len(mcp_parser_t *pr, size_t token) {$/;"	f	file:
_process_tokenize	proxy_request.c	/^static int _process_tokenize(mcp_parser_t *pr, const size_t max) {$/;"	f	file:
_proxy_config_thread	proxy_config.c	/^static void *_proxy_config_thread(void *arg) {$/;"	f	file:
_proxy_event_handler_dequeue	proxy_network.c	/^static int _proxy_event_handler_dequeue(proxy_event_thread_t *t) {$/;"	f	file:
_proxy_evthr_evset_be_read	proxy_network.c	/^static void _proxy_evthr_evset_be_read(mcp_backend_t *be, char *buf, size_t len, struct __kernel_timespec *ts) {$/;"	f	file:
_proxy_evthr_evset_be_retry	proxy_network.c	/^static void _proxy_evthr_evset_be_retry(mcp_backend_t *be) {$/;"	f	file:
_proxy_evthr_evset_be_wrpoll	proxy_network.c	/^static void _proxy_evthr_evset_be_wrpoll(mcp_backend_t *be, struct __kernel_timespec *ts) {$/;"	f	file:
_proxy_evthr_evset_clock	proxy_network.c	/^static void _proxy_evthr_evset_clock(proxy_event_thread_t *t) {$/;"	f	file:
_proxy_evthr_evset_notifier	proxy_network.c	/^static void _proxy_evthr_evset_notifier(proxy_event_thread_t *t) {$/;"	f	file:
_proxy_manager_thread	proxy_config.c	/^static void *_proxy_manager_thread(void *arg) {$/;"	f	file:
_read_from_wbuf	extstore.c	/^static inline int _read_from_wbuf(store_page *p, obj_io *io) {$/;"	f	file:
_reset_bad_backend	proxy_network.c	/^static int _reset_bad_backend(mcp_backend_t *be, enum proxy_be_failures err) {$/;"	f	file:
_restart_data_cb	restart.c	/^struct _restart_data_cb {$/;"	s	file:
_rotl	proxy_lua.c	/^static inline uint32_t _rotl(const uint32_t x, int k) {$/;"	f	file:
_set_event	proxy_network.c	/^static void _set_event(mcp_backend_t *be, struct event_base *base, int flags, struct timeval t, event_callback_fn callback) {$/;"	f	file:
_set_noreply_mode	proto_proxy.c	/^static void _set_noreply_mode(mc_resp *resp, mcp_resp_t *r) {$/;"	f	file:
_start_proxy_config_threads	proxy_config.c	/^int _start_proxy_config_threads(proxy_ctx_t *ctx) {$/;"	f
_storage_compact_cb	storage.c	/^static void _storage_compact_cb(void *e, obj_io *io, int ret) {$/;"	f	file:
_storage_get_item_cb	storage.c	/^static void _storage_get_item_cb(void *e, obj_io *io, int ret) {$/;"	f	file:
_store_item_copy_chunks	memcached.c	/^static int _store_item_copy_chunks(item *d_it, item *s_it, const int len) {$/;"	f	file:
_store_item_copy_data	memcached.c	/^static int _store_item_copy_data(int comm, item *old_it, item *new_it, item *add_it) {$/;"	f	file:
_store_page	extstore.c	/^typedef struct _store_page {$/;"	s	file:
_store_wbuf	extstore.c	/^} _store_wbuf;$/;"	t	typeref:struct:__store_wbuf	file:
_strchunk	memcached.h	/^typedef struct _strchunk {$/;"	s
_stritem	memcached.h	/^typedef struct _stritem {$/;"	s
_submit_wbuf	extstore.c	/^static void _submit_wbuf(store_engine *e, store_page *p) {$/;"	f	file:
_transmit_post	memcached.c	/^static void _transmit_post(conn *c, ssize_t res) {$/;"	f	file:
_transmit_pre	memcached.c	/^static int _transmit_pre(conn *c, struct iovec *iovs, int iovused, bool one_resp) {$/;"	f	file:
_wbuf_cb	extstore.c	/^static void _wbuf_cb(void *ep, obj_io *io, int ret) {$/;"	f	file:
a_end	bipbuffer.h	/^    unsigned int a_start, a_end;$/;"	m	struct:__anon58
a_start	bipbuffer.h	/^    unsigned int a_start, a_end;$/;"	m	struct:__anon58
abcd	md5.h	/^    md5_word_t abcd[4];		\/* digest buffer *\/$/;"	m	struct:md5_state_s
about	vendor/lua/doc/readme.html	/^<H2><A NAME="about">About Lua<\/A><\/H2>$/;"	a
abs_builddir	Makefile	/^abs_builddir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17$/;"	m
abs_builddir	doc/Makefile	/^abs_builddir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/doc$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17$/;"	m
abs_srcdir	doc/Makefile	/^abs_srcdir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/doc$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17$/;"	m
abs_top_builddir	doc/Makefile	/^abs_top_builddir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17$/;"	m
abs_top_srcdir	doc/Makefile	/^abs_top_srcdir = \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17$/;"	m
absentkey	vendor/lua/src/ltable.c	/^static const TValue absentkey = {ABSTKEYCONSTANT};$/;"	v	file:
abslineinfo	vendor/lua/src/lobject.h	/^  AbsLineInfo *abslineinfo;  \/* idem *\/$/;"	m	struct:Proto
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	doc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_check_decl	configure	/^ac_fn_check_decl ()$/;"	f
accept_new_conns	thread.c	/^void accept_new_conns(const bool do_accept) {$/;"	f
accepting_conns	memcached.h	/^    bool          accepting_conns;  \/* whether we are currently accepting *\/$/;"	m	struct:stats_state
access	memcached.h	/^    int access;  \/* access mask (a la chmod) for unix domain socket *\/$/;"	m	struct:settings
act	linux_priv.c	/^static const struct sigaction act = {$/;"	v	typeref:struct:sigaction	file:
active	extstore.c	/^    bool active; \/* actively being written to *\/$/;"	m	struct:_store_page	file:
active	storage.c	/^    bool active;              \/* tells if IO was dispatched or not *\/$/;"	m	struct:_io_pending_storage_t	file:
active_crawler_mod	crawler.c	/^crawler_module_t active_crawler_mod;$/;"	v
active_crawler_type	crawler.c	/^enum crawler_run_type active_crawler_type;$/;"	v	typeref:enum:crawler_run_type
actvar	vendor/lua/src/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon39
add	t/binary-extstore.t	/^sub add {$/;"	s
add	t/binary-sasl.t	/^sub add {$/;"	s
add	t/binary.t	/^sub add {$/;"	s
add_bin_header	proto_bin.c	/^static void add_bin_header(conn *c, uint16_t err, uint8_t hdr_len, uint16_t key_len, uint32_t body_len) {$/;"	f	file:
add_delta	thread.c	/^enum delta_result_type add_delta(conn *c, const char *key,$/;"	f
add_s	vendor/lua/src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	vendor/lua/src/lstrlib.c	/^static int add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addbuff	vendor/lua/src/lstate.c	67;"	d	file:
adddigit	vendor/lua/src/lstrlib.c	/^static lua_Number adddigit (char *buff, int n, lua_Number x) {$/;"	f	file:
addfield	vendor/lua/src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, lua_Integer i) {$/;"	f	file:
addk	vendor/lua/src/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	vendor/lua/src/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addliteral	vendor/lua/src/lstrlib.c	/^static void addliteral (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addnum2buff	vendor/lua/src/lobject.c	/^static void addnum2buff (BuffFS *buff, TValue *num) {$/;"	f	file:
addprototype	vendor/lua/src/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	vendor/lua/src/lstrlib.c	/^static void addquoted (luaL_Buffer *b, const char *s, size_t len) {$/;"	f	file:
addr	logger.h	/^    struct sockaddr_in6 addr;$/;"	m	struct:logentry_conn_event	typeref:struct:logentry_conn_event::sockaddr_in6
addreturn	vendor/lua/src/lua.c	/^static int addreturn (lua_State *L) {$/;"	f	file:
addsize	vendor/lua/src/lobject.c	436;"	d	file:
addstr	vendor/lua/src/lobject.c	555;"	d	file:
addstr2buff	vendor/lua/src/lobject.c	/^static void addstr2buff (BuffFS *buff, const char *str, size_t slen) {$/;"	f	file:
addtoclib	vendor/lua/src/loadlib.c	/^static void addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
adjust_assign	vendor/lua/src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjustlocalvars	vendor/lua/src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
adjustresults	vendor/lua/src/lapi.h	25;"	d
age	items.h	/^    uint32_t age;$/;"	m	struct:__anon19
age	slab_automove.c	/^    uint64_t age;$/;"	m	struct:window_data	file:
age	slab_automove_extstore.c	/^    uint64_t age;$/;"	m	struct:window_data	file:
aix_post_process_depfile	depcomp	/^aix_post_process_depfile ()$/;"	f
alimit	vendor/lua/src/lobject.h	/^  unsigned int alimit;  \/* "limit" of 'array' array *\/$/;"	m	struct:Table
allgc	vendor/lua/src/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State
alloc_large_chunk	slabs.c	/^static void * alloc_large_chunk(const size_t limit)$/;"	f	file:
allocated	extstore.c	/^    unsigned int allocated;$/;"	m	struct:_store_page	file:
allocsizenode	vendor/lua/src/ltable.h	31;"	d
allocupvalue	vendor/lua/src/lparser.c	/^static Upvaldesc *allocupvalue (FuncState *fs) {$/;"	f	file:
allow_closed_read	testapp.c	/^static bool allow_closed_read = false;$/;"	v	file:
allow_new_conns	memcached.c	/^static volatile bool allow_new_conns = true;$/;"	v	file:
allowhook	vendor/lua/src/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State
allweak	vendor/lua/src/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DIST_COMMON	Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/config.h.in AUTHORS \\$/;"	m
am__DIST_COMMON	doc/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/version.m4 \\$/;"	m
am__aclocal_m4_deps	doc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/version.m4 \\$/;"	m
am__append_8	Makefile	/^am__append_8 = extstore.c extstore.h \\$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__base_list	doc/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	doc/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	doc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	doc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_remade	Makefile	/^am__depfiles_remade = .\/$(DEPDIR)\/cache.Po .\/$(DEPDIR)\/crc32c.Po \\$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	doc/Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__install_max	doc/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"$/;"	m
am__installdirs	doc/Makefile	/^am__installdirs = "$(DESTDIR)$(man1dir)"$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	doc/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	doc/Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	doc/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	doc/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	doc/Makefile	/^am__make_running_with_option = \\$/;"	m
am__maybe_remake_depfiles	Makefile	/^am__maybe_remake_depfiles = depfiles$/;"	m
am__memcached_SOURCES_DIST	Makefile	/^am__memcached_SOURCES_DIST = memcached.c memcached.h hash.c hash.h \\$/;"	m
am__memcached_debug_SOURCES_DIST	Makefile	/^am__memcached_debug_SOURCES_DIST = memcached.c memcached.h hash.c \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	doc/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	doc/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	doc/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_17	Makefile	/^am__objects_17 =  \\$/;"	m
am__objects_19	Makefile	/^am__objects_19 = memcached_debug-memcached.$(OBJEXT) \\$/;"	m
am__objects_8	Makefile	/^am__objects_8 = memcached-extstore.$(OBJEXT) \\$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	doc/Makefile	/^am__quote = $/;"	m
am__recursive_targets	Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	doc/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP) \\$/;"	m
am__tagged_files	doc/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	doc/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	doc/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	doc/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	doc/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	doc/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	doc/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	doc/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	doc/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	doc/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	doc/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	doc/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	doc/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	doc/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	doc/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_memcached_OBJECTS	Makefile	/^am_memcached_OBJECTS = memcached-memcached.$(OBJEXT) \\$/;"	m
am_memcached_debug_OBJECTS	Makefile	/^am_memcached_debug_OBJECTS = $(am__objects_19)$/;"	m
am_testapp_OBJECTS	Makefile	/^am_testapp_OBJECTS = testapp.$(OBJEXT) util.$(OBJEXT) \\$/;"	m
am_timedrun_OBJECTS	Makefile	/^am_timedrun_OBJECTS = timedrun.$(OBJEXT)$/;"	m
api	vendor/lua/doc/contents.html	/^<H3><A NAME="api">C API<\/A><\/H3>$/;"	a
api_check	vendor/lua/src/llimits.h	113;"	d
api_checknelems	vendor/lua/src/lapi.h	30;"	d
api_incr_top	vendor/lua/src/lapi.h	16;"	d
append_ascii_stats	memcached.c	/^static void append_ascii_stats(const char *key, const uint16_t klen,$/;"	f	file:
append_bin_stats	memcached.c	/^static void append_bin_stats(const char *key, const uint16_t klen,$/;"	f	file:
append_stat	memcached.c	/^void append_stat(const char *name, ADD_STAT add_stats, conn *c,$/;"	f
append_stats	memcached.c	/^void append_stats(const char *key, const uint16_t klen,$/;"	f
argtable_ref	proxy_await.c	/^    int argtable_ref; \/\/ need to hold refs to any potential hash selectors$/;"	m	struct:mcp_await_s	file:
arith	vendor/lua/src/lstrlib.c	/^static int arith (lua_State *L, int op, const char *mtname) {$/;"	f	file:
arith_add	vendor/lua/src/lstrlib.c	/^static int arith_add (lua_State *L) {$/;"	f	file:
arith_div	vendor/lua/src/lstrlib.c	/^static int arith_div (lua_State *L) {$/;"	f	file:
arith_idiv	vendor/lua/src/lstrlib.c	/^static int arith_idiv (lua_State *L) {$/;"	f	file:
arith_mod	vendor/lua/src/lstrlib.c	/^static int arith_mod (lua_State *L) {$/;"	f	file:
arith_mul	vendor/lua/src/lstrlib.c	/^static int arith_mul (lua_State *L) {$/;"	f	file:
arith_pow	vendor/lua/src/lstrlib.c	/^static int arith_pow (lua_State *L) {$/;"	f	file:
arith_sub	vendor/lua/src/lstrlib.c	/^static int arith_sub (lua_State *L) {$/;"	f	file:
arith_unm	vendor/lua/src/lstrlib.c	/^static int arith_unm (lua_State *L) {$/;"	f	file:
arithmetic_command	testapp.c	/^static off_t arithmetic_command(char* buf,$/;"	f	file:
arr	vendor/lua/src/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon39
arr	vendor/lua/src/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist
array	vendor/lua/src/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table
arrayindex	vendor/lua/src/ltable.c	/^static unsigned int arrayindex (lua_Integer k) {$/;"	f	file:
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_nop	configure	/^as_fn_nop ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
ascii_multiget	proxy.h	/^    bool ascii_multiget; \/\/ ascii multiget mode. (hide errors\/END)$/;"	m	struct:mcp_request_s
ascii_multiget	proxy.h	/^    bool ascii_multiget; \/\/ passed on from mcp_r_t$/;"	m	struct:_io_pending_proxy_t
ascii_prot	memcached.h	/^    ascii_prot = 3, \/* arbitrary value. *\/$/;"	e	enum:protocol
assoc_delete	assoc.c	/^void assoc_delete(const char *key, const size_t nkey, const uint32_t hv) {$/;"	f
assoc_expand	assoc.c	/^static void assoc_expand(void) {$/;"	f	file:
assoc_find	assoc.c	/^item *assoc_find(const char *key, const size_t nkey, const uint32_t hv) {$/;"	f
assoc_get_iterator	assoc.c	/^void *assoc_get_iterator(void) {$/;"	f
assoc_init	assoc.c	/^void assoc_init(const int hashtable_init) {$/;"	f
assoc_insert	assoc.c	/^int assoc_insert(item *it, const uint32_t hv) {$/;"	f
assoc_iterate	assoc.c	/^bool assoc_iterate(void *iterp, item **it) {$/;"	f
assoc_iterate_final	assoc.c	/^void assoc_iterate_final(void *iterp) {$/;"	f
assoc_iterator	assoc.c	/^struct assoc_iterator {$/;"	s	file:
assoc_maintenance_thread	assoc.c	/^static void *assoc_maintenance_thread(void *arg) {$/;"	f	file:
assoc_start_expand	assoc.c	/^void assoc_start_expand(uint64_t curr_items) {$/;"	f
atomic	vendor/lua/src/lgc.c	/^static lu_mem atomic (lua_State *L) {$/;"	f	file:
atomic2gen	vendor/lua/src/lgc.c	/^static void atomic2gen (lua_State *L, global_State *g) {$/;"	f	file:
atomics_mutex	thread.c	/^pthread_mutex_t atomics_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
auth_entry	authfile.c	/^typedef struct auth_entry {$/;"	s	file:
auth_error	t/binary-sasl.t	/^sub auth_error {$/;"	s
auth_file	memcached.h	/^    char *auth_file;    \/* path to user authentication file *\/$/;"	m	struct:settings
auth_t	authfile.c	/^} auth_t;$/;"	t	typeref:struct:auth_entry	file:
authenticate	t/binary-sasl.t	/^sub authenticate {$/;"	s
authenticated	memcached.h	/^    bool authenticated;$/;"	m	struct:conn
authenticated	proto_bin.c	/^static bool authenticated(conn *c) {$/;"	f	file:
authfile_check	authfile.c	/^int authfile_check(const char *user, const char *pass) {$/;"	f
authfile_load	authfile.c	/^enum authfile_ret authfile_load(const char *file) {$/;"	f
authfile_ret	authfile.h	/^enum authfile_ret {$/;"	g
autoviv_exptime	proto_text.c	/^    rel_time_t autoviv_exptime;$/;"	m	struct:_meta_flags	file:
aux_close	vendor/lua/src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	vendor/lua/src/ltablib.c	33;"	d	file:
aux_lines	vendor/lua/src/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_rawset	vendor/lua/src/lapi.c	/^static void aux_rawset (lua_State *L, int idx, TValue *key, int n) {$/;"	f	file:
aux_upvalue	vendor/lua/src/lapi.c	/^static const char *aux_upvalue (TValue *fi, int n, TValue **val,$/;"	f	file:
auxgetinfo	vendor/lua/src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxgetstr	vendor/lua/src/lapi.c	/^static int auxgetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:
auxlib	vendor/lua/doc/contents.html	/^<H3><A NAME="auxlib">auxiliary library<\/A><\/H3>$/;"	a
auxresume	vendor/lua/src/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsetstr	vendor/lua/src/lapi.c	/^static void auxsetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:
auxsort	vendor/lua/src/ltablib.c	/^static void auxsort (lua_State *L, IdxT lo, IdxT up,$/;"	f	file:
auxstatus	vendor/lua/src/lcorolib.c	/^static int auxstatus (lua_State *L, lua_State *co) {$/;"	f	file:
auxupvalue	vendor/lua/src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
await_first	proxy.h	/^    bool await_first; \/\/ are we the main route for an await object?$/;"	m	struct:_io_pending_proxy_t
await_ref	proxy.h	/^    int await_ref; \/\/ lua reference if we were an await object$/;"	m	struct:_io_pending_proxy_t
b	vendor/lua/src/lauxlib.h	/^    char b[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	union:luaL_Buffer::__anon49
b	vendor/lua/src/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer
b	vendor/lua/src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b_end	bipbuffer.h	/^    unsigned int b_end;$/;"	m	struct:__anon58
b_inuse	bipbuffer.h	/^    int b_inuse;$/;"	m	struct:__anon58
b_str2int	vendor/lua/src/lbaselib.c	/^static const char *b_str2int (const char *s, int base, lua_Integer *pn) {$/;"	f	file:
backend	proxy.h	/^    mcp_backend_t *backend; \/\/ backend server to request from$/;"	m	struct:_io_pending_proxy_t
backend_disconn	proxy.h	/^    uint64_t backend_disconn; \/\/ backends with no connections$/;"	m	struct:proxy_global_stats
backend_errors	proxy.h	/^    uint64_t backend_errors; \/\/ errors from backends$/;"	m	struct:proxy_global_stats
backend_failed	proxy.h	/^    uint64_t backend_failed; \/\/ an error caused a backend reset$/;"	m	struct:proxy_global_stats
backend_failure_limit	proxy.h	/^    int backend_failure_limit;$/;"	m	struct:proxy_tunables
backend_marked_bad	proxy.h	/^    uint64_t backend_marked_bad; \/\/ backend set to autofail$/;"	m	struct:proxy_global_stats
backend_requests	proxy.h	/^    uint64_t backend_requests; \/\/ reqs sent to backends$/;"	m	struct:proxy_global_stats
backend_responses	proxy.h	/^    uint64_t backend_responses; \/\/ responses received from backends$/;"	m	struct:proxy_global_stats
backend_total	proxy.h	/^    uint64_t backend_total;$/;"	m	struct:proxy_global_stats
backlog	memcached.h	/^    int backlog;$/;"	m	struct:settings
bad	proxy.h	/^    bool bad; \/\/ timed out, marked as bad.$/;"	m	struct:mcp_backend_s
badcrc	storage.c	/^    bool badcrc;              \/* signal a crc failure *\/$/;"	m	struct:_io_pending_storage_t	file:
base	memcached.h	/^    struct event_base *base;    \/* libevent handle this thread uses *\/$/;"	m	struct:__anon110	typeref:struct:__anon110::event_base
base	proxy.h	/^    struct event_base *base;$/;"	m	struct:proxy_event_thread_s	typeref:struct:proxy_event_thread_s::event_base
base64_decode	base64.c	/^size_t base64_decode(const unsigned char *src, size_t len,$/;"	f
base64_encode	base64.c	/^size_t base64_encode(const unsigned char *src, size_t len,$/;"	f
base64_table	base64.c	/^static const unsigned char base64_table[65] =$/;"	v	file:
base_ci	vendor/lua/src/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State
base_funcs	vendor/lua/src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
basehookcount	vendor/lua/src/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State
be	proxy.h	/^    mcp_backend_t *be; \/\/ backend handling this request.$/;"	m	struct:mcp_request_s
be	proxy.h	/^    mcp_backend_t *be;$/;"	m	struct:__anon105
be_head	proxy.h	/^    be_head_t be_head; \/\/ stack of backends for processing.$/;"	m	struct:proxy_event_thread_s
be_head_t	proxy.h	/^typedef STAILQ_HEAD(be_head_s, mcp_backend_s) be_head_t;$/;"	t
be_name	proxy.h	/^    char be_name[MAX_NAMELEN+1];$/;"	m	struct:__anon104
be_namelen	logger.h	/^    size_t be_namelen;$/;"	m	struct:logentry_proxy_req
be_next	proxy.h	/^    STAILQ_ENTRY(mcp_backend_s) be_next; \/\/ stack for backends$/;"	m	struct:mcp_backend_s
be_port	proxy.h	/^    char be_port[MAX_PORTLEN+1];$/;"	m	struct:__anon104
be_portlen	logger.h	/^    size_t be_portlen;$/;"	m	struct:logentry_proxy_req
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = memcached$(EXEEXT)$/;"	m
bin_list_sasl_mechs	proto_bin.c	/^static void bin_list_sasl_mechs(conn *c) {$/;"	f	file:
bin_no_state	memcached.h	/^    bin_no_state,$/;"	e	enum:bin_substates
bin_read_flush_exptime	memcached.h	/^    bin_read_flush_exptime,$/;"	e	enum:bin_substates
bin_read_set_value	memcached.h	/^    bin_read_set_value,$/;"	e	enum:bin_substates
bin_reading_cas_header	memcached.h	/^    bin_reading_cas_header,$/;"	e	enum:bin_substates
bin_reading_del_header	memcached.h	/^    bin_reading_del_header,$/;"	e	enum:bin_substates
bin_reading_get_key	memcached.h	/^    bin_reading_get_key,$/;"	e	enum:bin_substates
bin_reading_incr_header	memcached.h	/^    bin_reading_incr_header,$/;"	e	enum:bin_substates
bin_reading_sasl_auth	memcached.h	/^    bin_reading_sasl_auth,$/;"	e	enum:bin_substates
bin_reading_sasl_auth_data	memcached.h	/^    bin_reading_sasl_auth_data,$/;"	e	enum:bin_substates
bin_reading_set_header	memcached.h	/^    bin_reading_set_header,$/;"	e	enum:bin_substates
bin_reading_stat	memcached.h	/^    bin_reading_stat,$/;"	e	enum:bin_substates
bin_reading_touch_key	memcached.h	/^    bin_reading_touch_key,$/;"	e	enum:bin_substates
bin_substates	memcached.h	/^enum bin_substates {$/;"	g
binary_get_key	proto_bin.c	/^static char* binary_get_key(conn *c) {$/;"	f	file:
binary_header	memcached.h	/^    protocol_binary_request_header binary_header;$/;"	m	struct:conn
binary_hickup_recv_verification_thread	testapp.c	/^static void *binary_hickup_recv_verification_thread(void *arg) {$/;"	f	file:
binary_prot	memcached.h	/^    binary_prot,$/;"	e	enum:protocol
bindata	vendor/lua/src/lobject.h	/^  union {LUAI_MAXALIGN;} bindata;$/;"	m	struct:Udata0	typeref:union:Udata0::__anon52
binding_protocol	memcached.h	/^    enum protocol binding_protocol;$/;"	m	struct:settings	typeref:enum:settings::protocol
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	doc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
binsearch	vendor/lua/src/ltable.c	/^static unsigned int binsearch (const TValue *array, unsigned int i,$/;"	f	file:
bipbuf_free	bipbuffer.c	/^void bipbuf_free(bipbuf_t* me)$/;"	f
bipbuf_init	bipbuffer.c	/^void bipbuf_init(bipbuf_t* me, const unsigned int size)$/;"	f
bipbuf_is_empty	bipbuffer.c	/^int bipbuf_is_empty(const bipbuf_t* me)$/;"	f
bipbuf_new	bipbuffer.c	/^bipbuf_t *bipbuf_new(const unsigned int size)$/;"	f
bipbuf_offer	bipbuffer.c	/^int bipbuf_offer(bipbuf_t* me, const unsigned char *data, const int size)$/;"	f
bipbuf_peek	bipbuffer.c	/^unsigned char *bipbuf_peek(const bipbuf_t* me, const unsigned int size)$/;"	f
bipbuf_peek_all	bipbuffer.c	/^unsigned char *bipbuf_peek_all(const bipbuf_t* me, unsigned int *size)$/;"	f
bipbuf_poll	bipbuffer.c	/^unsigned char *bipbuf_poll(bipbuf_t* me, const unsigned int size)$/;"	f
bipbuf_push	bipbuffer.c	/^int bipbuf_push(bipbuf_t* me, const int size)$/;"	f
bipbuf_request	bipbuffer.c	/^unsigned char *bipbuf_request(bipbuf_t* me, const int size)$/;"	f
bipbuf_size	bipbuffer.c	/^int bipbuf_size(const bipbuf_t* me)$/;"	f
bipbuf_sizeof	bipbuffer.c	/^static size_t bipbuf_sizeof(const unsigned int size)$/;"	f	file:
bipbuf_t	bipbuffer.h	/^} bipbuf_t;$/;"	t	typeref:struct:__anon58
bipbuf_unused	bipbuffer.c	/^int bipbuf_unused(const bipbuf_t* me)$/;"	f
bipbuf_used	bipbuffer.c	/^int bipbuf_used(const bipbuf_t* me)$/;"	f
bit2mask	vendor/lua/src/lgc.h	64;"	d
bitmask	vendor/lua/src/lgc.h	63;"	d
bl	vendor/lua/src/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt
blen	proxy.h	/^    size_t blen; \/\/ total size of the value to read.$/;"	m	struct:__anon104
blen	vendor/lua/src/lobject.c	/^  int blen;  \/* length of partial string in 'space' *\/$/;"	m	struct:BuffFS	file:
block	vendor/lua/src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block_follow	vendor/lua/src/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
blocked	logger.h	/^    uint64_t blocked; \/* times blocked instead of dropped *\/$/;"	m	struct:_logger
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon73::__anon74	typeref:struct:__anon73::__anon74::__anon75
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon76::__anon77	typeref:struct:__anon76::__anon77::__anon78
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon79::__anon80	typeref:struct:__anon79::__anon80::__anon81
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon82::__anon83	typeref:struct:__anon82::__anon83::__anon84
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon85::__anon86	typeref:struct:__anon85::__anon86::__anon87
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon88::__anon89	typeref:struct:__anon88::__anon89::__anon90
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon91::__anon92	typeref:struct:__anon91::__anon92::__anon93
body	protocol_binary.h	/^            } body;$/;"	m	struct:__anon94::__anon95	typeref:struct:__anon94::__anon95::__anon96
body	vendor/lua/src/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
bodylen	protocol_binary.h	/^            uint32_t bodylen;$/;"	m	struct:__anon65::__anon66
bodylen	protocol_binary.h	/^            uint32_t bodylen;$/;"	m	struct:__anon67::__anon68
bool	config.h	207;"	d
boolF	vendor/lua/src/lcode.c	/^static int boolF (FuncState *fs) {$/;"	f	file:
boolT	vendor/lua/src/lcode.c	/^static int boolT (FuncState *fs) {$/;"	f	file:
box	vendor/lua/src/lauxlib.c	/^  void *box;$/;"	m	struct:UBox	file:
boxgc	vendor/lua/src/lauxlib.c	/^static int boxgc (lua_State *L) {$/;"	f	file:
boxmt	vendor/lua/src/lauxlib.c	/^static const luaL_Reg boxmt[] = {  \/* box metamethods *\/$/;"	v	file:
bproto	thread.c	/^    enum protocol bproto;$/;"	m	struct:conn_queue_item	typeref:enum:conn_queue_item::protocol	file:
bread	proxy.h	/^    int bread; \/\/ amount of bytes read into value so far.$/;"	m	struct:__anon104
breakstat	vendor/lua/src/lparser.c	/^static void breakstat (LexState *ls) {$/;"	f	file:
bsize	vendor/lua/src/lauxlib.c	/^  size_t bsize;$/;"	m	struct:UBox	file:
bucket	assoc.c	/^    uint64_t bucket;$/;"	m	struct:assoc_iterator	file:
bucket	extstore.c	/^    unsigned int bucket; \/* which bucket the page is linked into *\/$/;"	m	struct:_store_page	file:
bucket	extstore.h	/^    unsigned int bucket; \/\/ free page bucket$/;"	m	struct:extstore_conf_file
bucket	extstore.h	/^    unsigned int bucket;$/;"	m	struct:extstore_page_data
bucket	logger.h	/^    uint8_t bucket;$/;"	m	struct:logentry_ext_write
bucket_locked	assoc.c	/^    bool bucket_locked;$/;"	m	struct:assoc_iterator	file:
buckets	proxy_jump_hash.c	/^    unsigned int buckets;$/;"	m	struct:__anon12	file:
buf	crawler.c	/^    bipbuf_t *buf; \/* output buffer *\/$/;"	m	struct:__anon55	file:
buf	extstore.c	/^    char *buf;$/;"	m	struct:__store_wbuf	file:
buf	extstore.h	/^    char *buf;  \/* buffer of data to read or write to *\/$/;"	m	struct:_obj_io
buf	items.c	/^    bipbuf_t *buf;$/;"	m	struct:_lru_bump_buf	file:
buf	logger.h	/^    bipbuf_t *buf; \/* per-watcher output buffer *\/$/;"	m	struct:__anon60
buf	logger.h	/^    bipbuf_t *buf;$/;"	m	struct:_logger
buf	md5.h	/^    md5_byte_t buf[64];		\/* accumulate block *\/$/;"	m	struct:md5_state_s
buf	proxy.h	/^    char *buf; \/\/ response line + potentially value.$/;"	m	struct:__anon104
buf	proxy_config.c	/^    char *buf;$/;"	m	struct:_dumpbuf	file:
buf_pos	extstore.c	/^    char *buf_pos;$/;"	m	struct:__store_wbuf	file:
buff	vendor/lua/src/lauxlib.c	/^  char buff[BUFSIZ];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	vendor/lua/src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	vendor/lua/src/liolib.c	/^  char buff[L_MAXLENNUM + 1];  \/* +1 for ending '\\0' *\/$/;"	m	struct:__anon47	file:
buff	vendor/lua/src/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState
buffer	memcached.h	/^        char *buffer;$/;"	m	struct:conn::__anon111
buffer	vendor/lua/src/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer
buffer_head	vendor/mcmc/mcmc.c	/^    char *buffer_head; \/\/ buffer pointer currently in use.$/;"	m	struct:mcmc_ctx	file:
buffer_mode	vendor/mcmc/example.c	/^void buffer_mode(void) {$/;"	f
buffer_request_len	vendor/mcmc/mcmc.c	/^    size_t buffer_request_len; \/\/ cached endpoint for current request$/;"	m	struct:mcmc_ctx	file:
buffer_used	vendor/mcmc/mcmc.c	/^    size_t buffer_used; \/\/ amount of bytes read into the buffer so far.$/;"	m	struct:mcmc_ctx	file:
bufferedSize	xxhash.h	/^   XXH32_hash_t bufferedSize;$/;"	m	struct:XXH3_state_s
buffonstack	vendor/lua/src/lauxlib.c	515;"	d	file:
buffsize	vendor/lua/src/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer
bufsize	cache.h	/^    size_t bufsize;$/;"	m	struct:__anon20
build	Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	doc/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	doc/Makefile	/^build_alias = $/;"	m
build_command	t/binary-extstore.t	/^sub build_command {$/;"	s
build_command	t/binary-sasl.t	/^sub build_command {$/;"	s
build_command	t/binary.t	/^sub build_command {$/;"	s
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	doc/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	doc/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	doc/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_udp_header	memcached.c	/^static void build_udp_header(unsigned char *hdr, mc_resp *resp) {$/;"	f	file:
build_vendor	Makefile	/^build_vendor = pc$/;"	m
build_vendor	doc/Makefile	/^build_vendor = pc$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	doc/Makefile	/^builddir = .$/;"	m
bump_buf_head	items.c	/^static lru_bump_buf *bump_buf_head = NULL;$/;"	v	file:
bump_buf_lock	items.c	/^static pthread_mutex_t bump_buf_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
bump_buf_tail	items.c	/^static lru_bump_buf *bump_buf_tail = NULL;$/;"	v	file:
bundle	memcached.h	/^    mc_resp_bundle *bundle; \/\/ ptr back to bundle$/;"	m	struct:_mc_resp
busy_deletes	memcached.h	/^    uint32_t busy_deletes;$/;"	m	struct:slab_rebalance
busy_items	memcached.h	/^    uint32_t busy_items;$/;"	m	struct:slab_rebalance
busy_loops	memcached.h	/^    uint32_t busy_loops;$/;"	m	struct:slab_rebalance
byteoffset	vendor/lua/src/lutf8lib.c	/^static int byteoffset (lua_State *L) {$/;"	f	file:
bytes	protocol_binary.h	/^        uint8_t bytes[24];$/;"	m	union:__anon65
bytes	protocol_binary.h	/^        uint8_t bytes[24];$/;"	m	union:__anon67
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_request_header) + 20];$/;"	m	union:__anon82
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_request_header) + 4];$/;"	m	union:__anon76
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_request_header) + 4];$/;"	m	union:__anon88
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_request_header) + 4];$/;"	m	union:__anon91
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_request_header) + 4];$/;"	m	union:__anon94
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_request_header) + 8];$/;"	m	union:__anon79
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_request_header)];$/;"	m	union:__anon69
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_response_header) + 4];$/;"	m	union:__anon73
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_response_header) + 8];$/;"	m	union:__anon85
bytes	protocol_binary.h	/^        uint8_t bytes[sizeof(protocol_binary_response_header)];$/;"	m	union:__anon71
bytes_evicted	extstore.h	/^    uint64_t bytes_evicted;$/;"	m	struct:extstore_stats
bytes_fragmented	extstore.h	/^    uint64_t bytes_fragmented; \/* see above comment *\/$/;"	m	struct:extstore_stats
bytes_read	extstore.h	/^    uint64_t bytes_read; \/* wbuf - read -> bytes read from storage *\/$/;"	m	struct:extstore_stats
bytes_used	extstore.c	/^    uint64_t bytes_used; \/* _delete can decrease post-closing *\/$/;"	m	struct:_store_page	file:
bytes_used	extstore.h	/^    uint64_t bytes_used; \/* total number of bytes stored *\/$/;"	m	struct:extstore_stats
bytes_used	extstore.h	/^    uint64_t bytes_used;$/;"	m	struct:extstore_page_data
bytes_written	extstore.h	/^    uint64_t bytes_written;$/;"	m	struct:extstore_stats
c	crawler.c	/^    crawler_client_t c;$/;"	m	struct:_crawler_module_t	file:
c	crawler.c	/^    void *c; \/* original connection structure. still with source thread attached. *\/$/;"	m	struct:__anon55	file:
c	logger.h	/^    void *c; \/* original connection structure. still with source thread attached *\/$/;"	m	struct:__anon60
c	memcached.h	/^    conn *c;$/;"	m	struct:_io_pending_t
c	proxy.h	/^    conn *c;$/;"	m	struct:_io_pending_proxy_t
c	storage.c	/^    conn *c;$/;"	m	struct:_io_pending_storage_t	file:
c	thread.c	/^    conn *c;$/;"	m	struct:conn_queue_item	file:
c	vendor/lua/src/liolib.c	/^  int c;  \/* current character (look ahead) *\/$/;"	m	struct:__anon47	file:
c	vendor/lua/src/lobject.h	/^  CClosure c;$/;"	m	union:Closure
c	vendor/lua/src/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon29	typeref:struct:CallInfo::__anon29::__anon31
c	vendor/lua/src/lstrlib.c	/^  char c;$/;"	m	struct:cD	file:
cD	vendor/lua/src/lstrlib.c	/^struct cD {$/;"	s	file:
c_next	cache.h	/^    STAILQ_ENTRY(cache_free_s) c_next;$/;"	m	struct:cache_free_s
cache	thread.c	/^    cache_t *cache; \/* freelisted objects *\/$/;"	m	struct:conn_queue	file:
cache_alloc	cache.c	/^void* cache_alloc(cache_t *cache) {$/;"	f
cache_bulkalloc	testapp.c	/^static enum test_return cache_bulkalloc(size_t datasize)$/;"	f	file:
cache_create	cache.c	/^cache_t* cache_create(const char *name, size_t bufsize, size_t align) {$/;"	f
cache_create_test	testapp.c	/^static enum test_return cache_create_test(void)$/;"	f	file:
cache_destroy	cache.c	/^void cache_destroy(cache_t *cache) {$/;"	f
cache_error	cache.c	/^int cache_error = 0;$/;"	v
cache_free	cache.c	/^void cache_free(cache_t *cache, void *ptr) {$/;"	f
cache_free_s	cache.h	/^struct cache_free_s {$/;"	s
cache_limit_revised_downward_test	testapp.c	/^static enum test_return cache_limit_revised_downward_test(void)$/;"	f	file:
cache_redzone_test	testapp.c	/^static enum test_return cache_redzone_test(void)$/;"	f	file:
cache_reuse_test	testapp.c	/^static enum test_return cache_reuse_test(void)$/;"	f	file:
cache_set_limit	cache.c	/^void cache_set_limit(cache_t *cache, int limit) {$/;"	f
cache_t	cache.h	/^} cache_t;$/;"	t	typeref:struct:__anon20
call_stats	scripts/damemtop	/^sub call_stats {$/;"	s
callallpendingfinalizers	vendor/lua/src/lgc.c	/^static void callallpendingfinalizers (lua_State *L) {$/;"	f	file:
callbinTM	vendor/lua/src/ltm.c	/^static int callbinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callclosemethod	vendor/lua/src/lfunc.c	/^static void callclosemethod (lua_State *L, TValue *obj, TValue *err, int yy) {$/;"	f	file:
callstatus	vendor/lua/src/lstate.h	/^  unsigned short callstatus;$/;"	m	struct:CallInfo
can_write	proxy.h	/^    bool can_write; \/\/ recently got a WANT_WRITE or are connecting.$/;"	m	struct:mcp_backend_s
cannot	vendor/lua/src/luac.c	/^static void cannot(const char* what)$/;"	f	file:
capture	vendor/lua/src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon40	file:
capture_to_close	vendor/lua/src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
cas	memcached.h	/^        uint64_t cas;$/;"	m	union:_stritem::__anon107
cas	memcached.h	/^    uint64_t cas; \/* the cas to return *\/$/;"	m	struct:conn
cas	protocol_binary.h	/^            uint64_t cas;$/;"	m	struct:__anon65::__anon66
cas	protocol_binary.h	/^            uint64_t cas;$/;"	m	struct:__anon67::__anon68
cas	vendor/mcmc/mcmc.h	/^            uint64_t cas;$/;"	m	struct:__anon21::__anon22::__anon24
cas_id	items.c	/^static uint64_t cas_id = 0;$/;"	v	file:
cas_id_lock	items.c	/^static pthread_mutex_t cas_id_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
cast	vendor/lua/src/llimits.h	123;"	d
cast_byte	vendor/lua/src/llimits.h	130;"	d
cast_char	vendor/lua/src/llimits.h	132;"	d
cast_charp	vendor/lua/src/llimits.h	133;"	d
cast_func	vendor/lua/src/loadlib.c	122;"	d	file:
cast_func	vendor/lua/src/loadlib.c	124;"	d	file:
cast_int	vendor/lua/src/llimits.h	128;"	d
cast_num	vendor/lua/src/llimits.h	127;"	d
cast_sizet	vendor/lua/src/llimits.h	134;"	d
cast_u	vendor/lua/src/lstate.h	365;"	d
cast_uchar	vendor/lua/src/llimits.h	131;"	d
cast_uint	vendor/lua/src/llimits.h	129;"	d
cast_void	vendor/lua/src/llimits.h	125;"	d
cast_voidp	vendor/lua/src/llimits.h	126;"	d
caught_sig	timedrun.c	/^volatile sig_atomic_t caught_sig = 0;$/;"	v
cb	extstore.h	/^    obj_io_cb cb;$/;"	m	struct:_obj_io
cb	proxy.h	/^    proxy_event_cb cb;$/;"	m	struct:__anon101
cb	restart.c	/^    restart_data_cb *cb;$/;"	m	struct:__anon17	file:
cb_stack	restart.c	/^static restart_data_cb *cb_stack = NULL;$/;"	v	file:
cbuf	crawler.c	/^    char *cbuf; \/* current buffer *\/$/;"	m	struct:__anon55	file:
ccall	vendor/lua/src/ldo.c	/^static void ccall (lua_State *L, StkId func, int nResults, int inc) {$/;"	f	file:
ccb	restart.c	/^    restart_check_cb ccb;$/;"	m	struct:_restart_data_cb	file:
changeage	vendor/lua/src/lgc.h	120;"	d
changedline	vendor/lua/src/ldebug.c	/^static int changedline (const Proto *p, int oldpc, int newpc) {$/;"	f	file:
changes	vendor/lua/doc/readme.html	/^<H2><A NAME="changes">Changes since Lua 5.3<\/A><\/H2>$/;"	a
changewhite	vendor/lua/src/lgc.h	98;"	d
check	vendor/lua/src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkGC	vendor/lua/src/lvm.c	1108;"	d	file:
checkHeader	vendor/lua/src/lundump.c	/^static void checkHeader (LoadState *S) {$/;"	f	file:
checkSizes	vendor/lua/src/lgc.c	/^static void checkSizes (lua_State *L, global_State *g) {$/;"	f	file:
check_capture	vendor/lua/src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_cas_stats	t/stats.t	/^sub check_cas_stats {$/;"	s
check_condition	vendor/lua/src/lparser.c	122;"	d	file:
check_conflict	vendor/lua/src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_exp	vendor/lua/src/llimits.h	102;"	d
check_exp	vendor/lua/src/llimits.h	97;"	d
check_incr_stats	t/stats.t	/^sub check_incr_stats {$/;"	s
check_match	vendor/lua/src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next1	vendor/lua/src/llex.c	/^static int check_next1 (LexState *ls, int c) {$/;"	f	file:
check_next2	vendor/lua/src/llex.c	/^static int check_next2 (LexState *ls, const char *set) {$/;"	f	file:
check_readonly	vendor/lua/src/lparser.c	/^static void check_readonly (LexState *ls, expdesc *e) {$/;"	f	file:
checkbufferlevel	vendor/lua/src/lauxlib.c	522;"	d	file:
checkclib	vendor/lua/src/loadlib.c	/^static void *checkclib (lua_State *L, const char *path) {$/;"	f	file:
checkclosemth	vendor/lua/src/lfunc.c	/^static void checkclosemth (lua_State *L, StkId level) {$/;"	f	file:
checkcontrol	vendor/lua/src/lauxlib.c	/^static int checkcontrol (lua_State *L, const char *message, int tocont) {$/;"	f	file:
checked	memcached.h	/^    uint64_t        checked;    \/* items examined during this crawl. *\/$/;"	m	struct:__anon108
checkfield	vendor/lua/src/ltablib.c	/^static int checkfield (lua_State *L, const char *key, int n) {$/;"	f	file:
checklimit	vendor/lua/src/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checkliteral	vendor/lua/src/lundump.c	/^static void checkliteral (LoadState *S, const char *s, const char *msg) {$/;"	f	file:
checkliveness	vendor/lua/src/lobject.h	104;"	d
checkload	vendor/lua/src/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkmode	vendor/lua/src/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checknext	vendor/lua/src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkopm	vendor/lua/src/lopcodes.h	118;"	d
checkoption	vendor/lua/src/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv,$/;"	f	file:
checkpointer	vendor/lua/src/lgc.c	/^static void checkpointer (GCObject **p, GCObject *o) {$/;"	f	file:
checkrepeated	vendor/lua/src/lparser.c	/^static void checkrepeated (LexState *ls, TString *name) {$/;"	f	file:
checkresults	vendor/lua/src/lapi.c	992;"	d	file:
checksize	vendor/lua/src/lundump.c	288;"	d	file:
checkstack	vendor/lua/src/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:
checkstackGC	vendor/lua/src/ldo.h	48;"	d
checkstackGCp	vendor/lua/src/ldo.h	40;"	d
checktab	vendor/lua/src/ltablib.c	/^static void checktab (lua_State *L, int arg, int what) {$/;"	f	file:
checktag	vendor/lua/src/lobject.h	89;"	d
checktoclose	vendor/lua/src/lparser.c	/^static void checktoclose (LexState *ls, int level) {$/;"	f	file:
checktype	vendor/lua/src/lobject.h	90;"	d
checkupval	vendor/lua/src/ldblib.c	/^static void *checkupval (lua_State *L, int argf, int argnup, int *pnup) {$/;"	f	file:
chgfltvalue	vendor/lua/src/lobject.h	328;"	d
chgivalue	vendor/lua/src/lobject.h	334;"	d
choosePivot	vendor/lua/src/ltablib.c	/^static IdxT choosePivot (IdxT lo, IdxT up, unsigned int rnd) {$/;"	f	file:
chunk_rescues	memcached.h	/^    uint32_t chunk_rescues;$/;"	m	struct:slab_rebalance
chunk_size	memcached.h	/^    int chunk_size;$/;"	m	struct:settings
chunk_size	slabs.h	/^    unsigned int chunk_size;$/;"	m	struct:__anon18
chunked_data_iov	memcached.h	/^    uint8_t chunked_data_iov; \/* this iov is a pointer to chunked data header *\/$/;"	m	struct:_mc_resp
chunked_total	memcached.h	/^    int chunked_total; \/* total amount of chunked item data to send. *\/$/;"	m	struct:_mc_resp
chunks_per_page	slabs.h	/^    unsigned int chunks_per_page;$/;"	m	struct:__anon18
ci	vendor/lua/src/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State
ci_func	vendor/lua/src/ldebug.h	18;"	d
cl	vendor/lua/src/lstate.h	/^  union Closure cl;$/;"	m	union:GCUnion	typeref:union:GCUnion::Closure
clCvalue	vendor/lua/src/lobject.h	593;"	d
clLvalue	vendor/lua/src/lobject.h	591;"	d
classend	vendor/lua/src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clear_screen	scripts/damemtop	/^sub clear_screen {$/;"	s
clearbuff	vendor/lua/src/lobject.c	/^static void clearbuff (BuffFS *buff) {$/;"	f	file:
clearbykeys	vendor/lua/src/lgc.c	/^static void clearbykeys (global_State *g, GCObject *l) {$/;"	f	file:
clearbyvalues	vendor/lua/src/lgc.c	/^static void clearbyvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
cleargraylists	vendor/lua/src/lgc.c	/^static void cleargraylists (global_State *g) {$/;"	f	file:
clearkey	vendor/lua/src/lgc.c	/^static void clearkey (Node *n) {$/;"	f	file:
client	proxy.h	/^    void *client; \/\/ mcmc client$/;"	m	struct:mcp_backend_s
client_flags	proto_text.c	/^    uint32_t client_flags;$/;"	m	struct:_meta_flags	file:
client_resp	proxy.h	/^    mcp_resp_t *client_resp; \/\/ reference (currently pointing to a lua object)$/;"	m	struct:_io_pending_proxy_t
clock_event	proxy.h	/^    struct event clock_event; \/\/ timer for updating event thread data.$/;"	m	struct:proxy_event_thread_s	typeref:struct:proxy_event_thread_s::event
clock_handler	memcached.c	/^static void clock_handler(const evutil_socket_t fd, const short which, void *arg) {$/;"	f	file:
clockevent	memcached.c	/^static struct event clockevent;$/;"	v	typeref:struct:event	file:
close	vendor/lua/src/lparser.h	/^  lu_byte close;  \/* goto that escapes upvalues *\/$/;"	m	struct:Labeldesc
close_after_write	memcached.h	/^    bool close_after_write; \/** flush write then move to close connection *\/$/;"	m	struct:conn
close_conn	testapp.c	/^static void close_conn() {$/;"	f	file:
close_func	vendor/lua/src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_reason	memcached.h	/^    enum close_reasons close_reason; \/* reason for transition into conn_closing *\/$/;"	m	struct:conn	typeref:enum:conn::close_reasons
close_reasons	memcached.h	/^enum close_reasons {$/;"	g
close_state	vendor/lua/src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closed	extstore.c	/^    bool closed; \/* closed and draining before free *\/$/;"	m	struct:_store_page	file:
closef	vendor/lua/src/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream
closelistfield	vendor/lua/src/lparser.c	/^static void closelistfield (FuncState *fs, ConsControl *cc) {$/;"	f	file:
closepaux	vendor/lua/src/ldo.c	/^static void closepaux (lua_State *L, void *ud) {$/;"	f	file:
clsid	logger.h	/^    uint8_t clsid;$/;"	m	struct:logentry_eviction
clsid	logger.h	/^    uint8_t clsid;$/;"	m	struct:logentry_ext_write
clsid	logger.h	/^    uint8_t clsid;$/;"	m	struct:logentry_item_get
clsid	logger.h	/^    uint8_t clsid;$/;"	m	struct:logentry_item_store
clvalue	vendor/lua/src/lobject.h	590;"	d
cmd	logger.h	/^    int cmd;$/;"	m	struct:logentry_item_store
cmd	memcached.h	/^    short cmd; \/* current command being processed *\/$/;"	m	struct:conn
cmd	proxy.h	/^    uint8_t cmd; \/\/ from parser (pr.command)$/;"	m	struct:__anon104
cmd_type	proxy.h	/^    uint8_t cmd_type; \/\/ command class.$/;"	m	struct:mcp_parser_s
co_funcs	vendor/lua/src/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	logger.h	/^    unsigned short code;$/;"	m	struct:logentry_proxy_req
code	vendor/lua/src/lobject.h	/^  Instruction *code;  \/* opcodes *\/$/;"	m	struct:Proto
code	vendor/mcmc/mcmc.h	/^    unsigned short code;$/;"	m	struct:__anon21
codeABRK	vendor/lua/src/lcode.c	/^static void codeABRK (FuncState *fs, OpCode o, int a, int b,$/;"	f	file:
codeNresults	vendor/lua/src/lapi.h	46;"	d
code_loadbool	vendor/lua/src/lcode.c	/^static int code_loadbool (FuncState *fs, int A, OpCode op) {$/;"	f	file:
codearith	vendor/lua/src/lcode.c	/^static void codearith (FuncState *fs, BinOpr opr,$/;"	f	file:
codebinexpval	vendor/lua/src/lcode.c	/^static void codebinexpval (FuncState *fs, OpCode op,$/;"	f	file:
codebini	vendor/lua/src/lcode.c	/^static void codebini (FuncState *fs, OpCode op,$/;"	f	file:
codebitwise	vendor/lua/src/lcode.c	/^static void codebitwise (FuncState *fs, BinOpr opr,$/;"	f	file:
codeclosure	vendor/lua/src/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecommutative	vendor/lua/src/lcode.c	/^static void codecommutative (FuncState *fs, BinOpr op,$/;"	f	file:
codeconcat	vendor/lua/src/lcode.c	/^static void codeconcat (FuncState *fs, expdesc *e1, expdesc *e2, int line) {$/;"	f	file:
codeeq	vendor/lua/src/lcode.c	/^static void codeeq (FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2) {$/;"	f	file:
codeextraarg	vendor/lua/src/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codename	vendor/lua/src/lparser.c	/^static void codename (LexState *ls, expdesc *e) {$/;"	f	file:
codenot	vendor/lua/src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codeorder	vendor/lua/src/lcode.c	/^static void codeorder (FuncState *fs, OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
codepoint	vendor/lua/src/lutf8lib.c	/^static int codepoint (lua_State *L) {$/;"	f	file:
codesJ	vendor/lua/src/lcode.c	/^static int codesJ (FuncState *fs, OpCode o, int sj, int k) {$/;"	f	file:
codestring	vendor/lua/src/lparser.c	/^static void codestring (expdesc *e, TString *s) {$/;"	f	file:
codeunexpval	vendor/lua/src/lcode.c	/^static void codeunexpval (FuncState *fs, OpCode op, expdesc *e, int line) {$/;"	f	file:
collectargs	vendor/lua/src/lua.c	/^static int collectargs (char **argv, int *first) {$/;"	f	file:
collectvalidlines	vendor/lua/src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
column_can_total	scripts/damemtop	/^sub column_can_total {$/;"	s
combine	vendor/lua/src/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:
command	proxy.h	/^    uint8_t command;$/;"	m	struct:mcp_parser_s
command_factory	t/startfile.lua	/^function command_factory(map, default)$/;"	f
complete_cb	memcached.h	/^    io_queue_stack_cb complete_cb;$/;"	m	struct:io_queue_cb_s
complete_incr_bin	proto_bin.c	/^static void complete_incr_bin(conn *c, char *extbuf) {$/;"	f	file:
complete_nread	memcached.c	/^static void complete_nread(conn *c) {$/;"	f	file:
complete_nread_ascii	proto_text.c	/^void complete_nread_ascii(conn *c) {$/;"	f
complete_nread_binary	proto_bin.c	/^void complete_nread_binary(conn *c) {$/;"	f
complete_nread_proxy	proto_proxy.c	/^void complete_nread_proxy(conn *c) {$/;"	f
complete_update_bin	proto_bin.c	/^static void complete_update_bin(conn *c) {$/;"	f	file:
completed	memcached.h	/^    uint8_t *completed;$/;"	m	struct:slab_rebalance
completed	proxy_await.c	/^    bool completed; \/\/ have we completed the parent coroutine or not$/;"	m	struct:mcp_await_s	file:
completestate	vendor/lua/src/lstate.h	336;"	d
compute_column	scripts/damemtop	/^sub compute_column {$/;"	s
compute_fill_rate	scripts/damemtop	/^sub compute_fill_rate {$/;"	s
compute_hit_rate	scripts/damemtop	/^sub compute_hit_rate {$/;"	s
compute_hostname	scripts/damemtop	/^sub compute_hostname {$/;"	s
computesizes	vendor/lua/src/ltable.c	/^static unsigned int computesizes (unsigned int nums[], unsigned int *pna) {$/;"	f	file:
con	testapp.c	/^static struct conn *con = NULL;$/;"	v	typeref:struct:conn	file:
cond	extstore.c	/^    pthread_cond_t cond;$/;"	m	struct:__anon13	file:
cond	extstore.c	/^    pthread_cond_t cond;$/;"	m	struct:__anon14	file:
cond	proxy.h	/^    pthread_cond_t cond; \/\/ condition to wait on while stack drains.$/;"	m	struct:proxy_event_thread_s
cond	vendor/lua/src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
condchangemem	vendor/lua/src/llimits.h	347;"	d
condchangemem	vendor/lua/src/llimits.h	349;"	d
condjump	vendor/lua/src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C, int k) {$/;"	f	file:
condmovestack	vendor/lua/src/llimits.h	339;"	d
condmovestack	vendor/lua/src/llimits.h	342;"	d
config_cond	proxy.h	/^    pthread_cond_t config_cond;$/;"	m	struct:__anon102
config_lock	proxy.h	/^    pthread_mutex_t config_lock;$/;"	m	struct:__anon102
config_reload_fails	proxy.h	/^    uint64_t config_reload_fails;$/;"	m	struct:proxy_global_stats
config_reloads	proxy.h	/^    uint64_t config_reloads;$/;"	m	struct:proxy_global_stats
config_tid	proxy.h	/^    pthread_t config_tid;$/;"	m	struct:__anon102
conn	memcached.h	/^struct conn {$/;"	s
conn	memcached.h	/^typedef struct conn conn;$/;"	t	typeref:struct:conn
conn	testapp.c	/^struct conn {$/;"	s	file:
conn_cleanup	memcached.c	/^static void conn_cleanup(conn *c) {$/;"	f	file:
conn_close	memcached.c	/^static void conn_close(conn *c) {$/;"	f	file:
conn_close_all	memcached.c	/^void conn_close_all(void) {$/;"	f
conn_close_idle	memcached.c	/^void conn_close_idle(conn *c) {$/;"	f
conn_closed	memcached.h	/^    conn_closed,     \/**< connection is closed *\/$/;"	e	enum:conn_states
conn_closing	memcached.h	/^    conn_closing,    \/**< closing this connection *\/$/;"	e	enum:conn_states
conn_free	memcached.c	/^void conn_free(conn *c) {$/;"	f
conn_init	memcached.c	/^static void conn_init(void) {$/;"	f	file:
conn_io_queue	memcached.h	/^    conn_io_queue,   \/**< wait on async. process to get response object *\/$/;"	e	enum:conn_states
conn_io_queue_complete	memcached.c	/^static void conn_io_queue_complete(conn *c) {$/;"	f	file:
conn_io_queue_get	memcached.c	/^io_queue_t *conn_io_queue_get(conn *c, int type) {$/;"	f
conn_io_queue_reset	memcached.c	/^static void conn_io_queue_reset(conn *c) {$/;"	f	file:
conn_io_queue_return	memcached.c	/^void conn_io_queue_return(io_pending_t *io) {$/;"	f
conn_io_queue_setup	memcached.c	/^void conn_io_queue_setup(conn *c) {$/;"	f
conn_listening	memcached.h	/^    conn_listening,  \/**< the socket which listens for connections *\/$/;"	e	enum:conn_states
conn_lock	thread.c	/^pthread_mutex_t conn_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
conn_max_state	memcached.h	/^    conn_max_state   \/**< Max state value (used for assertion) *\/$/;"	e	enum:conn_states
conn_mwrite	memcached.h	/^    conn_mwrite,     \/**< writing out many items sequentially *\/$/;"	e	enum:conn_states
conn_new	memcached.c	/^conn *conn_new(const int sfd, enum conn_states init_state,$/;"	f
conn_new_cmd	memcached.h	/^    conn_new_cmd,    \/**< Prepare connection for next command *\/$/;"	e	enum:conn_states
conn_nread	memcached.h	/^    conn_nread,      \/**< reading in a fixed number of bytes *\/$/;"	e	enum:conn_states
conn_parse_cmd	memcached.h	/^    conn_parse_cmd,  \/**< try to parse a command from the input buffer *\/$/;"	e	enum:conn_states
conn_queue	thread.c	/^struct conn_queue {$/;"	s	file:
conn_queue_item	thread.c	/^struct conn_queue_item {$/;"	s	file:
conn_queue_item_modes	thread.c	/^enum conn_queue_item_modes {$/;"	g	file:
conn_read	memcached.h	/^    conn_read,       \/**< reading in a command line *\/$/;"	e	enum:conn_states
conn_release_items	memcached.c	/^void conn_release_items(conn *c) {$/;"	f
conn_set_state	memcached.c	/^void conn_set_state(conn *c, enum conn_states state) {$/;"	f
conn_states	memcached.h	/^enum conn_states {$/;"	g
conn_structs	memcached.h	/^    unsigned int  conn_structs;$/;"	m	struct:stats_state
conn_swallow	memcached.h	/^    conn_swallow,    \/**< swallowing unnecessary bytes w\/o storing *\/$/;"	e	enum:conn_states
conn_timeout_cond	memcached.c	/^static pthread_cond_t conn_timeout_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
conn_timeout_lock	memcached.c	/^static pthread_mutex_t conn_timeout_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
conn_timeout_thread	memcached.c	/^static void *conn_timeout_thread(void *arg) {$/;"	f	file:
conn_timeout_tid	memcached.c	/^static pthread_t conn_timeout_tid;$/;"	v	file:
conn_to_str	memcached.c	/^static void conn_to_str(const conn *c, char *addr, char *svr_addr) {$/;"	f	file:
conn_waiting	memcached.h	/^    conn_waiting,    \/**< waiting for a readable socket *\/$/;"	e	enum:conn_states
conn_watch	memcached.h	/^    conn_watch,      \/**< held by the logger thread as a watcher *\/$/;"	e	enum:conn_states
conn_worker_readd	memcached.c	/^void conn_worker_readd(conn *c) {$/;"	f
conn_write	memcached.h	/^    conn_write,      \/**< writing out a simple response *\/$/;"	e	enum:conn_states
connect	proxy.h	/^    struct timeval connect;$/;"	m	struct:proxy_tunables	typeref:struct:proxy_tunables::timeval
connect_flags	proxy.h	/^    int connect_flags; \/\/ flags to pass to mcmc_connect$/;"	m	struct:mcp_backend_s
connect_memcached	scripts/damemtop	/^sub connect_memcached {$/;"	s
connect_server	testapp.c	/^static struct conn *connect_server(const char *hostname, in_port_t port,$/;"	f	file:
connect_ur	proxy.h	/^    struct __kernel_timespec connect_ur;$/;"	m	struct:proxy_tunables	typeref:struct:proxy_tunables::__kernel_timespec
connecting	proxy.h	/^    bool connecting; \/\/ in the process of an asynch connection.$/;"	m	struct:mcp_backend_s
conns	memcached.c	/^conn **conns;$/;"	v
conntag	thread.c	/^    uint64_t conntag;$/;"	m	struct:conn_queue_item	file:
const2exp	vendor/lua/src/lcode.c	/^static void const2exp (TValue *v, expdesc *e) {$/;"	f	file:
const2val	vendor/lua/src/lcode.c	/^static TValue *const2val (FuncState *fs, const expdesc *e) {$/;"	f	file:
constants	vendor/lua/doc/contents.html	/^<H3><A NAME="constants">constants<\/A><\/H3>$/;"	a
constfolding	vendor/lua/src/lcode.c	/^static int constfolding (FuncState *fs, int op, expdesc *e1,$/;"	f	file:
construct_udp_message	t/udp.t	/^sub construct_udp_message {$/;"	s
constructor	vendor/lua/src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
contact	scripts/damemtop	/^contact: dormando\\@rydia.net or memcached\\@googlegroups.com.$/;"	l
contents	vendor/lua/doc/contents.html	/^<H2><A NAME="contents">Contents<\/A><\/H2>$/;"	a
contents	vendor/lua/src/lobject.h	/^  char contents[1];$/;"	m	struct:TString
continuum	proxy_ring_hash.c	/^    cpoint continuum[]; \/\/ points to server ids.$/;"	m	struct:__anon98	file:
convergeephemerons	vendor/lua/src/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
copy2buff	vendor/lua/src/lvm.c	/^static void copy2buff (StkId top, int n, char *buff) {$/;"	f	file:
copywithendian	vendor/lua/src/lstrlib.c	/^static void copywithendian (char *dest, const char *src,$/;"	f	file:
coro	proxy.h	/^    lua_State *coro; \/\/ pointer directly to the coroutine$/;"	m	struct:_io_pending_proxy_t
coro_ref	proxy.h	/^    int coro_ref; \/\/ lua registry reference to the coroutine$/;"	m	struct:_io_pending_proxy_t
coro_ref	proxy_await.c	/^    int coro_ref; \/\/ reference to parent coroutine$/;"	m	struct:mcp_await_s	file:
correctgraylist	vendor/lua/src/lgc.c	/^static GCObject **correctgraylist (GCObject **p) {$/;"	f	file:
correctgraylists	vendor/lua/src/lgc.c	/^static void correctgraylists (global_State *g) {$/;"	f	file:
correctpointers	vendor/lua/src/lgc.c	/^static void correctpointers (global_State *g, GCObject *o) {$/;"	f	file:
correctstack	vendor/lua/src/ldo.c	/^static void correctstack (lua_State *L, StkId oldstack, StkId newstack) {$/;"	f	file:
count	md5.h	/^    md5_word_t count[2];	\/* message length in bits, lsw first *\/$/;"	m	struct:md5_state_s
count	memcached.h	/^    int count; \/\/ ios to process before returning. only accessed by queue processor once submitted$/;"	m	struct:io_queue_s
counters	proxy.h	/^    uint64_t *counters; \/\/ array of counters.$/;"	m	struct:proxy_user_stats
counters	proxy.h	/^    uint64_t counters[CMD_FINAL];$/;"	m	struct:proxy_int_stats
countint	vendor/lua/src/ltable.c	/^static int countint (lua_Integer key, unsigned int *nums) {$/;"	f	file:
cpoint	proxy_ring_hash.c	/^} cpoint;$/;"	t	typeref:struct:__anon97	file:
cq_init	thread.c	/^static void cq_init(CQ *cq) {$/;"	f	file:
cq_pop	thread.c	/^static CQ_ITEM *cq_pop(CQ *cq) {$/;"	f	file:
cq_push	thread.c	/^static void cq_push(CQ *cq, CQ_ITEM *item) {$/;"	f	file:
cqi_free	thread.c	/^static void cqi_free(CQ *cq, CQ_ITEM *item) {$/;"	f	file:
cqi_new	thread.c	/^static CQ_ITEM *cqi_new(CQ *cq) {$/;"	f	file:
crawl_complete	crawler.h	/^    bool crawl_complete;$/;"	m	struct:crawler_expired_data
crawler	memcached.h	/^} crawler;$/;"	t	typeref:struct:__anon108
crawler_client_t	crawler.c	/^} crawler_client_t;$/;"	t	typeref:struct:__anon55	file:
crawler_count	crawler.c	/^static int crawler_count = 0;$/;"	v	file:
crawler_deinit_func	crawler.c	/^typedef void (*crawler_deinit_func)(crawler_module_t *cm); \/\/ TODO: extra args?$/;"	t	file:
crawler_doneclass_func	crawler.c	/^typedef void (*crawler_doneclass_func)(crawler_module_t *cm, int slab_cls);$/;"	t	file:
crawler_eval_func	crawler.c	/^typedef void (*crawler_eval_func)(crawler_module_t *cm, item *it, uint32_t hv, int slab_cls);$/;"	t	file:
crawler_expired_data	crawler.h	/^struct crawler_expired_data {$/;"	s
crawler_expired_doneclass	crawler.c	/^static void crawler_expired_doneclass(crawler_module_t *cm, int slab_cls) {$/;"	f	file:
crawler_expired_eval	crawler.c	/^static void crawler_expired_eval(crawler_module_t *cm, item *search, uint32_t hv, int i) {$/;"	f	file:
crawler_expired_finalize	crawler.c	/^static void crawler_expired_finalize(crawler_module_t *cm) {$/;"	f	file:
crawler_expired_init	crawler.c	/^static int crawler_expired_init(crawler_module_t *cm, void *data) {$/;"	f	file:
crawler_expired_mod	crawler.c	/^crawler_module_reg_t crawler_expired_mod = {$/;"	v
crawler_finalize_func	crawler.c	/^typedef void (*crawler_finalize_func)(crawler_module_t *cm);$/;"	t	file:
crawler_init_func	crawler.c	/^typedef int (*crawler_init_func)(crawler_module_t *cm, void *data); \/\/ TODO: init args?$/;"	t	file:
crawler_items_checked	items.c	/^    uint64_t crawler_items_checked;$/;"	m	struct:__anon10	file:
crawler_metadump_eval	crawler.c	/^static void crawler_metadump_eval(crawler_module_t *cm, item *it, uint32_t hv, int i) {$/;"	f	file:
crawler_metadump_finalize	crawler.c	/^static void crawler_metadump_finalize(crawler_module_t *cm) {$/;"	f	file:
crawler_metadump_mod	crawler.c	/^crawler_module_reg_t crawler_metadump_mod = {$/;"	v
crawler_mod_regs	crawler.c	/^crawler_module_reg_t *crawler_mod_regs[3] = {$/;"	v
crawler_module_reg_t	crawler.c	/^} crawler_module_reg_t;$/;"	t	typeref:struct:__anon56	file:
crawler_module_t	crawler.c	/^typedef struct _crawler_module_t crawler_module_t;$/;"	t	typeref:struct:_crawler_module_t	file:
crawler_reclaimed	items.c	/^    uint64_t crawler_reclaimed;$/;"	m	struct:__anon10	file:
crawler_result_type	crawler.h	/^enum crawler_result_type {$/;"	g
crawler_run_type	memcached.h	/^enum crawler_run_type {$/;"	g
crawlers	crawler.c	/^static crawler crawlers[LARGEST_ID];$/;"	v	file:
crawlerstats	crawler.h	/^    crawlerstats_t crawlerstats[POWER_LARGEST];$/;"	m	struct:crawler_expired_data
crawlerstats_t	crawler.h	/^} crawlerstats_t;$/;"	t	typeref:struct:__anon99
crawls_persleep	memcached.h	/^    int crawls_persleep; \/* Number of LRU crawls to run before sleeping *\/$/;"	m	struct:settings
crc32c	crc32c.c	/^crc_func crc32c;$/;"	v
crc32c_hw	crc32c.c	/^static uint32_t crc32c_hw(uint32_t crc, void const *buf, size_t len) {$/;"	f	file:
crc32c_init	crc32c.c	/^void crc32c_init(void) {$/;"	f
crc32c_init_hw	crc32c.c	/^static void crc32c_init_hw(void) {$/;"	f	file:
crc32c_init_sw_big	crc32c.c	/^static void crc32c_init_sw_big(void) {$/;"	f	file:
crc32c_init_sw_little	crc32c.c	/^static void crc32c_init_sw_little(void) {$/;"	f	file:
crc32c_long	crc32c.c	/^static uint32_t crc32c_long[4][256];$/;"	v	file:
crc32c_once_big	crc32c.c	/^static pthread_once_t crc32c_once_big = PTHREAD_ONCE_INIT;$/;"	v	file:
crc32c_once_hw	crc32c.c	/^static pthread_once_t crc32c_once_hw = PTHREAD_ONCE_INIT;$/;"	v	file:
crc32c_once_little	crc32c.c	/^static pthread_once_t crc32c_once_little = PTHREAD_ONCE_INIT;$/;"	v	file:
crc32c_shift	crc32c.c	/^static inline uint32_t crc32c_shift(uint32_t zeros[][256], uint32_t crc) {$/;"	f	file:
crc32c_short	crc32c.c	/^static uint32_t crc32c_short[4][256];$/;"	v	file:
crc32c_sw	crc32c.c	/^uint32_t crc32c_sw(uint32_t crc, void const *buf, size_t len) {$/;"	f
crc32c_sw_big	crc32c.c	/^uint32_t crc32c_sw_big(uint32_t crc, void const *buf, size_t len) {$/;"	f
crc32c_sw_little	crc32c.c	/^uint32_t crc32c_sw_little(uint32_t crc, void const *buf, size_t len) {$/;"	f
crc32c_table_big	crc32c.c	/^static uint64_t crc32c_table_big[8][256];$/;"	v	file:
crc32c_table_big_byte	crc32c.c	/^static uint32_t crc32c_table_big_byte[256];$/;"	v	file:
crc32c_table_little	crc32c.c	/^static uint32_t crc32c_table_little[8][256];$/;"	v	file:
crc32c_zeros	crc32c.c	/^static void crc32c_zeros(uint32_t zeros[][256], size_t len) {$/;"	f	file:
crc32c_zeros_op	crc32c.c	/^static void crc32c_zeros_op(uint32_t *even, size_t len) {$/;"	f	file:
crc32cb	crc32c.c	/^static inline uint32_t crc32cb(uint32_t crc, const uint8_t data)$/;"	f	file:
crc32cx	crc32c.c	/^static inline uint32_t crc32cx(uint32_t crc, const uint64_t data)$/;"	f	file:
crc_func	crc32c.h	/^typedef uint32_t (*crc_func)(uint32_t crc, const void *buf, size_t len);$/;"	t
create_worker	thread.c	/^static void create_worker(void *(*func)(void *), void *arg) {$/;"	f	file:
createargtable	vendor/lua/src/lua.c	/^static void createargtable (lua_State *L, char **argv, int argc, int script) {$/;"	f	file:
createclibstable	vendor/lua/src/loadlib.c	/^static void createclibstable (lua_State *L) {$/;"	f	file:
createlabel	vendor/lua/src/lparser.c	/^static int createlabel (LexState *ls, TString *name, int line,$/;"	f	file:
createmeta	vendor/lua/src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	vendor/lua/src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	vendor/lua/src/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	vendor/lua/src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	vendor/lua/src/lstring.c	/^static TString *createstrobj (lua_State *L, size_t l, int tag, unsigned int h) {$/;"	f	file:
ctb	vendor/lua/src/lobject.h	290;"	d
ctx	memcached.h	/^    void *ctx; \/\/ duplicated from io_queue_cb_t$/;"	m	struct:io_queue_s
ctx	memcached.h	/^    void *ctx; \/\/ untouched ptr for specific context$/;"	m	struct:io_queue_cb_s
ctx	proxy.h	/^    proxy_ctx_t *ctx; \/\/ main context.$/;"	m	struct:mcp_pool_s
ctx	proxy.h	/^    proxy_ctx_t *ctx; \/\/ main context.$/;"	m	struct:proxy_event_thread_s
ctx	proxy.h	/^    void *ctx;$/;"	m	struct:proxy_hash_caller
ctx	vendor/lua/src/lstate.h	/^      lua_KContext ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon29::__anon31
currIsNewline	vendor/lua/src/llex.c	36;"	d	file:
curr_bytes	memcached.h	/^    uint64_t      curr_bytes;$/;"	m	struct:stats_state
curr_conns	memcached.h	/^    uint64_t      curr_conns;$/;"	m	struct:stats_state
curr_items	memcached.h	/^    uint64_t      curr_items;$/;"	m	struct:stats_state
current	vendor/lua/src/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState
current_time	memcached.c	/^    uint32_t current_time;$/;"	m	struct:_mc_meta_data	file:
current_time	memcached.c	/^volatile rel_time_t current_time;$/;"	v
currentline	vendor/lua/src/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug
currentpc	vendor/lua/src/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
currentwhite	vendor/lua/src/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State
customization	vendor/lua/doc/readme.html	/^<H3><A NAME="customization">Customization<\/A><\/H3>$/;"	a
cvt2num	vendor/lua/src/lvm.h	24;"	d
cvt2num	vendor/lua/src/lvm.h	26;"	d
cvt2str	vendor/lua/src/lvm.h	17;"	d
cvt2str	vendor/lua/src/lvm.h	19;"	d
d	vendor/lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon42	file:
d_clsid	memcached.h	/^    int d_clsid;$/;"	m	struct:slab_rebalance
daemonize	daemon.c	/^int daemonize(int nochdir, int noclose)$/;"	f
data	bipbuffer.h	/^    unsigned char data[];$/;"	m	struct:__anon58
data	crawler.c	/^    void *data; \/* opaque data pointer *\/$/;"	m	struct:_crawler_module_t	file:
data	extstore.h	/^    void *data; \/* user supplied data pointer *\/$/;"	m	struct:_obj_io
data	logger.h	/^    char data[];$/;"	m	struct:logentry_proxy_req
data	logger.h	/^    } data[];$/;"	m	struct:_logentry	typeref:union:_logentry::__anon59
data	memcached.h	/^    char data[120];$/;"	m	struct:_io_pending_t
data	memcached.h	/^    char data[];$/;"	m	struct:_strchunk
data	memcached.h	/^    } data[];$/;"	m	struct:_stritem	typeref:union:_stritem::__anon107
data	restart.c	/^    void *data; \/\/ user supplied opaque data.$/;"	m	struct:_restart_data_cb	file:
data	vendor/lua/src/ldump.c	/^  void *data;$/;"	m	struct:__anon26	file:
data	vendor/lua/src/lzio.h	/^  void *data;			\/* additional data *\/$/;"	m	struct:Zio
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	doc/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	doc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datatype	protocol_binary.h	/^            uint8_t datatype;$/;"	m	struct:__anon65::__anon66
datatype	protocol_binary.h	/^            uint8_t datatype;$/;"	m	struct:__anon67::__anon68
db_debug	vendor/lua/src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	vendor/lua/src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	vendor/lua/src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	vendor/lua/src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	vendor/lua/src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	vendor/lua/src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	vendor/lua/src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	vendor/lua/src/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_setcstacklimit	vendor/lua/src/ldblib.c	/^static int db_setcstacklimit (lua_State *L) {$/;"	f	file:
db_sethook	vendor/lua/src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	vendor/lua/src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	vendor/lua/src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	vendor/lua/src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	vendor/lua/src/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	vendor/lua/src/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	vendor/lua/src/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	vendor/lua/src/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dblib	vendor/lua/src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
dd	itoa_ljust.c	71;"	d	file:
decnny	vendor/lua/src/lstate.h	109;"	d
decodeNresults	vendor/lua/src/lapi.h	47;"	d
decr	t/binary-extstore.t	/^sub decr {$/;"	s
decr	t/binary-sasl.t	/^sub decr {$/;"	s
decr	t/binary.t	/^sub decr {$/;"	s
default_entries	logger.c	/^static const entry_details default_entries[] = {$/;"	v	file:
delete	t/binary-extstore.t	/^sub delete {$/;"	s
delete	t/binary-sasl.t	/^sub delete {$/;"	s
delete	t/binary.t	/^sub delete {$/;"	s
deletelist	vendor/lua/src/lgc.c	/^static void deletelist (lua_State *L, GCObject *p, GCObject *limit) {$/;"	f	file:
delta	memcached.c	/^volatile int64_t delta;$/;"	v
delta	proto_text.c	/^    uint64_t delta; \/\/ ma$/;"	m	struct:_meta_flags	file:
delta	protocol_binary.h	/^                uint64_t delta;$/;"	m	struct:__anon82::__anon83::__anon84
delta	vendor/lua/src/lobject.h	/^    unsigned short delta;$/;"	m	struct:StackValue::__anon50
delta_badval	t/binary-extstore.t	/^sub delta_badval {$/;"	s
delta_badval	t/binary-sasl.t	/^sub delta_badval {$/;"	s
delta_badval	t/binary.t	/^sub delta_badval {$/;"	s
delta_result_type	memcached.h	/^enum delta_result_type {$/;"	g
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depth	extstore.c	/^    unsigned int depth; \/\/ queue depth$/;"	m	struct:__anon13	file:
depth	proxy.h	/^    int depth;$/;"	m	struct:mcp_backend_s
description	testapp.c	/^    const char *description;$/;"	m	struct:testcase	file:
detail_enabled	memcached.h	/^    int detail_enabled;     \/* nonzero if we're collecting detailed stats *\/$/;"	m	struct:settings
digest	xxhash.h	/^    unsigned char digest[4]; \/*!< Hash bytes, big endian *\/$/;"	m	struct:__anon2
digest	xxhash.h	/^typedef struct { unsigned char digest[sizeof(XXH128_hash_t)]; } XXH128_canonical_t;$/;"	m	struct:__anon5
digest	xxhash.h	/^typedef struct { unsigned char digest[sizeof(XXH64_hash_t)]; } XXH64_canonical_t;$/;"	m	struct:__anon3
digit	vendor/lua/src/lstrlib.c	/^static int digit (int c) { return '0' <= c && c <= '9'; }$/;"	f	file:
digits	itoa_ljust.c	/^static inline int digits( uint32_t u, unsigned k, int* d, char** p, int n ) {$/;"	f	file:
direct_reclaims	items.c	/^    uint64_t direct_reclaims;$/;"	m	struct:__anon10	file:
dirty	slab_automove.c	/^    uint64_t dirty;$/;"	m	struct:window_data	file:
dirty	slab_automove_extstore.c	/^    uint64_t dirty;$/;"	m	struct:window_data	file:
discharge2anyreg	vendor/lua/src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	vendor/lua/src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dispatch_bin_command	proto_bin.c	/^static void dispatch_bin_command(conn *c, char *extbuf) {$/;"	f	file:
dispatch_conn_new	thread.c	/^void dispatch_conn_new(int sfd, enum conn_states init_state, int event_flags,$/;"	f
display	sizes.c	/^static void display(const char *name, size_t size) {$/;"	f	file:
display_header	scripts/damemtop	/^sub display_header {$/;"	s
display_help_mode	scripts/damemtop	/^sub display_help_mode {$/;"	s
display_lines	scripts/damemtop	/^sub display_lines {$/;"	s
display_run	scripts/damemtop	/^sub display_run {$/;"	s
display_top_mode	scripts/damemtop	/^sub display_top_mode {$/;"	s
disptab	vendor/lua/src/ljumptab.h	/^static const void *const disptab[NUM_OPCODES] = {$/;"	v
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
dlen	logger.h	/^    size_t dlen;$/;"	m	struct:logentry_proxy_req
doREPL	vendor/lua/src/lua.c	/^static void doREPL (lua_State *L) {$/;"	f	file:
do_accept_new_conns	memcached.c	/^void do_accept_new_conns(const bool do_accept) {$/;"	f
do_add_delta	memcached.c	/^enum delta_result_type do_add_delta(conn *c, const char *key, const size_t nkey,$/;"	f
do_cache_alloc	cache.c	/^void* do_cache_alloc(cache_t *cache) {$/;"	f
do_cache_free	cache.c	/^void do_cache_free(cache_t *cache, void *ptr) {$/;"	f
do_get_lru_size	items.c	/^unsigned int do_get_lru_size(uint32_t id) {$/;"	f
do_item_alloc	items.c	/^item *do_item_alloc(char *key, const size_t nkey, const unsigned int flags,$/;"	f
do_item_alloc_chunk	items.c	/^item_chunk *do_item_alloc_chunk(item_chunk *ch, const size_t bytes_remain) {$/;"	f
do_item_alloc_pull	items.c	/^item *do_item_alloc_pull(const size_t ntotal, const unsigned int id) {$/;"	f
do_item_bump	items.c	/^void do_item_bump(conn *c, item *it, const uint32_t hv) {$/;"	f
do_item_crawl_q	items.c	/^item *do_item_crawl_q(item *it) {$/;"	f
do_item_get	items.c	/^item *do_item_get(const char *key, const size_t nkey, const uint32_t hv, conn *c, const bool do_update) {$/;"	f
do_item_link	items.c	/^int do_item_link(item *it, const uint32_t hv) {$/;"	f
do_item_link_fixup	items.c	/^void do_item_link_fixup(item *it) {$/;"	f
do_item_link_q	items.c	/^static void do_item_link_q(item *it) { \/* item is the new head *\/$/;"	f	file:
do_item_linktail_q	items.c	/^void do_item_linktail_q(item *it) { \/* item is the new tail *\/$/;"	f
do_item_remove	items.c	/^void do_item_remove(item *it) {$/;"	f
do_item_replace	items.c	/^int do_item_replace(item *it, item *new_it, const uint32_t hv) {$/;"	f
do_item_stats_add_crawl	items.c	/^void do_item_stats_add_crawl(const int i, const uint64_t reclaimed,$/;"	f
do_item_touch	items.c	/^item *do_item_touch(const char *key, size_t nkey, uint32_t exptime,$/;"	f
do_item_unlink	items.c	/^void do_item_unlink(item *it, const uint32_t hv) {$/;"	f
do_item_unlink_nolock	items.c	/^void do_item_unlink_nolock(item *it, const uint32_t hv) {$/;"	f
do_item_unlink_q	items.c	/^static void do_item_unlink_q(item *it) {$/;"	f	file:
do_item_unlinktail_q	items.c	/^void do_item_unlinktail_q(item *it) {$/;"	f
do_item_update	items.c	/^void do_item_update(item *it) {$/;"	f
do_lru_crawler_start	crawler.c	/^static int do_lru_crawler_start(uint32_t id, uint32_t remaining) {$/;"	f	file:
do_mul_delta	memcached.c	/^enum delta_result_type do_mul_delta(conn *c, const char *key, const size_t nkey,$/;"	f
do_run_conn_timeout_thread	memcached.c	/^static int do_run_conn_timeout_thread;$/;"	v	file:
do_run_logger_thread	logger.c	/^static volatile int do_run_logger_thread = 1;$/;"	v	file:
do_run_lru_crawler_thread	crawler.c	/^static volatile int do_run_lru_crawler_thread = 0;$/;"	v	file:
do_run_lru_maintainer_thread	items.c	/^static volatile int do_run_lru_maintainer_thread = 0;$/;"	v	file:
do_run_maintenance_thread	assoc.c	/^static volatile int do_run_maintenance_thread = 1;$/;"	v	file:
do_run_slab_rebalance_thread	slabs.c	/^static volatile int do_run_slab_rebalance_thread = 1;$/;"	v	file:
do_slabs_adjust_mem_limit	slabs.c	/^static bool do_slabs_adjust_mem_limit(size_t new_mem_limit) {$/;"	f	file:
do_slabs_alloc	slabs.c	/^static void *do_slabs_alloc(const size_t size, unsigned int id,$/;"	f	file:
do_slabs_free	slabs.c	/^static void do_slabs_free(void *ptr, const size_t size, unsigned int id) {$/;"	f	file:
do_slabs_free_chunked	slabs.c	/^static void do_slabs_free_chunked(item *it, const size_t size) {$/;"	f	file:
do_slabs_newslab	slabs.c	/^static int do_slabs_newslab(const unsigned int id) {$/;"	f	file:
do_slabs_reassign	slabs.c	/^static enum reassign_result_type do_slabs_reassign(int src, int dst) {$/;"	f	file:
do_slabs_stats	slabs.c	/^static void do_slabs_stats(ADD_STAT add_stats, void *c) {$/;"	f	file:
do_store_item	memcached.c	/^enum store_item_type do_store_item(item *it, int comm, conn *c, const uint32_t hv) {$/;"	f
doargs	vendor/lua/src/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:
docall	vendor/lua/src/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	doc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
dochunk	vendor/lua/src/lua.c	/^static int dochunk (lua_State *L, int status) {$/;"	f	file:
docondjump	vendor/lua/src/lvm.c	1076;"	d	file:
dofile	vendor/lua/src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	vendor/lua/src/lbaselib.c	/^static int dofilecont (lua_State *L, int d1, lua_KContext d2) {$/;"	f	file:
dojump	vendor/lua/src/lvm.c	1065;"	d	file:
dolibrary	vendor/lua/src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
done	memcached.h	/^    uint8_t done;$/;"	m	struct:slab_rebalance
done	restart.c	/^    bool done;$/;"	m	struct:__anon17	file:
done	storage.c	/^    bool done;$/;"	m	struct:storage_compact_wrap	file:
doneclass	crawler.c	/^    crawler_doneclass_func doneclass; \/* runs once per sub-crawler completion. *\/$/;"	m	struct:__anon56	file:
donextjump	vendor/lua/src/lvm.c	1069;"	d	file:
dostring	vendor/lua/src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dothecall	vendor/lua/src/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
drive_machine	memcached.c	/^static void drive_machine(conn *c) {$/;"	f	file:
drop_privileges	darwin_priv.c	/^void drop_privileges() {$/;"	f
drop_privileges	freebsd_priv.c	/^void drop_privileges() {$/;"	f
drop_privileges	linux_priv.c	/^void drop_privileges(void) {$/;"	f
drop_privileges	memcached.h	/^    bool drop_privileges;   \/* Whether or not to drop unnecessary process privileges *\/$/;"	m	struct:settings
drop_privileges	memcached.h	1055;"	d
drop_privileges	openbsd_priv.c	/^void drop_privileges() {$/;"	f
drop_privileges	solaris_priv.c	/^void drop_privileges(void) {$/;"	f
drop_worker_privileges	linux_priv.c	/^void drop_worker_privileges(void) {$/;"	f
drop_worker_privileges	memcached.h	1061;"	d
dropped	items.c	/^    uint64_t dropped;$/;"	m	struct:_lru_bump_buf	file:
dropped	logger.h	/^    uint64_t dropped; \/* entries dropped *\/$/;"	m	struct:_logger
dtable	base64.c	/^static const unsigned char dtable[256] = {$/;"	v	file:
dummy	vendor/lua/src/lstrlib.c	/^  int dummy;$/;"	m	union:__anon41	file:
dummynode	vendor/lua/src/ltable.c	93;"	d	file:
dummynode_	vendor/lua/src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dumpBlock	vendor/lua/src/ldump.c	/^static void dumpBlock (DumpState *D, const void *b, size_t size) {$/;"	f	file:
dumpByte	vendor/lua/src/ldump.c	/^static void dumpByte (DumpState *D, int y) {$/;"	f	file:
dumpCode	vendor/lua/src/ldump.c	/^static void dumpCode (DumpState *D, const Proto *f) {$/;"	f	file:
dumpConstants	vendor/lua/src/ldump.c	/^static void dumpConstants (DumpState *D, const Proto *f) {$/;"	f	file:
dumpDebug	vendor/lua/src/ldump.c	/^static void dumpDebug (DumpState *D, const Proto *f) {$/;"	f	file:
dumpFunction	vendor/lua/src/ldump.c	/^static void dumpFunction (DumpState *D, const Proto *f, TString *psource) {$/;"	f	file:
dumpHeader	vendor/lua/src/ldump.c	/^static void dumpHeader (DumpState *D) {$/;"	f	file:
dumpInt	vendor/lua/src/ldump.c	/^static void dumpInt (DumpState *D, int x) {$/;"	f	file:
dumpInteger	vendor/lua/src/ldump.c	/^static void dumpInteger (DumpState *D, lua_Integer x) {$/;"	f	file:
dumpLiteral	vendor/lua/src/ldump.c	37;"	d	file:
dumpNumber	vendor/lua/src/ldump.c	/^static void dumpNumber (DumpState *D, lua_Number x) {$/;"	f	file:
dumpProtos	vendor/lua/src/ldump.c	/^static void dumpProtos (DumpState *D, const Proto *f) {$/;"	f	file:
dumpSize	vendor/lua/src/ldump.c	/^static void dumpSize (DumpState *D, size_t x) {$/;"	f	file:
dumpString	vendor/lua/src/ldump.c	/^static void dumpString (DumpState *D, const TString *s) {$/;"	f	file:
dumpUpvalues	vendor/lua/src/ldump.c	/^static void dumpUpvalues (DumpState *D, const Proto *f) {$/;"	f	file:
dumpVar	vendor/lua/src/ldump.c	49;"	d	file:
dumpVector	vendor/lua/src/ldump.c	35;"	d	file:
dump_enabled	memcached.h	/^    bool dump_enabled;      \/* whether cachedump\/metadump commands work *\/$/;"	m	struct:settings
dump_stack	proto_proxy.c	/^__attribute__((unused)) void dump_stack(lua_State *L) {$/;"	f
dumping	vendor/lua/src/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	doc/Makefile	/^dvidir = ${docdir}$/;"	m
dyd	vendor/lua/src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
dyd	vendor/lua/src/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata
e	extstore.c	/^    store_engine *e;$/;"	m	struct:__anon13	file:
e	extstore.c	/^    store_engine *e;$/;"	m	struct:__anon14	file:
eflags	logger.h	/^    uint16_t eflags; \/* flags this logger should log *\/$/;"	m	struct:_logger
eflags	logger.h	/^    uint16_t eflags; \/* flags we are interested in *\/$/;"	m	struct:__anon60
eflags	logger.h	/^    uint16_t eflags;$/;"	m	struct:_entry_details
eflags	logger.h	/^    uint16_t eflags;$/;"	m	struct:_logentry
einval	t/binary-extstore.t	/^sub einval {$/;"	s
einval	t/binary.t	/^sub einval {$/;"	s
elapsed	logger.h	/^    long elapsed;$/;"	m	struct:logentry_proxy_req
enable_large_pages	memcached.c	/^static int enable_large_pages(void) {$/;"	f	file:
enable_ssl	testapp.c	/^static bool enable_ssl = false;$/;"	v	file:
enabled_tls_testing	t/lib/MemcachedTest.pm	/^sub enabled_tls_testing {$/;"	s
end	logger.h	/^        char end;$/;"	m	union:_logentry::__anon59
end	memcached.h	/^        char end;$/;"	m	union:_stritem::__anon107
end_capture	vendor/lua/src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
end_time	crawler.h	/^    rel_time_t end_time;$/;"	m	struct:__anon99
end_time	crawler.h	/^    rel_time_t end_time;$/;"	m	struct:crawler_expired_data
endpc	vendor/lua/src/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar
enterblock	vendor/lua/src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
entergen	vendor/lua/src/lgc.c	/^static lu_mem entergen (lua_State *L, global_State *g) {$/;"	f	file:
enterinc	vendor/lua/src/lgc.c	/^static void enterinc (global_State *g) {$/;"	f	file:
enterlevel	vendor/lua/src/lparser.c	492;"	d	file:
entersweep	vendor/lua/src/lgc.c	/^static void entersweep (lua_State *L) {$/;"	f	file:
entry_cnt	authfile.c	/^int entry_cnt = 0;$/;"	v
entry_details	logger.h	/^typedef struct _entry_details entry_details;$/;"	t	typeref:struct:_entry_details
entry_log_cb	logger.h	/^typedef void (*entry_log_cb)(logentry *e, const entry_details *d, const void *entry, va_list ap);$/;"	t
entry_map	logger.h	/^    const entry_details *entry_map;$/;"	m	struct:_logger
entry_parse_cb	logger.h	/^typedef int (*entry_parse_cb)(logentry *e, char *scratch);$/;"	t
env	vendor/lua/doc/contents.html	/^<H3><A NAME="env">environment<BR>variables<\/A><\/H3>$/;"	a
envn	vendor/lua/src/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState
ephemeron	vendor/lua/src/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State
eqshrstr	vendor/lua/src/lstring.h	41;"	d
eqstr	vendor/lua/src/lparser.c	43;"	d	file:
equalkey	vendor/lua/src/ltable.c	/^static int equalkey (const TValue *k1, const Node *n2, int deadok) {$/;"	f	file:
errfile	vendor/lua/src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
errfunc	vendor/lua/src/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State
error	vendor/lua/src/lundump.c	/^static l_noret error (LoadState *S, const char *why) {$/;"	f	file:
error	vendor/mcmc/mcmc.c	/^    int error; \/\/ latest error code.$/;"	m	struct:mcmc_ctx	file:
errorJmp	vendor/lua/src/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp
error_expected	vendor/lua/src/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
errorlimit	vendor/lua/src/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
errorstatus	vendor/lua/src/ldo.c	38;"	d	file:
esccheck	vendor/lua/src/llex.c	/^static void esccheck (LexState *ls, int c, const char *msg) {$/;"	f	file:
ev_flags	memcached.h	/^    short  ev_flags;$/;"	m	struct:conn
ev_queue	memcached.h	/^    struct conn_queue *ev_queue; \/* Worker\/conn event queue *\/$/;"	m	struct:__anon110	typeref:struct:__anon110::conn_queue
eval	crawler.c	/^    crawler_eval_func eval; \/* runs on an item. *\/$/;"	m	struct:__anon56	file:
event	logger.h	/^    enum log_entry_type event;$/;"	m	struct:_logentry	typeref:enum:_logentry::log_entry_type
event	memcached.h	/^    struct event event;$/;"	m	struct:conn	typeref:struct:conn::event
event	proxy.h	/^    struct event event; \/\/ libevent$/;"	m	struct:mcp_backend_s	typeref:struct:mcp_backend_s::event
event	vendor/lua/src/lua.h	/^  int event;$/;"	m	struct:lua_Debug
event_counter	proxy.h	/^    eventfd_t event_counter;$/;"	m	struct:proxy_event_thread_s
event_fd	proxy.h	/^    int event_fd;$/;"	m	struct:proxy_event_thread_s
event_flags	thread.c	/^    int               event_flags;$/;"	m	struct:conn_queue_item	file:
event_handler	memcached.c	/^void event_handler(const evutil_socket_t fd, const short which, void *arg) {$/;"	f
event_init	configure	/^ event_init();$/;"	f
event_thread	proxy.h	/^    proxy_event_thread_t *event_thread; \/\/ event thread owning this backend.$/;"	m	struct:mcp_backend_s
eventname	vendor/lua/src/luac.c	219;"	d	file:
evict_to_free	memcached.h	/^    int evict_to_free;$/;"	m	struct:settings
evicted	items.c	/^    uint64_t evicted;$/;"	m	struct:__anon10	file:
evicted	items.h	/^    int64_t evicted;$/;"	m	struct:__anon19
evicted	slab_automove_extstore.c	/^    uint64_t evicted;$/;"	m	struct:window_data	file:
evicted_active	items.c	/^    uint64_t evicted_active; \/* items evicted that should have been shuffled *\/$/;"	m	struct:__anon10	file:
evicted_nonzero	items.c	/^    uint64_t evicted_nonzero;$/;"	m	struct:__anon10	file:
evicted_ratio	slab_automove.c	/^    float evicted_ratio;$/;"	m	struct:window_data	file:
evicted_seen	slab_automove.c	/^    uint64_t evicted_seen; \/\/ if evictions were seen at all this window$/;"	m	struct:window_data	file:
evicted_time	items.c	/^    rel_time_t evicted_time;$/;"	m	struct:__anon10	file:
evicted_unfetched	items.c	/^    uint64_t evicted_unfetched; \/* items evicted but never touched *\/$/;"	m	struct:__anon10	file:
evictions_nomem	memcached.h	/^    uint32_t evictions_nomem;$/;"	m	struct:slab_rebalance
excess_free	slab_automove_extstore.c	/^    unsigned int excess_free;$/;"	m	struct:window_data	file:
exchangehashpart	vendor/lua/src/ltable.c	/^static void exchangehashpart (Table *t1, Table *t2) {$/;"	f	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	doc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exists	t/binary-extstore.t	/^sub exists {$/;"	s
exists	t/binary-sasl.t	/^sub exists {$/;"	s
exists	t/binary.t	/^sub exists {$/;"	s
exp1	vendor/lua/src/lparser.c	/^static void exp1 (LexState *ls) {$/;"	f	file:
exp2reg	vendor/lua/src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expand_bucket	assoc.c	/^static uint64_t expand_bucket = 0;$/;"	v	file:
expanding	assoc.c	/^static bool expanding = false;$/;"	v	file:
expdesc	vendor/lua/src/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	vendor/lua/src/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expiration	protocol_binary.h	/^                uint32_t expiration;$/;"	m	struct:__anon76::__anon77::__anon78
expiration	protocol_binary.h	/^                uint32_t expiration;$/;"	m	struct:__anon79::__anon80::__anon81
expiration	protocol_binary.h	/^                uint32_t expiration;$/;"	m	struct:__anon82::__anon83::__anon84
expiration	protocol_binary.h	/^                uint32_t expiration;$/;"	m	struct:__anon88::__anon89::__anon90
expiration	protocol_binary.h	/^                uint32_t expiration;$/;"	m	struct:__anon91::__anon92::__anon93
expired_unfetched	items.c	/^    uint64_t expired_unfetched; \/* items reclaimed but never touched *\/$/;"	m	struct:__anon10	file:
expkind	vendor/lua/src/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon34
explist	vendor/lua/src/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
expr	vendor/lua/src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	vendor/lua/src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
exptime	logger.h	/^    long long int exptime;$/;"	m	struct:logentry_eviction
exptime	logger.h	/^    long long int exptime;$/;"	m	struct:logentry_ext_write
exptime	memcached.h	/^    rel_time_t      exptime;    \/* expire time *\/$/;"	m	struct:__anon108
exptime	memcached.h	/^    rel_time_t      exptime;    \/* expire time *\/$/;"	m	struct:_stritem
exptime	proto_text.c	/^    rel_time_t exptime;$/;"	m	struct:_meta_flags	file:
extSecret	xxhash.h	/^   const unsigned char* extSecret;$/;"	m	struct:XXH3_state_s
ext_cf	storage.c	/^    struct extstore_conf ext_cf;$/;"	m	struct:storage_settings	typeref:struct:storage_settings::extstore_conf	file:
ext_command	testapp.c	/^static off_t ext_command(char* buf,$/;"	f	file:
ext_compact_under	memcached.h	/^    unsigned int ext_compact_under; \/* when fewer than this many pages, compact *\/$/;"	m	struct:settings
ext_drop_under	memcached.h	/^    unsigned int ext_drop_under; \/* when fewer than this many pages, drop COLD items *\/$/;"	m	struct:settings
ext_drop_unread	memcached.h	/^    bool ext_drop_unread; \/* skip unread items during compaction *\/$/;"	m	struct:settings
ext_global_pool_min	memcached.h	/^    unsigned int ext_global_pool_min;$/;"	m	struct:settings
ext_io_threadcount	memcached.h	/^    unsigned int ext_io_threadcount; \/* number of IO threads to run. *\/$/;"	m	struct:settings
ext_item_age	memcached.h	/^    unsigned int ext_item_age; \/* max age of tail item before storing ext. *\/$/;"	m	struct:settings
ext_item_size	memcached.h	/^    unsigned int ext_item_size; \/* minimum size of items to store externally *\/$/;"	m	struct:settings
ext_low_ttl	memcached.h	/^    unsigned int ext_low_ttl; \/* remaining TTL below this uses own pages *\/$/;"	m	struct:settings
ext_max_frag	memcached.h	/^    double ext_max_frag; \/* ideal maximum page fragmentation *\/$/;"	m	struct:settings
ext_max_sleep	memcached.h	/^    unsigned int ext_max_sleep; \/* maximum sleep time for extstore bg threads, in us *\/$/;"	m	struct:settings
ext_page_size	memcached.h	/^    unsigned int ext_page_size; \/* size in megabytes of storage pages. *\/$/;"	m	struct:settings
ext_recache_rate	memcached.h	/^    unsigned int ext_recache_rate; \/* counter++ % recache_rate == 0 > recache *\/$/;"	m	struct:settings
ext_storage	memcached.c	/^void *ext_storage = NULL;$/;"	v
ext_wbuf_size	memcached.h	/^    unsigned int ext_wbuf_size; \/* read only note for the engine *\/$/;"	m	struct:settings
extlen	protocol_binary.h	/^            uint8_t extlen;$/;"	m	struct:__anon65::__anon66
extlen	protocol_binary.h	/^            uint8_t extlen;$/;"	m	struct:__anon67::__anon68
extra	vendor/lua/src/lobject.h	/^  lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString
extra_	vendor/lua/src/lstate.c	/^  lu_byte extra_[LUA_EXTRASPACE];$/;"	m	struct:LX	file:
extstore_check	extstore.c	/^int extstore_check(void *ptr, unsigned int page_id, uint64_t page_version) {$/;"	f
extstore_close_page	extstore.c	/^void extstore_close_page(void *ptr, unsigned int page_id, uint64_t page_version) {$/;"	f
extstore_compact_lost	memcached.h	/^    uint64_t      extstore_compact_lost; \/* items lost because they were locked *\/$/;"	m	struct:stats
extstore_compact_rescues	memcached.h	/^    uint64_t      extstore_compact_rescues; \/* items re-written during compaction *\/$/;"	m	struct:stats
extstore_compact_skipped	memcached.h	/^    uint64_t      extstore_compact_skipped; \/* unhit items skipped during compaction *\/$/;"	m	struct:stats
extstore_conf	extstore.h	/^struct extstore_conf {$/;"	s
extstore_conf_file	extstore.h	/^struct extstore_conf_file {$/;"	s
extstore_delete	extstore.c	/^int extstore_delete(void *ptr, unsigned int page_id, uint64_t page_version,$/;"	f
extstore_err	extstore.c	/^const char *extstore_err(enum extstore_res res) {$/;"	f
extstore_get_page_data	extstore.c	/^void extstore_get_page_data(void *ptr, struct extstore_stats *st) {$/;"	f
extstore_get_stats	extstore.c	/^void extstore_get_stats(void *ptr, struct extstore_stats *st) {$/;"	f
extstore_init	extstore.c	/^void *extstore_init(struct extstore_conf_file *fh, struct extstore_conf *cf,$/;"	f
extstore_io_thread	extstore.c	/^static void *extstore_io_thread(void *arg) {$/;"	f	file:
extstore_maint_thread	extstore.c	/^static void *extstore_maint_thread(void *arg) {$/;"	f	file:
extstore_page_data	extstore.h	/^struct extstore_page_data {$/;"	s
extstore_res	extstore.h	/^enum extstore_res {$/;"	g
extstore_run_maint	extstore.c	/^void extstore_run_maint(void *ptr) {$/;"	f
extstore_stats	extstore.h	/^struct extstore_stats {$/;"	s
extstore_submit	extstore.c	/^int extstore_submit(void *ptr, obj_io *io) {$/;"	f
extstore_write	extstore.c	/^void extstore_write(void *ptr, obj_io *io) {$/;"	f
extstore_write_request	extstore.c	/^int extstore_write_request(void *ptr, unsigned int bucket,$/;"	f
f	restart.c	/^    FILE *f;$/;"	m	struct:__anon17	file:
f	vendor/lua/doc/manual.html	/^     function f () <em>body<\/em> end$/;"	f
f	vendor/lua/doc/manual.html	/^     function f(a, b) end$/;"	f
f	vendor/lua/src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f	vendor/lua/src/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream
f	vendor/lua/src/liolib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:__anon47	file:
f	vendor/lua/src/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value
f	vendor/lua/src/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure
f	vendor/lua/src/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState
f	vendor/lua/src/lparser.h	/^  int f;  \/* patch list of 'exit when false' *\/$/;"	m	struct:expdesc
f_call	vendor/lua/src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_close	vendor/lua/src/liolib.c	/^static int f_close (lua_State *L) {$/;"	f	file:
f_flush	vendor/lua/src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	vendor/lua/src/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	vendor/lua/src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	vendor/lua/src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	vendor/lua/src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	vendor/lua/src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	vendor/lua/src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	vendor/lua/src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_tostring	vendor/lua/src/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	vendor/lua/src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
factor	memcached.h	/^    double factor;          \/* chunk size growth factor *\/$/;"	m	struct:settings
fail_code	vendor/mcmc/mcmc.c	/^    int fail_code; \/\/ recent failure reason.$/;"	m	struct:mcmc_ctx	file:
failed_count	proxy.h	/^    int failed_count; \/\/ number of fails (timeouts) in a row$/;"	m	struct:mcp_backend_s
failed_flush	logger.h	/^    bool failed_flush; \/* recently failed to write out (EAGAIN), wait before retry *\/$/;"	m	struct:__anon60
failover_factory	t/startfile.lua	/^function failover_factory(zones, local_zone)$/;"	f
false	config.h	208;"	d
fasttm	vendor/lua/src/ltm.h	67;"	d
fatal	vendor/lua/src/luac.c	/^static void fatal(const char* message)$/;"	f	file:
fchecksize	vendor/lua/src/lundump.c	/^static void fchecksize (LoadState *S, size_t size, const char *tname) {$/;"	f	file:
fd	extstore.c	/^    int fd;$/;"	m	struct:_store_page	file:
fd	extstore.h	/^    int fd; \/\/ internal usage$/;"	m	struct:extstore_conf_file
fd	vendor/mcmc/mcmc.c	/^    int fd;$/;"	m	struct:mcmc_ctx	file:
fetcher_ratio	logger.h	/^    uint16_t fetcher_ratio; \/* log one out of every N fetches *\/$/;"	m	struct:_logger
field	vendor/lua/src/lparser.c	/^static void field (LexState *ls, ConsControl *cc) {$/;"	f	file:
fieldsel	vendor/lua/src/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
file	extstore.h	/^    char *file;$/;"	m	struct:extstore_conf_file
fill_item_stats_automove	items.c	/^void fill_item_stats_automove(item_stats_automove *am) {$/;"	f
fill_slab_stats_automove	slabs.c	/^void fill_slab_stats_automove(slab_stats_automove *am) {$/;"	f
filterpc	vendor/lua/src/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:
final	jenkins_hash.c	114;"	d	file:
finalize	crawler.c	/^    crawler_finalize_func finalize; \/* runs once when all sub-crawlers are done. *\/$/;"	m	struct:__anon56	file:
finalize_cb	memcached.h	/^    io_queue_cb finalize_cb; \/\/ called back on the worker thread.$/;"	m	struct:io_queue_cb_s
finaltarget	vendor/lua/src/lcode.c	/^static int finaltarget (Instruction *code, int i) {$/;"	f	file:
find_optimal_spacing	scripts/damemtop	/^sub find_optimal_spacing {$/;"	s
findfield	vendor/lua/src/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	vendor/lua/src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findindex	vendor/lua/src/ltable.c	/^static unsigned int findindex (lua_State *L, Table *t, TValue *key,$/;"	f	file:
findlabel	vendor/lua/src/lparser.c	/^static Labeldesc *findlabel (LexState *ls, TString *name) {$/;"	f	file:
findlast	vendor/lua/src/lgc.c	/^static GCObject **findlast (GCObject **p) {$/;"	f	file:
findloader	vendor/lua/src/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findpcall	vendor/lua/src/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findsetreg	vendor/lua/src/ldebug.c	/^static int findsetreg (const Proto *p, int lastpc, int reg) {$/;"	f	file:
findvararg	vendor/lua/src/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finishCcall	vendor/lua/src/ldo.c	/^static void finishCcall (lua_State *L, CallInfo *ci) {$/;"	f	file:
finishbinexpneg	vendor/lua/src/lcode.c	/^static int finishbinexpneg (FuncState *fs, expdesc *e1, expdesc *e2,$/;"	f	file:
finishbinexpval	vendor/lua/src/lcode.c	/^static void finishbinexpval (FuncState *fs, expdesc *e1, expdesc *e2,$/;"	f	file:
finishgencycle	vendor/lua/src/lgc.c	/^static void finishgencycle (lua_State *L, global_State *g) {$/;"	f	file:
finishpcall	vendor/lua/src/lbaselib.c	/^static int finishpcall (lua_State *L, int status, lua_KContext extra) {$/;"	f	file:
finishpcallk	vendor/lua/src/ldo.c	/^static int finishpcallk (lua_State *L,  CallInfo *ci) {$/;"	f	file:
finishrawget	vendor/lua/src/lapi.c	/^static int finishrawget (lua_State *L, const TValue *val) {$/;"	f	file:
finobj	vendor/lua/src/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State
finobjold1	vendor/lua/src/lstate.h	/^  GCObject *finobjold1;  \/* list of old1 objects with finalizers *\/$/;"	m	struct:global_State
finobjrold	vendor/lua/src/lstate.h	/^  GCObject *finobjrold;  \/* list of really old objects with finalizers *\/$/;"	m	struct:global_State
finobjsur	vendor/lua/src/lstate.h	/^  GCObject *finobjsur;  \/* list of survival objects with finalizers *\/$/;"	m	struct:global_State
fire_main_loop	scripts/damemtop	/^sub fire_main_loop {$/;"	s
firstgoto	vendor/lua/src/lparser.c	/^  int firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	vendor/lua/src/lparser.c	/^  int firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	vendor/lua/src/lparser.h	/^  int firstlabel;  \/* index of first label (in 'dyd->label->arr') *\/$/;"	m	struct:FuncState
firstlocal	vendor/lua/src/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState
firstold1	vendor/lua/src/lstate.h	/^  GCObject *firstold1;  \/* first OLD1 object in the list (if any) *\/$/;"	m	struct:global_State
firsttry	vendor/lua/src/lmem.c	/^static void *firsttry (global_State *g, void *block, size_t os, size_t ns) {$/;"	f	file:
firsttry	vendor/lua/src/lmem.c	38;"	d	file:
fitsBx	vendor/lua/src/lcode.c	/^static int fitsBx (lua_Integer i) {$/;"	f	file:
fitsC	vendor/lua/src/lcode.c	/^static int fitsC (lua_Integer i) {$/;"	f	file:
fixedgc	vendor/lua/src/lstate.h	/^  GCObject *fixedgc;  \/* list of objects not to be collected *\/$/;"	m	struct:global_State
fixforjump	vendor/lua/src/lparser.c	/^static void fixforjump (FuncState *fs, int pc, int dest, int back) {$/;"	f	file:
fixjump	vendor/lua/src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flag_enabled_disabled	memcached.c	/^static const char* flag_enabled_disabled(bool flag) {$/;"	f	file:
flags	protocol_binary.h	/^                uint32_t flags;$/;"	m	struct:__anon73::__anon74::__anon75
flags	protocol_binary.h	/^                uint32_t flags;$/;"	m	struct:__anon79::__anon80::__anon81
flags	protocol_binary.h	/^                uint8_t  flags;$/;"	m	struct:__anon94::__anon95::__anon96
flags	proxy.h	/^    uint64_t flags;$/;"	m	struct:mcp_parser_meta_s
flags	vendor/lua/src/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table
flags	vendor/mcmc/mcmc.h	/^            uint32_t flags;$/;"	m	struct:__anon21::__anon22::__anon24
floatforloop	vendor/lua/src/lvm.c	/^static int floatforloop (StkId ra) {$/;"	f	file:
fltvalue	vendor/lua/src/lobject.h	319;"	d
fltvalueraw	vendor/lua/src/lobject.h	322;"	d
flush	t/binary-extstore.t	/^sub flush {$/;"	s
flush	t/binary-sasl.t	/^sub flush {$/;"	s
flush	t/binary.t	/^sub flush {$/;"	s
flush_command	testapp.c	/^static off_t flush_command(char* buf, size_t bufsz, uint8_t cmd, uint32_t exptime, bool use_extra) {$/;"	f	file:
flush_enabled	memcached.h	/^    bool flush_enabled;     \/* flush_all enabled *\/$/;"	m	struct:settings
flush_socket	t/binary-extstore.t	/^sub flush_socket {$/;"	s
flush_socket	t/binary-sasl.t	/^sub flush_socket {$/;"	s
flush_socket	t/binary.t	/^sub flush_socket {$/;"	s
flushed	extstore.c	/^    bool flushed; \/* whether wbuf has been flushed to disk *\/$/;"	m	struct:__store_wbuf	file:
flushed	proxy.h	/^    bool flushed; \/\/ whether we've fully written this request to a backend.$/;"	m	struct:_io_pending_proxy_t
fmix32	murmur3_hash.c	/^static FORCE_INLINE uint32_t fmix32 ( uint32_t h )$/;"	f	file:
foldbinop	vendor/lua/src/lcode.h	45;"	d
foo	vendor/lua/doc/manual.html	/^     function foo (a)$/;"	f
forbody	vendor/lua/src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isgen) {$/;"	f	file:
forlimit	vendor/lua/src/lvm.c	/^static int forlimit (lua_State *L, lua_Integer init, const TValue *lim,$/;"	f	file:
forlist	vendor/lua/src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
format	logger.h	/^    char *format;$/;"	m	struct:_entry_details
format_column	scripts/damemtop	/^sub format_column {$/;"	s
format_commas	scripts/damemtop	/^sub format_commas {$/;"	s
format_percent	scripts/damemtop	/^sub format_percent {$/;"	s
fornum	vendor/lua/src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forprep	vendor/lua/src/lvm.c	/^static int forprep (lua_State *L, StkId ra) {$/;"	f	file:
forstat	vendor/lua/src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
frealloc	vendor/lua/src/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State
free	extstore.c	/^    bool free; \/* on freelist *\/$/;"	m	struct:_store_page	file:
free	extstore.c	/^    unsigned int free;$/;"	m	struct:__store_wbuf	file:
free	memcached.h	/^    bool free; \/\/ double free detection.$/;"	m	struct:_mc_resp
free	slab_automove.h	/^    slab_automove_free_func free;$/;"	m	struct:__anon16
free_bucket	extstore.c	/^    unsigned int free_bucket; \/* which bucket this page returns to when freed *\/$/;"	m	struct:_store_page	file:
free_bucket	extstore.h	/^    unsigned int free_bucket; \/\/ specialized free bucket$/;"	m	struct:extstore_conf_file
free_bucket	extstore.h	/^    unsigned int free_bucket;$/;"	m	struct:extstore_page_data
free_chunks	slabs.h	/^    long int free_chunks;$/;"	m	struct:__anon18
free_page_bucketcount	extstore.c	/^    unsigned int free_page_bucketcount; \/* count of free page buckets *\/$/;"	m	struct:store_engine	file:
free_page_buckets	extstore.c	/^    store_page **free_page_buckets; \/* stack of use-case isolated free pages *\/$/;"	m	struct:store_engine	file:
free_page_buckets	extstore.h	/^    unsigned int free_page_buckets; \/\/ buckets of dedicated pages (see code)$/;"	m	struct:extstore_conf
free_port	t/lib/MemcachedTest.pm	/^sub free_port {$/;"	s
free_ratio	slab_automove_extstore.c	/^    double free_ratio;$/;"	m	struct:__anon15	file:
freecurr	cache.h	/^    int freecurr;$/;"	m	struct:__anon20
freeexp	vendor/lua/src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freeexps	vendor/lua/src/lcode.c	/^static void freeexps (FuncState *fs, expdesc *e1, expdesc *e2) {$/;"	f	file:
freehash	vendor/lua/src/ltable.c	/^static void freehash (lua_State *L, Table *t) {$/;"	f	file:
freelist	vendor/lua/src/lauxlib.c	653;"	d	file:
freeobj	vendor/lua/src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	vendor/lua/src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freereg	vendor/lua/src/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState
freeregs	vendor/lua/src/lcode.c	/^static void freeregs (FuncState *fs, int r1, int r2) {$/;"	f	file:
freestack	vendor/lua/src/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
freetotal	cache.h	/^    int freetotal;$/;"	m	struct:__anon20
freeupval	vendor/lua/src/lgc.c	/^static void freeupval (lua_State *L, UpVal *uv) {$/;"	f	file:
fromstate	vendor/lua/src/lstate.c	51;"	d	file:
fs	vendor/lua/src/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState
ftransfer	vendor/lua/src/lstate.h	/^      unsigned short ftransfer;  \/* offset of first value transferred *\/$/;"	m	struct:CallInfo::__anon32::__anon33
ftransfer	vendor/lua/src/lua.h	/^  unsigned short ftransfer;   \/* (r) index of first value transferred *\/$/;"	m	struct:lua_Debug
full	extstore.c	/^    bool full; \/* done writing to this page *\/$/;"	m	struct:__store_wbuf	file:
fullgen	vendor/lua/src/lgc.c	/^static lu_mem fullgen (lua_State *L, global_State *g) {$/;"	f	file:
fullinc	vendor/lua/src/lgc.c	/^static void fullinc (lua_State *L, global_State *g) {$/;"	f	file:
func	proxy.h	/^    key_hash_func func;$/;"	m	struct:proxy_hash_func
func	vendor/lua/src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
func	vendor/lua/src/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg
func	vendor/lua/src/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo
func_cl_dashL	compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	compile	/^func_cl_wrapper ()$/;"	f
func_file_conv	compile	/^func_file_conv ()$/;"	f
funcargs	vendor/lua/src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcidx	vendor/lua/src/lstate.h	/^    int funcidx;  \/* called-function index *\/$/;"	m	union:CallInfo::__anon32
funcinfo	vendor/lua/src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	vendor/lua/src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcnamefromcode	vendor/lua/src/ldebug.c	/^static const char *funcnamefromcode (lua_State *L, CallInfo *ci,$/;"	f	file:
funcs	vendor/lua/src/lutf8lib.c	/^static const luaL_Reg funcs[] = {$/;"	v	file:
funcstat	vendor/lua/src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
function	testapp.c	/^    TEST_FUNC function;$/;"	m	struct:testcase	file:
functions	vendor/lua/doc/contents.html	/^<H3><A NAME="functions">Lua functions<\/A><\/H3>$/;"	a
fvalue	vendor/lua/src/lobject.h	592;"	d
fvalueraw	vendor/lua/src/lobject.h	595;"	d
g	vendor/lua/doc/manual.html	/^     function g(a, b, ...) end$/;"	f
g	vendor/lua/src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g_iofile	vendor/lua/src/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	vendor/lua/src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	vendor/lua/src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gai_status	vendor/mcmc/mcmc.c	/^    int gai_status; \/\/ getaddrinfo() last status.$/;"	m	struct:mcmc_ctx	file:
gat	t/binary-extstore.t	/^sub gat {$/;"	s
gat	t/binary.t	/^sub gat {$/;"	s
gc	vendor/lua/src/lobject.h	/^  struct GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value	typeref:struct:Value::GCObject
gc	vendor/lua/src/lstate.h	/^  GCObject gc;  \/* common header *\/$/;"	m	union:GCUnion
gcemergency	vendor/lua/src/lstate.h	/^  lu_byte gcemergency;  \/* true if this is an emergency collection *\/$/;"	m	struct:global_State
gckey	vendor/lua/src/lobject.h	753;"	d
gckeyN	vendor/lua/src/lobject.h	754;"	d
gckind	vendor/lua/src/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State
gclist	vendor/lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto
gclist	vendor/lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table
gclist	vendor/lua/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Udata
gclist	vendor/lua/src/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State
gco2ccl	vendor/lua/src/lstate.h	372;"	d
gco2cl	vendor/lua/src/lstate.h	373;"	d
gco2lcl	vendor/lua/src/lstate.h	371;"	d
gco2p	vendor/lua/src/lstate.h	376;"	d
gco2t	vendor/lua/src/lstate.h	375;"	d
gco2th	vendor/lua/src/lstate.h	377;"	d
gco2ts	vendor/lua/src/lstate.h	368;"	d
gco2u	vendor/lua/src/lstate.h	370;"	d
gco2upv	vendor/lua/src/lstate.h	378;"	d
gcpause	vendor/lua/src/lstate.h	/^  lu_byte gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State
gcrunning	vendor/lua/src/lstate.h	/^  lu_byte gcrunning;  \/* true if GC is running *\/$/;"	m	struct:global_State
gcstate	vendor/lua/src/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State
gcstepmul	vendor/lua/src/lstate.h	/^  lu_byte gcstepmul;  \/* GC "speed" *\/$/;"	m	struct:global_State
gcstepsize	vendor/lua/src/lstate.h	/^  lu_byte gcstepsize;  \/* (log2 of) GC granularity *\/$/;"	m	struct:global_State
gcstopem	vendor/lua/src/lstate.h	/^  lu_byte gcstopem;  \/* stops emergency collections *\/$/;"	m	struct:global_State
gctm	vendor/lua/src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
gcvalue	vendor/lua/src/lobject.h	292;"	d
gcvalueN	vendor/lua/src/lgc.c	91;"	d	file:
gcvalueraw	vendor/lua/src/lobject.h	294;"	d
generic_reader	vendor/lua/src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
genlink	vendor/lua/src/lgc.c	/^static void genlink (global_State *g, GCObject *o) {$/;"	f	file:
genmajormul	vendor/lua/src/lstate.h	/^  lu_byte genmajormul;  \/* control for major generational collections *\/$/;"	m	struct:global_State
genminormul	vendor/lua/src/lstate.h	/^  lu_byte genminormul;  \/* control for minor generational collections *\/$/;"	m	struct:global_State
genstep	vendor/lua/src/lgc.c	/^static void genstep (lua_State *L, global_State *g) {$/;"	f	file:
get	t/binary-extstore.t	/^sub get {$/;"	s
get	t/binary-sasl.t	/^sub get {$/;"	s
get	t/binary.t	/^sub get {$/;"	s
getCcalls	vendor/lua/src/lstate.h	102;"	d
getF	vendor/lua/src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getGtable	vendor/lua/src/lapi.c	656;"	d	file:
getOpMode	vendor/lua/src/lopcodes.h	370;"	d
getS	vendor/lua/src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
get_cas_id	items.c	/^uint64_t get_cas_id(void) {$/;"	f
get_conn_text	memcached.c	/^static inline void get_conn_text(const conn *c, const int af,$/;"	f	file:
get_memcached_exe	t/lib/MemcachedTest.pm	/^sub get_memcached_exe {$/;"	s
get_multi	t/binary-extstore.t	/^sub get_multi {$/;"	s
get_multi	t/binary-sasl.t	/^sub get_multi {$/;"	s
get_multi	t/binary.t	/^sub get_multi {$/;"	s
get_object	cache.c	/^static inline void* get_object(void *ptr) {$/;"	f	file:
get_onecapture	vendor/lua/src/lstrlib.c	/^static size_t get_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
get_page_from_global_pool	slabs.c	/^static void *get_page_from_global_pool(void) {$/;"	f	file:
get_prompt	vendor/lua/src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_stats	memcached.c	/^bool get_stats(const char *stat_type, int nkey, ADD_STAT add_stats, void *c) {$/;"	f
get_window_data	slab_automove_extstore.c	/^static struct window_data *get_window_data(slab_automove *a, int class) {$/;"	f	file:
get_worker_thread	thread.c	/^LIBEVENT_THREAD *get_worker_thread(int id) {$/;"	f
getage	vendor/lua/src/lgc.h	116;"	d
getarg	vendor/lua/src/lopcodes.h	121;"	d
getbaseline	vendor/lua/src/ldebug.c	/^static int getbaseline (const Proto *f, int pc, int *basepc) {$/;"	f	file:
getbinopr	vendor/lua/src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getblock32	murmur3_hash.c	/^static FORCE_INLINE uint32_t getblock32 ( const uint32_t * p, int i )$/;"	f	file:
getboolfield	vendor/lua/src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getbuff	vendor/lua/src/lobject.c	/^static char *getbuff (BuffFS *buff, int sz) {$/;"	f	file:
getcistrecst	vendor/lua/src/lstate.h	228;"	d
getco	vendor/lua/src/lcorolib.c	/^static lua_State *getco (lua_State *L) {$/;"	f	file:
getcurrentline	vendor/lua/src/ldebug.c	/^static int getcurrentline (CallInfo *ci) {$/;"	f	file:
getdetails	vendor/lua/src/lstrlib.c	/^static KOption getdetails (Header *h, size_t totalsize,$/;"	f	file:
getendpos	vendor/lua/src/lstrlib.c	/^static size_t getendpos (lua_State *L, int arg, lua_Integer def,$/;"	f	file:
getfield	vendor/lua/src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d, int delta) {$/;"	f	file:
getfreepos	vendor/lua/src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfuncname	vendor/lua/src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
getgclist	vendor/lua/src/lgc.c	/^static GCObject **getgclist (GCObject *o) {$/;"	f	file:
getgcparam	vendor/lua/src/lgc.h	135;"	d
getgeneric	vendor/lua/src/ltable.c	/^static const TValue *getgeneric (Table *t, const TValue *key, int deadok) {$/;"	f	file:
gethexa	vendor/lua/src/llex.c	/^static int gethexa (LexState *ls) {$/;"	f	file:
getinstruction	vendor/lua/src/lcode.h	55;"	d
getiofile	vendor/lua/src/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	vendor/lua/src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	vendor/lua/src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocalattribute	vendor/lua/src/lparser.c	/^static int getlocalattribute (LexState *ls) {$/;"	f	file:
getlocalvardesc	vendor/lua/src/lparser.c	/^static Vardesc *getlocalvardesc (FuncState *fs, int vidx) {$/;"	f	file:
getnextfilename	vendor/lua/src/loadlib.c	/^static const char *getnextfilename (char **path, char *end) {$/;"	f	file:
getnodekey	vendor/lua/src/lobject.h	705;"	d
getnum	vendor/lua/src/lstrlib.c	/^static int getnum (const char **fmt, int df) {$/;"	f	file:
getnumlimit	vendor/lua/src/lstrlib.c	/^static int getnumlimit (Header *h, const char **fmt, int df) {$/;"	f	file:
getoah	vendor/lua/src/lstate.h	243;"	d
getobjname	vendor/lua/src/ldebug.c	/^static const char *getobjname (const Proto *p, int lastpc, int reg,$/;"	f	file:
getoption	vendor/lua/src/lstrlib.c	/^static KOption getoption (Header *h, const char **fmt, int *size) {$/;"	f	file:
getproto	vendor/lua/src/lobject.h	654;"	d
getstr	vendor/lua/src/lobject.h	390;"	d
gettable	vendor/lua/src/lapi.c	/^static Table *gettable (lua_State *L, int idx) {$/;"	f	file:
getthread	vendor/lua/src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
gettotalbytes	vendor/lua/src/lstate.h	389;"	d
getudatamem	vendor/lua/src/lobject.h	482;"	d
getunopr	vendor/lua/src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	vendor/lua/src/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	vendor/lua/src/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
gf2_matrix_square	crc32c.c	/^static inline void gf2_matrix_square(uint32_t *square, uint32_t *mat) {$/;"	f	file:
gf2_matrix_times	crc32c.c	/^static inline uint32_t gf2_matrix_times(uint32_t *mat, uint32_t vec) {$/;"	f	file:
gfasttm	vendor/lua/src/ltm.h	64;"	d
gid	logger.h	/^    uint64_t gid;$/;"	m	struct:_logentry
give_advice	missing	/^give_advice ()$/;"	f
globalL	vendor/lua/src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	vendor/lua/src/lstate.h	/^typedef struct global_State {$/;"	s
global_State	vendor/lua/src/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
global_page_pool_size	slabs.c	/^unsigned int global_page_pool_size(bool *mem_flag) {$/;"	f
global_pool_check	slab_automove_extstore.c	/^static int global_pool_check(slab_automove *a) {$/;"	f	file:
global_pool_watermark	slab_automove_extstore.c	/^    unsigned int global_pool_watermark;$/;"	m	struct:__anon15	file:
global_stats	proxy.h	/^    struct proxy_global_stats global_stats;$/;"	m	struct:__anon102	typeref:struct:__anon102::proxy_global_stats
gmatch	vendor/lua/src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	vendor/lua/src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnext	vendor/lua/src/ltable.h	15;"	d
gnode	vendor/lua/src/ltable.h	13;"	d
gnodelast	vendor/lua/src/lgc.c	122;"	d	file:
gotostat	vendor/lua/src/lparser.c	/^static void gotostat (LexState *ls) {$/;"	f	file:
graceful_stop	t/lib/MemcachedTest.pm	/^sub graceful_stop {$/;"	s
gray	vendor/lua/src/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State
grayagain	vendor/lua/src/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State
grow_slab_list	slabs.c	/^static int grow_slab_list (const unsigned int id) {$/;"	f	file:
grow_stats_buf	memcached.c	/^static bool grow_stats_buf(conn *c, size_t needed) {$/;"	f	file:
growstrtab	vendor/lua/src/lstring.c	/^static void growstrtab (lua_State *L, stringtable *tb) {$/;"	f	file:
gt	vendor/lua/src/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata
gval	vendor/lua/src/ltable.h	14;"	d
gxf	vendor/lua/src/ldebug.c	/^static const char *gxf (const Proto *p, int pc, Instruction i, int isup) {$/;"	f	file:
h	vendor/lua/src/llex.h	/^  Table *h;  \/* to avoid collection\/reuse strings *\/$/;"	m	struct:LexState
h	vendor/lua/src/lmathlib.c	/^  lu_int32 h;  \/* higher half *\/$/;"	m	struct:Rand64	file:
h	vendor/lua/src/lstate.h	/^  struct Table h;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Table
h_next	memcached.h	/^    struct _stritem *h_next;    \/* hash chain next *\/$/;"	m	struct:__anon108	typeref:struct:__anon108::_stritem
h_next	memcached.h	/^    struct _stritem *h_next;    \/* hash chain next *\/$/;"	m	struct:_stritem	typeref:struct:_stritem::_stritem
halfProtect	vendor/lua/src/lvm.c	1105;"	d	file:
handle_binary_protocol_error	proto_bin.c	/^static void handle_binary_protocol_error(conn *c) {$/;"	f	file:
handle_logfile	scripts/start-memcached	/^sub handle_logfile$/;"	s
handle_luainit	vendor/lua/src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	vendor/lua/src/lua.c	/^static int handle_script (lua_State *L, char **argv) {$/;"	f	file:
handle_syssig	linux_priv.c	/^static void handle_syssig(int signum, siginfo_t *si, void *thread_context) {$/;"	f	file:
has_E	vendor/lua/src/lua.c	259;"	d	file:
has_cas	proto_text.c	/^    unsigned int has_cas :1;$/;"	m	struct:_meta_flags	file:
has_e	vendor/lua/src/lua.c	258;"	d	file:
has_error	proto_text.c	/^    unsigned int has_error :1; \/\/ flipped if we found an error during parsing.$/;"	m	struct:_meta_flags	file:
has_error	vendor/lua/src/lua.c	255;"	d	file:
has_i	vendor/lua/src/lua.c	256;"	d	file:
has_space	proxy.h	/^    bool has_space; \/\/ a space was found after the last byte parsed.$/;"	m	struct:mcp_parser_s
has_v	vendor/lua/src/lua.c	257;"	d	file:
hash	hash.c	/^hash_func hash;$/;"	v
hash	testapp.c	/^hash_func hash;$/;"	v
hash	vendor/lua/src/lobject.h	/^  unsigned int hash;$/;"	m	struct:TString
hash	vendor/lua/src/lstate.h	/^  TString **hash;$/;"	m	struct:stringtable
hash_algorithm	memcached.h	/^    char *hash_algorithm;     \/* Hash algorithm in use *\/$/;"	m	struct:settings
hash_bulk_move	assoc.c	/^int hash_bulk_move = DEFAULT_HASH_BULK_MOVE;$/;"	v
hash_bytes	memcached.h	/^    uint64_t      hash_bytes;       \/* size used for hash tables *\/$/;"	m	struct:stats_state
hash_func	hash.h	/^typedef uint32_t (*hash_func)(const void *key, size_t length);$/;"	t
hash_init	hash.c	/^int hash_init(enum hashfunc_type type) {$/;"	f
hash_is_expanding	memcached.h	/^    bool          hash_is_expanding; \/* If the hash table is being expanded *\/$/;"	m	struct:stats_state
hash_power_level	memcached.h	/^    unsigned int  hash_power_level; \/* Better hope it's not over 9000 *\/$/;"	m	struct:stats_state
hash_search	vendor/lua/src/ltable.c	/^static lua_Unsigned hash_search (Table *t, lua_Unsigned j) {$/;"	f	file:
hash_seed	proxy.h	/^    uint64_t hash_seed; \/\/ calculated from a string.$/;"	m	struct:mcp_pool_s
hash_selector_func	proxy.h	/^typedef uint32_t (*hash_selector_func)(uint64_t hash, void *ctx);$/;"	t
hashboolean	vendor/lua/src/ltable.c	85;"	d	file:
hashfunc_type	hash.h	/^enum hashfunc_type {$/;"	g
hashint	vendor/lua/src/ltable.c	87;"	d	file:
hashmask	assoc.c	35;"	d	file:
hashmask	thread.c	91;"	d	file:
hashmod	vendor/lua/src/ltable.c	81;"	d	file:
hashpointer	vendor/lua/src/ltable.c	90;"	d	file:
hashpow2	vendor/lua/src/ltable.c	75;"	d	file:
hashpower	assoc.c	/^unsigned int hashpower = HASHPOWER_DEFAULT;$/;"	v
hashpower_init	memcached.h	/^    int hashpower_init;     \/* Starting hash power level *\/$/;"	m	struct:settings
hashsize	assoc.c	34;"	d	file:
hashsize	thread.c	90;"	d	file:
hashstr	vendor/lua/src/ltable.c	84;"	d	file:
hasjumps	vendor/lua/src/lcode.c	37;"	d	file:
hasmultret	vendor/lua/src/lparser.c	38;"	d	file:
hastocloseCfunc	vendor/lua/src/lapi.h	43;"	d
hdr_it	storage.c	/^    item *hdr_it;             \/* original header item. *\/$/;"	m	struct:_io_pending_storage_t	file:
head	cache.h	/^    STAILQ_HEAD(cache_head, cache_free_s) head;$/;"	m	struct:__anon20
head	memcached.h	/^    struct _stritem  *head;     \/* always points to the owner chunk *\/$/;"	m	struct:_strchunk	typeref:struct:_strchunk::_stritem
header	protocol_binary.h	/^            protocol_binary_request_header header;$/;"	m	struct:__anon69::__anon70
header	protocol_binary.h	/^            protocol_binary_request_header header;$/;"	m	struct:__anon76::__anon77
header	protocol_binary.h	/^            protocol_binary_request_header header;$/;"	m	struct:__anon79::__anon80
header	protocol_binary.h	/^            protocol_binary_request_header header;$/;"	m	struct:__anon82::__anon83
header	protocol_binary.h	/^            protocol_binary_request_header header;$/;"	m	struct:__anon88::__anon89
header	protocol_binary.h	/^            protocol_binary_request_header header;$/;"	m	struct:__anon91::__anon92
header	protocol_binary.h	/^            protocol_binary_response_header header;$/;"	m	struct:__anon71::__anon72
header	protocol_binary.h	/^            protocol_binary_response_header header;$/;"	m	struct:__anon73::__anon74
header	protocol_binary.h	/^            protocol_binary_response_header header;$/;"	m	struct:__anon85::__anon86
header	protocol_binary.h	/^            protocol_binary_response_header header;$/;"	m	struct:__anon94::__anon95
heads	items.c	/^static item *heads[LARGEST_ID];$/;"	v	file:
hexify	t/udp.t	/^sub hexify {$/;"	s
hickup_thread_running	testapp.c	/^volatile bool hickup_thread_running;$/;"	v
high64	xxhash.h	/^    XXH64_hash_t high64;  \/*!< `value >> 64` *\/$/;"	m	struct:__anon4
histo	crawler.h	/^    uint64_t histo[61];$/;"	m	struct:__anon99
hit	proto_text.c	/^    unsigned int hit :1;$/;"	m	struct:_meta_flags	file:
hits_to_cold	items.c	/^    uint64_t hits_to_cold;$/;"	m	struct:__anon10	file:
hits_to_hot	items.c	/^    uint64_t hits_to_hot;$/;"	m	struct:__anon10	file:
hits_to_temp	items.c	/^    uint64_t hits_to_temp;$/;"	m	struct:__anon10	file:
hits_to_warm	items.c	/^    uint64_t hits_to_warm;$/;"	m	struct:__anon10	file:
hnext	vendor/lua/src/lobject.h	/^    struct TString *hnext;  \/* linked list for hash table *\/$/;"	m	union:TString::__anon51	typeref:struct:TString::__anon51::TString
hook	vendor/lua/src/lstate.h	/^  volatile lua_Hook hook;$/;"	m	struct:lua_State
hookcount	vendor/lua/src/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State
hookf	vendor/lua/src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hookmask	vendor/lua/src/lstate.h	/^  volatile l_signalT hookmask;$/;"	m	struct:lua_State
host	Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	doc/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	t/lib/MemcachedTest.pm	/^sub host { $_[0]{host} }$/;"	s
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	doc/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	doc/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	doc/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	doc/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
host_vendor	doc/Makefile	/^host_vendor = pc$/;"	m
hot_lru_pct	memcached.h	/^    int hot_lru_pct; \/* percentage of slab space for HOT_LRU *\/$/;"	m	struct:settings
hot_max_factor	memcached.h	/^    double hot_max_factor; \/* HOT tail age relative to COLD tail *\/$/;"	m	struct:settings
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	doc/Makefile	/^htmldir = ${docdir}$/;"	m
htonll	util.c	/^uint64_t htonll(uint64_t val) {$/;"	f
hv	items.c	/^    uint32_t hv;$/;"	m	struct:__anon11	file:
hv	items.h	/^    uint32_t hv;$/;"	m	struct:lru_pull_tail_return
hvalue	vendor/lua/src/lobject.h	669;"	d
i	vendor/lua/src/llex.h	/^  lua_Integer i;$/;"	m	union:__anon46
i	vendor/lua/src/lobject.h	/^  lua_Integer i;   \/* integer numbers *\/$/;"	m	union:Value
i	vendor/lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon42	file:
iABC	vendor/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
iABx	vendor/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
iAsBx	vendor/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
iAx	vendor/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
i_ci	vendor/lua/src/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo
i_val	vendor/lua/src/lobject.h	/^  TValue i_val;  \/* direct access to node's value as a proper 'TValue' *\/$/;"	m	union:Node
iam_after	slab_automove.c	/^    item_stats_automove iam_after[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon57	file:
iam_after	slab_automove_extstore.c	/^    item_stats_automove iam_after[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon15	file:
iam_before	slab_automove.c	/^    item_stats_automove iam_before[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon57	file:
iam_before	slab_automove_extstore.c	/^    item_stats_automove iam_before[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon15	file:
id	extstore.c	/^    unsigned short id;$/;"	m	struct:_store_page	file:
id	logger.h	/^    int id; \/* id number for watcher list *\/$/;"	m	struct:__anon60
id	proxy_ring_hash.c	/^    unsigned int id; \/\/ server id.$/;"	m	struct:__anon97	file:
idle_timeout	memcached.h	/^    int idle_timeout;       \/* Number of seconds to let connections idle *\/$/;"	m	struct:settings
idx	vendor/lua/src/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc
idx	vendor/lua/src/lparser.h	/^      short idx;  \/* index (R or "long" K) *\/$/;"	m	struct:expdesc::__anon35::__anon36
ifstat	vendor/lua/src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
inclinenumber	vendor/lua/src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	doc/Makefile	/^includedir = ${prefix}\/include$/;"	m
incnny	vendor/lua/src/lstate.h	106;"	d
incomplete	vendor/lua/src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
incr	t/binary-extstore.t	/^sub incr {$/;"	s
incr	t/binary-sasl.t	/^sub incr {$/;"	s
incr	t/binary.t	/^sub incr {$/;"	s
incr_cas	t/binary-extstore.t	/^sub incr_cas {$/;"	s
incr_cas	t/binary.t	/^sub incr_cas {$/;"	s
incstep	vendor/lua/src/lgc.c	/^static void incstep (lua_State *L, global_State *g) {$/;"	f	file:
ind	vendor/lua/src/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon35	typeref:struct:expdesc::__anon35::__anon36
index	vendor/lua/doc/contents.html	/^<H2><A NAME="index">Index<\/A><\/H2>$/;"	a
index2stack	vendor/lua/src/lapi.c	/^static StkId index2stack (lua_State *L, int idx) {$/;"	f	file:
index2value	vendor/lua/src/lapi.c	/^static TValue *index2value (lua_State *L, int idx) {$/;"	f	file:
info	vendor/lua/src/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon35
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	doc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	crawler.c	/^    crawler_init_func init; \/* run before crawl starts *\/$/;"	m	struct:__anon56	file:
init	slab_automove.h	/^    slab_automove_init_func init;$/;"	m	struct:__anon16
init	vendor/lua/src/lauxlib.h	/^  } init;$/;"	m	struct:luaL_Buffer	typeref:union:luaL_Buffer::__anon49
init	vendor/lua/src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon40	file:
init	vendor/lua/src/lstrlib.c	/^  int init;  \/* true iff buffer has been initialized *\/$/;"	m	struct:str_Writer	file:
init_cond	thread.c	/^static pthread_cond_t init_cond;$/;"	v	file:
init_count	thread.c	/^static int init_count = 0;$/;"	v	file:
init_exp	vendor/lua/src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_lock	thread.c	/^static pthread_mutex_t init_lock;$/;"	v	file:
init_lru_crawler	crawler.c	/^int init_lru_crawler(void *arg) {$/;"	f
init_lru_maintainer	items.c	/^int init_lru_maintainer(void) {$/;"	f
init_registry	vendor/lua/src/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
init_sasl	sasl_defs.c	/^void init_sasl(void) {$/;"	f
init_sasl	sasl_defs.h	18;"	d
init_sasl_conn	proto_bin.c	/^static void init_sasl_conn(conn *c) {$/;"	f	file:
init_state	thread.c	/^    enum conn_states  init_state;$/;"	m	struct:conn_queue_item	typeref:enum:conn_queue_item::conn_states	file:
init_var	vendor/lua/src/lparser.c	/^static void init_var (FuncState *fs, expdesc *e, int vidx) {$/;"	f	file:
initheader	vendor/lua/src/lstrlib.c	/^static void initheader (lua_State *L, Header *h) {$/;"	f	file:
initial	proto_text.c	/^    uint64_t initial; \/\/ ma$/;"	m	struct:_meta_flags	file:
initial	protocol_binary.h	/^                uint64_t initial;$/;"	m	struct:__anon82::__anon83::__anon84
inline	xxhash.h	2589;"	d
inline	xxhash.h	2591;"	d
inline_reclaim	memcached.h	/^    uint32_t inline_reclaim;$/;"	m	struct:slab_rebalance
insidetbc	vendor/lua/src/lparser.c	/^  lu_byte insidetbc;  \/* true if inside the scope of a to-be-closed var. *\/$/;"	m	struct:BlockCnt	file:
instack	vendor/lua/src/lobject.h	/^  lu_byte instack;  \/* whether it is in stack (register) *\/$/;"	m	struct:Upvaldesc
install	vendor/lua/doc/readme.html	/^<H2><A NAME="install">Installing Lua<\/A><\/H2>$/;"	a
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/install-sh$/;"	m
install_sh	doc/Makefile	/^install_sh = ${SHELL} \/home\/psd\/codes_for_books\/ostep\/ostep-projects\/initial-memcached\/memcached-1.6.17\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	doc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	doc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	doc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int2sC	vendor/lua/src/lopcodes.h	100;"	d
intarith	vendor/lua/src/lobject.c	/^static lua_Integer intarith (lua_State *L, int op, lua_Integer v1,$/;"	f	file:
inter	memcached.h	/^    char *inter;$/;"	m	struct:settings
internshrstr	vendor/lua/src/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
interror	vendor/lua/src/lauxlib.c	/^static void interror (lua_State *L, int arg) {$/;"	f	file:
intop	vendor/lua/src/lvm.h	73;"	d
invalidateTMcache	vendor/lua/src/ltable.h	23;"	d
io	storage.c	/^    obj_io io;$/;"	m	struct:storage_compact_wrap	file:
io	thread.c	/^    io_pending_t *io; \/\/ IO when used for deferred IO handling.$/;"	m	struct:conn_queue_item	file:
io_cache	memcached.h	/^    cache_t *io_cache;          \/* IO objects *\/$/;"	m	struct:__anon110
io_close	vendor/lua/src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_ctx	storage.c	/^    obj_io io_ctx;            \/* embedded extstore IO header *\/$/;"	m	struct:_io_pending_storage_t	file:
io_depth	extstore.c	/^    unsigned int io_depth; \/* FIXME: Might cache into thr struct *\/$/;"	m	struct:store_engine	file:
io_depth	extstore.h	/^    unsigned int io_depth; \/\/ with normal I\/O, hits locks less. req'd for AIO$/;"	m	struct:extstore_conf
io_fclose	vendor/lua/src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	vendor/lua/src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_head	proxy.h	/^    io_head_t io_head; \/\/ stack of requests.$/;"	m	struct:mcp_backend_s
io_head_in	proxy.h	/^    io_head_t io_head_in; \/\/ inbound requests to process.$/;"	m	struct:proxy_event_thread_s
io_head_t	proxy.h	/^typedef STAILQ_HEAD(io_head_s, _io_pending_proxy_t) io_head_t;$/;"	t
io_input	vendor/lua/src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	vendor/lua/src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_next	proxy.h	/^    STAILQ_ENTRY(_io_pending_proxy_t) io_next; \/\/ stack for backends$/;"	m	struct:_io_pending_proxy_t
io_noclose	vendor/lua/src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	vendor/lua/src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	vendor/lua/src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	vendor/lua/src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_pending	memcached.h	/^    io_pending_t *io_pending; \/* pending IO descriptor for this response *\/$/;"	m	struct:_mc_resp
io_pending_proxy_t	proxy.h	/^typedef struct _io_pending_proxy_t io_pending_proxy_t;$/;"	t	typeref:struct:_io_pending_proxy_t
io_pending_storage_t	storage.c	/^} io_pending_storage_t;$/;"	t	typeref:struct:_io_pending_storage_t	file:
io_pending_t	memcached.h	/^typedef struct _io_pending_t io_pending_t;$/;"	t	typeref:struct:_io_pending_t
io_popen	vendor/lua/src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_queue	extstore.h	/^    uint64_t io_queue;$/;"	m	struct:extstore_stats
io_queue_cb	memcached.h	/^typedef void (*io_queue_cb)(io_pending_t *pending);$/;"	t
io_queue_cb_s	memcached.h	/^typedef struct io_queue_cb_s {$/;"	s
io_queue_cb_t	memcached.h	/^} io_queue_cb_t;$/;"	t	typeref:struct:io_queue_cb_s
io_queue_s	memcached.h	/^struct io_queue_s {$/;"	s
io_queue_stack_cb	memcached.h	/^typedef void (*io_queue_stack_cb)(io_queue_t *q);$/;"	t
io_queue_t	memcached.h	/^typedef struct io_queue_s io_queue_t;$/;"	t	typeref:struct:io_queue_s
io_queue_type	memcached.h	/^    int io_queue_type; \/\/ matches one of IO_QUEUE_*$/;"	m	struct:_io_pending_t
io_queue_type	proxy.h	/^    int io_queue_type;$/;"	m	struct:_io_pending_proxy_t
io_queue_type	storage.c	/^    int io_queue_type;$/;"	m	struct:_io_pending_storage_t	file:
io_queues	memcached.h	/^    io_queue_cb_t io_queues[IO_QUEUE_COUNT];$/;"	m	struct:__anon110
io_queues	memcached.h	/^    io_queue_t io_queues[IO_QUEUE_COUNT]; \/* set of deferred IO queues. *\/$/;"	m	struct:conn
io_queues_submitted	memcached.h	/^    int io_queues_submitted; \/* see notes on io_queue_t *\/$/;"	m	struct:conn
io_read	vendor/lua/src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	vendor/lua/src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_stack	extstore.c	/^    obj_io *io_stack; \/* IO's to use with submitting wbuf's *\/$/;"	m	struct:store_engine	file:
io_threadcount	extstore.c	/^    unsigned int io_threadcount; \/* count of IO threads *\/$/;"	m	struct:store_engine	file:
io_threadcount	extstore.h	/^    unsigned int io_threadcount;$/;"	m	struct:extstore_conf
io_threads	extstore.c	/^    store_io_thread *io_threads;$/;"	m	struct:store_engine	file:
io_tmpfile	vendor/lua/src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	vendor/lua/src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	vendor/lua/src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	vendor/lua/src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
iov	extstore.h	/^    struct iovec *iov; \/* alternatively, use this iovec *\/$/;"	m	struct:_obj_io	typeref:struct:_obj_io::iovec
iov	memcached.h	/^    struct iovec iov[MC_RESP_IOVCOUNT]; \/* built-in iovecs to simplify network code *\/$/;"	m	struct:_mc_resp	typeref:struct:_mc_resp::iovec
iov	proxy.h	/^    struct iovec iov[2]; \/\/ request string + tail buffer$/;"	m	struct:_io_pending_proxy_t	typeref:struct:_io_pending_proxy_t::iovec
iovbytes	proxy.h	/^    unsigned int iovbytes; \/\/ total bytes in the iovec$/;"	m	struct:_io_pending_proxy_t
iovcnt	extstore.h	/^    unsigned int iovcnt; \/* number of IOV's *\/$/;"	m	struct:_obj_io
iovcnt	memcached.h	/^    uint8_t iovcnt;$/;"	m	struct:_mc_resp
iovcnt	proxy.h	/^    int iovcnt; \/\/ 1 or 2...$/;"	m	struct:_io_pending_proxy_t
iovec_data	storage.c	/^    unsigned int iovec_data;  \/* specific index of data iovec *\/$/;"	m	struct:_io_pending_storage_t	file:
ipairsaux	vendor/lua/src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
isCint	vendor/lua/src/lcode.c	/^static int isCint (expdesc *e) {$/;"	f	file:
isIT	vendor/lua/src/lopcodes.h	383;"	d
isJ	vendor/lua/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx, isJ};  \/* basic instruction formats *\/$/;"	e	enum:OpMode
isKstr	vendor/lua/src/lcode.c	/^static int isKstr (FuncState *fs, expdesc *e) {$/;"	f	file:
isLfunction	vendor/lua/src/lobject.h	588;"	d
isLua	vendor/lua/src/lstate.h	236;"	d
isLuacode	vendor/lua/src/lstate.h	239;"	d
isOT	vendor/lua/src/lopcodes.h	378;"	d
isSCint	vendor/lua/src/lcode.c	/^static int isSCint (expdesc *e) {$/;"	f	file:
isSCnumber	vendor/lua/src/lcode.c	/^static int isSCnumber (expdesc *e, int *pi, int *isfloat) {$/;"	f	file:
is_await	proxy.h	/^    bool is_await; \/\/ are we an await object?$/;"	m	struct:_io_pending_proxy_t
is_external	crawler.h	/^    bool is_external; \/* whether this was an alloc local or remote to the module. *\/$/;"	m	struct:crawler_expired_data
is_numeric	scripts/damemtop	/^sub is_numeric {$/;"	s
is_paused	memcached.c	/^volatile bool is_paused;$/;"	v
is_running	t/lib/MemcachedTest.pm	/^sub is_running {$/;"	s
is_vararg	vendor/lua/src/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto
isabstkey	vendor/lua/src/lobject.h	190;"	d
isblack	vendor/lua/src/lgc.h	88;"	d
iscleared	vendor/lua/src/lgc.c	/^static int iscleared (global_State *g, const GCObject *o) {$/;"	f	file:
isclosed	vendor/lua/src/liolib.c	160;"	d	file:
iscollectable	vendor/lua/src/lobject.h	287;"	d
iscont	vendor/lua/src/lutf8lib.c	38;"	d	file:
isdead	vendor/lua/src/lgc.h	96;"	d
isdeadm	vendor/lua/src/lgc.h	95;"	d
isdecGCmodegen	vendor/lua/src/lgc.h	149;"	d
isdummy	vendor/lua/src/ltable.h	27;"	d
isempty	vendor/lua/src/lobject.h	204;"	d
isemptystr	vendor/lua/src/lvm.c	621;"	d	file:
isgray	vendor/lua/src/lgc.h	89;"	d
isinstack	vendor/lua/src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
isintwups	vendor/lua/src/lfunc.h	22;"	d
islittle	vendor/lua/src/lstrlib.c	/^  int islittle;$/;"	m	struct:Header	file:
isloop	vendor/lua/src/lparser.c	/^  lu_byte isloop;  \/* true if 'block' is a loop *\/$/;"	m	struct:BlockCnt	file:
isneg	vendor/lua/src/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
isnonstrictnil	vendor/lua/src/lobject.h	196;"	d
isold	vendor/lua/src/lgc.h	118;"	d
ispow2	vendor/lua/src/llimits.h	66;"	d
ispow2realasize	vendor/lua/src/ltable.c	/^static int ispow2realasize (const Table *t) {$/;"	f	file:
ispseudo	vendor/lua/src/lapi.c	50;"	d	file:
isrealasize	vendor/lua/src/lobject.h	719;"	d
isreserved	vendor/lua/src/lstring.h	35;"	d
issweepphase	vendor/lua/src/lgc.h	42;"	d
istailcall	vendor/lua/src/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug
isupvalue	vendor/lua/src/lapi.c	53;"	d	file:
isvalid	vendor/lua/src/lapi.c	46;"	d	file:
isvararg	vendor/lua/src/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug
iswhite	vendor/lua/src/lgc.h	87;"	d
it	assoc.c	/^    item *it;$/;"	m	struct:assoc_iterator	file:
it	items.c	/^    item *it;$/;"	m	struct:__anon11	file:
it	items.h	/^    item *it;$/;"	m	struct:lru_pull_tail_return
it_flags	logger.h	/^    uint16_t it_flags;$/;"	m	struct:logentry_eviction
it_flags	logger.h	/^    uint16_t it_flags;$/;"	m	struct:logentry_ext_write
it_flags	memcached.h	/^    uint16_t         it_flags;  \/* ITEM_* above. *\/$/;"	m	struct:_strchunk
it_flags	memcached.h	/^    uint16_t        it_flags;   \/* ITEM_* above *\/$/;"	m	struct:__anon108
it_flags	memcached.h	/^    uint16_t        it_flags;   \/* ITEM_* above *\/$/;"	m	struct:_stritem
item	memcached.h	/^    item *item; \/* item associated with this response object, with reference held *\/$/;"	m	struct:_mc_resp
item	memcached.h	/^    void   *item;     \/* for commands set\/add\/replace  *\/$/;"	m	struct:conn
item	memcached.h	/^} item;$/;"	t	typeref:struct:_stritem
item_alloc	thread.c	/^item *item_alloc(char *key, size_t nkey, int flags, rel_time_t exptime, int nbytes) {$/;"	f
item_cachedump	items.c	/^char *item_cachedump(const unsigned int slabs_clsid, const unsigned int limit, unsigned int *bytes) {$/;"	f
item_chunk	memcached.h	/^} item_chunk;$/;"	t	typeref:struct:_strchunk
item_crawl_hash	crawler.c	/^static void item_crawl_hash(void) {$/;"	f	file:
item_crawler_thread	crawler.c	/^static void *item_crawler_thread(void *arg) {$/;"	f	file:
item_crawler_tid	crawler.c	/^static pthread_t item_crawler_tid;$/;"	v	file:
item_free	items.c	/^void item_free(item *it) {$/;"	f
item_get	thread.c	/^item *item_get(const char *key, const size_t nkey, conn *c, const bool do_update) {$/;"	f
item_get_locked	thread.c	/^item *item_get_locked(const char *key, const size_t nkey, conn *c, const bool do_update, uint32_t *hv) {$/;"	f
item_hdr	memcached.h	/^} item_hdr;$/;"	t	typeref:struct:__anon109
item_is_flushed	items.c	/^int item_is_flushed(item *it) {$/;"	f
item_link	thread.c	/^int item_link(item *item) {$/;"	f
item_link_q	items.c	/^static void item_link_q(item *it) {$/;"	f	file:
item_link_q_warm	items.c	/^static void item_link_q_warm(item *it) {$/;"	f	file:
item_lock	thread.c	/^void item_lock(uint32_t hv) {$/;"	f
item_lock_count	thread.c	/^static uint32_t item_lock_count;$/;"	v	file:
item_lock_hashpower	thread.c	/^unsigned int item_lock_hashpower;$/;"	v
item_locks	thread.c	/^static pthread_mutex_t *item_locks;$/;"	v	file:
item_lru_bump_buf_create	items.c	/^void *item_lru_bump_buf_create(void) {$/;"	f
item_make_header	items.c	/^static size_t item_make_header(const uint8_t nkey, const unsigned int flags, const int nbytes,$/;"	f	file:
item_malloced	memcached.h	/^    bool item_malloced; \/** item for conn_nread state is a temporary malloc *\/$/;"	m	struct:conn
item_remove	thread.c	/^void item_remove(item *item) {$/;"	f
item_replace	thread.c	/^int item_replace(item *old_it, item *new_it, const uint32_t hv) {$/;"	f
item_size	slab_automove_extstore.c	/^    uint32_t item_size;$/;"	m	struct:__anon15	file:
item_size_max	memcached.h	/^    int item_size_max;        \/* Maximum item size *\/$/;"	m	struct:settings
item_size_ok	items.c	/^bool item_size_ok(const size_t nkey, const int flags, const int nbytes) {$/;"	f
item_stats	items.c	/^void item_stats(ADD_STAT add_stats, void *c) {$/;"	f
item_stats_automove	items.h	/^} item_stats_automove;$/;"	t	typeref:struct:__anon19
item_stats_reset	items.c	/^void item_stats_reset(void) {$/;"	f
item_stats_sizes	items.c	/^void item_stats_sizes(ADD_STAT add_stats, void *c) {$/;"	f
item_stats_sizes_add	items.c	/^void item_stats_sizes_add(item *it) {$/;"	f
item_stats_sizes_disable	items.c	/^void item_stats_sizes_disable(ADD_STAT add_stats, void *c) {$/;"	f
item_stats_sizes_enable	items.c	/^void item_stats_sizes_enable(ADD_STAT add_stats, void *c) {$/;"	f
item_stats_sizes_init	items.c	/^void item_stats_sizes_init(void) {$/;"	f
item_stats_sizes_remove	items.c	/^void item_stats_sizes_remove(item *it) {$/;"	f
item_stats_sizes_status	items.c	/^bool item_stats_sizes_status(void) {$/;"	f
item_stats_totals	items.c	/^void item_stats_totals(ADD_STAT add_stats, void *c) {$/;"	f
item_touch	thread.c	/^item *item_touch(const char *key, size_t nkey, uint32_t exptime, conn *c) {$/;"	f
item_trylock	thread.c	/^void *item_trylock(uint32_t hv) {$/;"	f
item_trylock_unlock	thread.c	/^void item_trylock_unlock(void *lock) {$/;"	f
item_unlink	thread.c	/^void item_unlink(item *item) {$/;"	f
item_unlink_q	items.c	/^static void item_unlink_q(item *it) {$/;"	f	file:
item_unlock	thread.c	/^void item_unlock(uint32_t hv) {$/;"	f
itemstats	items.c	/^static itemstats_t itemstats[LARGEST_ID];$/;"	v	file:
itemstats_t	items.c	/^} itemstats_t;$/;"	t	typeref:struct:__anon10	file:
iter_aux	vendor/lua/src/lutf8lib.c	/^static int iter_aux (lua_State *L, int strict) {$/;"	f	file:
iter_auxlax	vendor/lua/src/lutf8lib.c	/^static int iter_auxlax (lua_State *L) {$/;"	f	file:
iter_auxstrict	vendor/lua/src/lutf8lib.c	/^static int iter_auxstrict (lua_State *L) {$/;"	f	file:
iter_codes	vendor/lua/src/lutf8lib.c	/^static int iter_codes (lua_State *L) {$/;"	f	file:
itoa	itoa_ljust.c	/^static inline char* itoa(uint32_t u, char* p, int d, int n) {$/;"	f	file:
itoa_32	itoa_ljust.c	/^char* itoa_32(int32_t i, char* p) {$/;"	f
itoa_64	itoa_ljust.c	/^char* itoa_64(int64_t i, char* p) {$/;"	f
itoa_u32	itoa_ljust.c	/^char* itoa_u32(uint32_t u, char* p) {$/;"	f
itoa_u64	itoa_ljust.c	/^char* itoa_u64(uint64_t u, char* p) {$/;"	f
ival	vendor/lua/src/lparser.h	/^    lua_Integer ival;    \/* for VKINT *\/$/;"	m	union:expdesc::__anon35
ivalue	vendor/lua/src/lobject.h	320;"	d
ivalueraw	vendor/lua/src/lobject.h	323;"	d
iwthabs	vendor/lua/src/lparser.h	/^  lu_byte iwthabs;  \/* instructions issued since last absolute line info *\/$/;"	m	struct:FuncState
jenkins_hash	jenkins_hash.c	/^uint32_t jenkins_hash( const void *key, size_t length)$/;"	f
jenkins_hash	jenkins_hash.c	/^uint32_t jenkins_hash($/;"	f
jumponcond	vendor/lua/src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
jumpscopeerror	vendor/lua/src/lparser.c	/^static l_noret jumpscopeerror (LexState *ls, Labeldesc *gt) {$/;"	f	file:
k	vendor/lua/src/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto
k	vendor/lua/src/lparser.h	/^  TValue k;  \/* constant value (if any) *\/$/;"	m	union:Vardesc
k	vendor/lua/src/lparser.h	/^  expkind k;$/;"	m	struct:expdesc
k	vendor/lua/src/lstate.h	/^      lua_KFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon29::__anon31
kSecret	xxhash.h	3059;"	d
keepinvariant	vendor/lua/src/lgc.h	54;"	d
ketama_compare	proxy_ring_hash.c	/^static int ketama_compare(const void *p1, const void *p2) {$/;"	f	file:
ketama_get_server	proxy_ring_hash.c	/^static uint32_t ketama_get_server(uint64_t hash, void *ctx) {$/;"	f	file:
ketama_key_hash	proxy_ring_hash.c	/^static struct proxy_hash_func ketama_key_hash = {$/;"	v	typeref:struct:proxy_hash_func	file:
ketama_key_hasher	proxy_ring_hash.c	/^static uint64_t ketama_key_hasher(const void *key, size_t len, uint64_t seed) {$/;"	f	file:
ketama_md5_digest	proxy_ring_hash.c	/^static void ketama_md5_digest( char* inString, unsigned char md5pword[16] )$/;"	f	file:
ketama_new	proxy_ring_hash.c	/^static int ketama_new(lua_State *L) {$/;"	f	file:
ketama_t	proxy_ring_hash.c	/^} ketama_t;$/;"	t	typeref:struct:__anon98	file:
key	logger.h	/^    char key[];$/;"	m	struct:logentry_eviction
key	logger.h	/^    char key[];$/;"	m	struct:logentry_ext_write
key	logger.h	/^    char key[];$/;"	m	struct:logentry_item_get
key	logger.h	/^    char key[];$/;"	m	struct:logentry_item_store
key	t/stress-memcached.pl	/^sub key {$/;"	s
key	vendor/mcmc/mcmc.h	/^            char *key;$/;"	m	struct:__anon21::__anon22::__anon24
key_binary	proto_text.c	/^    unsigned int key_binary:1;$/;"	m	struct:_meta_flags	file:
key_filter	proxy.h	/^    key_hash_filter_func key_filter;$/;"	m	struct:mcp_pool_s
key_filter_conf	proxy.h	/^    char key_filter_conf[KEY_HASH_FILTER_MAX+1];$/;"	m	struct:mcp_pool_s
key_hash_filter_func	proxy.h	/^typedef const char *(*key_hash_filter_func)(const char *conf, const char *key, size_t klen, size_t *newlen);$/;"	t
key_hash_func	proxy.h	/^typedef uint64_t (*key_hash_func)(const void *key, size_t len, uint64_t seed);$/;"	t
key_hasher	proxy.h	/^    key_hash_func key_hasher;$/;"	m	struct:mcp_pool_s
key_tt	vendor/lua/src/lobject.h	/^    lu_byte key_tt;  \/* key type *\/$/;"	m	struct:Node::NodeKey
key_val	vendor/lua/src/lobject.h	/^    Value key_val;  \/* key value *\/$/;"	m	struct:Node::NodeKey
keyiscollectable	vendor/lua/src/lobject.h	751;"	d
keyisdead	vendor/lua/src/lobject.h	764;"	d
keyisinteger	vendor/lua/src/lobject.h	744;"	d
keyisnil	vendor/lua/src/lobject.h	743;"	d
keyisshrstr	vendor/lua/src/lobject.h	746;"	d
keyiswhite	vendor/lua/src/lgc.c	85;"	d	file:
keyival	vendor/lua/src/lobject.h	745;"	d
keylen	memcached.h	/^    int keylen;$/;"	m	struct:conn
keylen	protocol_binary.h	/^            uint16_t keylen;$/;"	m	struct:__anon65::__anon66
keylen	protocol_binary.h	/^            uint16_t keylen;$/;"	m	struct:__anon67::__anon68
keystrval	vendor/lua/src/lobject.h	747;"	d
keytoken	proxy.h	/^    uint8_t keytoken; \/\/ because GAT. sigh. also cmds without a key.$/;"	m	struct:mcp_parser_s
keytt	vendor/lua/src/lobject.h	740;"	d
keyval	vendor/lua/src/lobject.h	741;"	d
kill_msg	linux_priv.c	/^static char *kill_msg;$/;"	v	file:
kind	vendor/lua/src/lobject.h	/^  lu_byte kind;  \/* kind of corresponding variable *\/$/;"	m	struct:Upvaldesc
kind	vendor/lua/src/lparser.h	/^    lu_byte kind;$/;"	m	struct:Vardesc::__anon38
klen	proxy.h	/^    uint32_t klen; \/\/ length of key.$/;"	m	struct:mcp_parser_s
klen	vendor/mcmc/mcmc.h	/^            size_t klen;$/;"	m	struct:__anon21::__anon22::__anon24
kname	vendor/lua/src/ldebug.c	/^static void kname (const Proto *p, int c, const char **name) {$/;"	f	file:
l	memcached.h	/^    logger *l;                  \/* logger buffer *\/$/;"	m	struct:__anon110
l	vendor/lua/src/lmathlib.c	/^  lu_int32 l;  \/* lower half *\/$/;"	m	struct:Rand64	file:
l	vendor/lua/src/lobject.h	/^  LClosure l;$/;"	m	union:Closure
l	vendor/lua/src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	vendor/lua/src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l	vendor/lua/src/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon29	typeref:struct:CallInfo::__anon29::__anon30
l_G	vendor/lua/src/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State
l_addi	vendor/lua/src/lvm.c	873;"	d	file:
l_alloc	vendor/lua/src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_band	vendor/lua/src/lvm.c	876;"	d	file:
l_bor	vendor/lua/src/lvm.c	877;"	d	file:
l_bxor	vendor/lua/src/lvm.c	878;"	d	file:
l_castS2U	vendor/lua/src/llimits.h	139;"	d
l_castU2S	vendor/lua/src/llimits.h	148;"	d
l_checkmode	vendor/lua/src/liolib.c	/^static int l_checkmode (const char *mode) {$/;"	f	file:
l_checkmodep	vendor/lua/src/liolib.c	69;"	d	file:
l_checkmodep	vendor/lua/src/liolib.c	89;"	d	file:
l_checktime	vendor/lua/src/loslib.c	/^static time_t l_checktime (lua_State *L, int arg) {$/;"	f	file:
l_floatatt	vendor/lua/src/luaconf.h	429;"	d
l_floatatt	vendor/lua/src/luaconf.h	445;"	d
l_floatatt	vendor/lua/src/luaconf.h	460;"	d
l_floor	vendor/lua/src/luaconf.h	403;"	d
l_fseek	vendor/lua/src/liolib.c	122;"	d	file:
l_fseek	vendor/lua/src/liolib.c	130;"	d	file:
l_fseek	vendor/lua/src/liolib.c	137;"	d	file:
l_ftell	vendor/lua/src/liolib.c	123;"	d	file:
l_ftell	vendor/lua/src/liolib.c	131;"	d	file:
l_ftell	vendor/lua/src/liolib.c	138;"	d	file:
l_gei	vendor/lua/src/lvm.c	883;"	d	file:
l_getc	vendor/lua/src/liolib.c	102;"	d	file:
l_getc	vendor/lua/src/liolib.c	98;"	d	file:
l_gettime	vendor/lua/src/loslib.c	69;"	d	file:
l_gettime	vendor/lua/src/loslib.c	75;"	d	file:
l_gmtime	vendor/lua/src/loslib.c	88;"	d	file:
l_gmtime	vendor/lua/src/loslib.c	94;"	d	file:
l_gti	vendor/lua/src/lvm.c	882;"	d	file:
l_hashfloat	vendor/lua/src/ltable.c	/^static int l_hashfloat (lua_Number n) {$/;"	f	file:
l_inspectstat	vendor/lua/src/lauxlib.c	272;"	d	file:
l_inspectstat	vendor/lua/src/lauxlib.c	278;"	d	file:
l_intfitsf	vendor/lua/src/lvm.c	74;"	d	file:
l_intfitsf	vendor/lua/src/lvm.c	78;"	d	file:
l_isfalse	vendor/lua/src/lobject.h	234;"	d
l_lei	vendor/lua/src/lvm.c	881;"	d	file:
l_likely	vendor/lua/src/luaconf.h	685;"	d
l_localtime	vendor/lua/src/loslib.c	89;"	d	file:
l_localtime	vendor/lua/src/loslib.c	95;"	d	file:
l_lockfile	vendor/lua/src/liolib.c	103;"	d	file:
l_lockfile	vendor/lua/src/liolib.c	99;"	d	file:
l_lti	vendor/lua/src/lvm.c	880;"	d	file:
l_mathop	vendor/lua/src/luaconf.h	436;"	d
l_mathop	vendor/lua/src/luaconf.h	452;"	d
l_mathop	vendor/lua/src/luaconf.h	467;"	d
l_mathop	vendor/lua/src/luaconf.h	629;"	d
l_mathop	vendor/lua/src/luaconf.h	631;"	d
l_mem	vendor/lua/src/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_mem	vendor/lua/src/llimits.h	/^typedef long l_mem;$/;"	t
l_mem	vendor/lua/src/llimits.h	/^typedef ptrdiff_t l_mem;$/;"	t
l_message	vendor/lua/src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_muli	vendor/lua/src/lvm.c	875;"	d	file:
l_noret	vendor/lua/src/llimits.h	158;"	d
l_noret	vendor/lua/src/llimits.h	160;"	d
l_noret	vendor/lua/src/llimits.h	162;"	d
l_pclose	vendor/lua/src/liolib.c	60;"	d	file:
l_pclose	vendor/lua/src/liolib.c	65;"	d	file:
l_pclose	vendor/lua/src/liolib.c	80;"	d	file:
l_popen	vendor/lua/src/liolib.c	59;"	d	file:
l_popen	vendor/lua/src/liolib.c	64;"	d	file:
l_popen	vendor/lua/src/liolib.c	76;"	d	file:
l_print	vendor/lua/src/lua.c	/^static void l_print (lua_State *L) {$/;"	f	file:
l_pushtime	vendor/lua/src/loslib.c	68;"	d	file:
l_pushtime	vendor/lua/src/loslib.c	74;"	d	file:
l_randomizePivot	vendor/lua/src/ltablib.c	/^static unsigned int l_randomizePivot (void) {$/;"	f	file:
l_registry	vendor/lua/src/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State
l_seeknum	vendor/lua/src/liolib.c	124;"	d	file:
l_seeknum	vendor/lua/src/liolib.c	132;"	d	file:
l_seeknum	vendor/lua/src/liolib.c	139;"	d	file:
l_setbit	vendor/lua/src/lgc.h	65;"	d
l_signalT	vendor/lua/src/lstate.h	126;"	d
l_sprintf	vendor/lua/src/luaconf.h	586;"	d
l_sprintf	vendor/lua/src/luaconf.h	588;"	d
l_str2d	vendor/lua/src/lobject.c	/^static const char *l_str2d (const char *s, lua_Number *result) {$/;"	f	file:
l_str2dloc	vendor/lua/src/lobject.c	/^static const char *l_str2dloc (const char *s, lua_Number *result, int mode) {$/;"	f	file:
l_str2int	vendor/lua/src/lobject.c	/^static const char *l_str2int (const char *s, lua_Integer *result) {$/;"	f	file:
l_strcmp	vendor/lua/src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
l_strton	vendor/lua/src/lvm.c	/^static int l_strton (const TValue *obj, TValue *result) {$/;"	f	file:
l_subi	vendor/lua/src/lvm.c	874;"	d	file:
l_timet	vendor/lua/src/loslib.c	67;"	d	file:
l_timet	vendor/lua/src/loslib.c	73;"	d	file:
l_uacInt	vendor/lua/src/llimits.h	/^typedef LUAI_UACINT l_uacInt;$/;"	t
l_uacNumber	vendor/lua/src/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
l_uint32	vendor/lua/src/llimits.h	/^typedef unsigned int l_uint32;$/;"	t
l_uint32	vendor/lua/src/llimits.h	/^typedef unsigned long l_uint32;$/;"	t
l_unlikely	vendor/lua/src/luaconf.h	686;"	d
l_unlockfile	vendor/lua/src/liolib.c	100;"	d	file:
l_unlockfile	vendor/lua/src/liolib.c	104;"	d	file:
la	proto_text.c	/^    unsigned int la :1;$/;"	m	struct:_meta_flags	file:
label	vendor/lua/src/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata
labelstat	vendor/lua/src/lparser.c	/^static void labelstat (LexState *ls, TString *name, int line) {$/;"	f	file:
laction	vendor/lua/src/lua.c	/^static void laction (int i) {$/;"	f	file:
lapi_c	vendor/lua/src/lapi.c	7;"	d	file:
lapi_h	vendor/lua/src/lapi.h	8;"	d
large_len	xxhash.h	/^   XXH32_hash_t large_len;    \/*!< Whether the hash is >= 16 (handles @ref total_len_32 overflow) *\/$/;"	m	struct:XXH32_state_s
last_cmd_time	memcached.h	/^    rel_time_t last_cmd_time;$/;"	m	struct:conn
last_io_thread	extstore.c	/^    unsigned int last_io_thread; \/* round robin the IO threads *\/$/;"	m	struct:store_engine	file:
last_sys_error	vendor/mcmc/mcmc.c	/^    int last_sys_error; \/\/ last syscall error (connect\/etc?)$/;"	m	struct:mcmc_ctx	file:
last_thread	thread.c	/^static int last_thread = -1;$/;"	v	file:
last_thread_by_napi_id	thread.c	/^static int last_thread_by_napi_id = -1;$/;"	v	file:
lastatomic	vendor/lua/src/lstate.h	/^  lu_mem lastatomic;  \/* see function 'genstep' in file 'lgc.c' *\/$/;"	m	struct:global_State
lastfile	queue.h	/^	const char	*lastfile;$/;"	m	struct:qm_trace
lastfree	vendor/lua/src/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table
lastlevel	vendor/lua/src/lauxlib.c	/^static int lastlevel (lua_State *L) {$/;"	f	file:
lastline	queue.h	/^	unsigned long	 lastline;$/;"	m	struct:qm_trace
lastline	vendor/lua/src/llex.h	/^  int lastline;  \/* line of last token 'consumed' *\/$/;"	m	struct:LexState
lastlinedefined	vendor/lua/src/lobject.h	/^  int lastlinedefined;  \/* debug information  *\/$/;"	m	struct:Proto
lastlinedefined	vendor/lua/src/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lastlistfield	vendor/lua/src/lparser.c	/^static void lastlistfield (FuncState *fs, ConsControl *cc) {$/;"	f	file:
lastmatch	vendor/lua/src/lstrlib.c	/^  const char *lastmatch;  \/* end of last match *\/$/;"	m	struct:GMatchState	file:
lasttarget	vendor/lua/src/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState
latime	logger.h	/^    uint32_t latime;$/;"	m	struct:logentry_eviction
latime	logger.h	/^    uint32_t latime;$/;"	m	struct:logentry_ext_write
lauxlib_c	vendor/lua/src/lauxlib.c	7;"	d	file:
lauxlib_h	vendor/lua/src/lauxlib.h	9;"	d
lbaselib_c	vendor/lua/src/lbaselib.c	7;"	d	file:
lcode_c	vendor/lua/src/lcode.c	7;"	d	file:
lcode_h	vendor/lua/src/lcode.h	8;"	d
lcorolib_c	vendor/lua/src/lcorolib.c	7;"	d	file:
lctype_c	vendor/lua/src/lctype.c	7;"	d	file:
lctype_h	vendor/lua/src/lctype.h	8;"	d
ldblib_c	vendor/lua/src/ldblib.c	7;"	d	file:
ldebug_c	vendor/lua/src/ldebug.c	7;"	d	file:
ldebug_h	vendor/lua/src/ldebug.h	8;"	d
ldo_c	vendor/lua/src/ldo.c	7;"	d	file:
ldo_h	vendor/lua/src/ldo.h	8;"	d
ldump_c	vendor/lua/src/ldump.c	7;"	d	file:
leaveblock	vendor/lua/src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	vendor/lua/src/lparser.c	495;"	d	file:
left	vendor/lua/src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon48	file:
len	extstore.h	/^    unsigned int len;     \/* for both modes *\/$/;"	m	struct:_obj_io
len	vendor/lua/src/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata
len	vendor/lua/src/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata0
len	vendor/lua/src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon40	file:
length	proto_text.c	/^    size_t length;$/;"	m	struct:token_s	file:
lessequalothers	vendor/lua/src/lvm.c	/^static int lessequalothers (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
lessthanothers	vendor/lua/src/lvm.c	/^static int lessthanothers (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	file:
level	vendor/lua/src/ldo.c	/^  StkId level;$/;"	m	struct:CloseP	file:
level	vendor/lua/src/lstrlib.c	/^  unsigned char level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	vendor/lua/src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lfunc_c	vendor/lua/src/lfunc.c	7;"	d	file:
lfunc_h	vendor/lua/src/lfunc.h	8;"	d
lgc_c	vendor/lua/src/lgc.c	7;"	d	file:
lgc_h	vendor/lua/src/lgc.h	8;"	d
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	doc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	doc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
library	vendor/lua/doc/contents.html	/^<H3><A NAME="library">standard library<\/A><\/H3>$/;"	a
license	vendor/lua/doc/readme.html	/^<H2><A NAME="license">License<\/A><\/H2>$/;"	a
likely	memcached.h	1069;"	d
limit	cache.h	/^    int limit;$/;"	m	struct:__anon20
limitasasize	vendor/lua/src/ltable.c	279;"	d	file:
limited_get	memcached.c	/^item* limited_get(char *key, size_t nkey, conn *c, uint32_t exptime, bool should_touch, bool do_update, bool *overflow) {$/;"	f
limited_get_locked	memcached.c	/^item* limited_get_locked(char *key, size_t nkey, conn *c, bool do_update, uint32_t *hv, bool *overflow) {$/;"	f
limitequalsasize	vendor/lua/src/ltable.c	235;"	d	file:
line	restart.c	/^    char *line;$/;"	m	struct:__anon17	file:
line	vendor/lua/src/lobject.h	/^  int line;$/;"	m	struct:AbsLineInfo
line	vendor/lua/src/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc
linedefined	vendor/lua/src/lobject.h	/^  int linedefined;  \/* debug information  *\/$/;"	m	struct:Proto
linedefined	vendor/lua/src/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug
lineinfo	vendor/lua/src/lobject.h	/^  ls_byte *lineinfo;  \/* information about source lines (debug information) *\/$/;"	m	struct:Proto
linenumber	vendor/lua/src/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState
linit_c	vendor/lua/src/linit.c	8;"	d	file:
linkgclist	vendor/lua/src/lgc.c	146;"	d	file:
linkgclist_	vendor/lua/src/lgc.c	/^static void linkgclist_ (GCObject *o, GCObject **pnext, GCObject **list) {$/;"	f	file:
linkobjgclist	vendor/lua/src/lgc.c	159;"	d	file:
liolib_c	vendor/lua/src/liolib.c	7;"	d	file:
lisdigit	vendor/lua/src/lctype.h	59;"	d
lislalnum	vendor/lua/src/lctype.h	58;"	d
lislalpha	vendor/lua/src/lctype.h	57;"	d
lisprint	vendor/lua/src/lctype.h	61;"	d
lisspace	vendor/lua/src/lctype.h	60;"	d
list_mechs	t/binary-sasl.t	/^sub list_mechs {$/;"	s
list_size	slabs.c	/^    unsigned int list_size; \/* size of prev array *\/$/;"	m	struct:__anon100	file:
listen_conn	memcached.c	/^static conn *listen_conn = NULL;$/;"	v	file:
listen_disabled_num	memcached.h	/^    uint64_t      listen_disabled_num;$/;"	m	struct:stats
listfield	vendor/lua/src/lparser.c	/^static void listfield (LexState *ls, ConsControl *cc) {$/;"	f	file:
listing	vendor/lua/src/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
lisxdigit	vendor/lua/src/lctype.h	62;"	d
little	vendor/lua/src/lstrlib.c	/^  char little;  \/* true iff machine is little endian *\/$/;"	m	union:__anon41	file:
ll_funcs	vendor/lua/src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_loadlib	vendor/lua/src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_require	vendor/lua/src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	vendor/lua/src/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
llex	vendor/lua/src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	vendor/lua/src/llex.c	7;"	d	file:
llex_h	vendor/lua/src/llex.h	8;"	d
llimits_h	vendor/lua/src/llimits.h	8;"	d
lmathlib_c	vendor/lua/src/lmathlib.c	7;"	d	file:
lmem_c	vendor/lua/src/lmem.c	7;"	d	file:
lmem_h	vendor/lua/src/lmem.h	8;"	d
lmemfind	vendor/lua/src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
lmod	vendor/lua/src/lobject.h	773;"	d
lnglen	vendor/lua/src/lobject.h	/^    size_t lnglen;  \/* length for long strings *\/$/;"	m	union:TString::__anon51
loadBlock	vendor/lua/src/lundump.c	/^static void loadBlock (LoadState *S, void *b, size_t size) {$/;"	f	file:
loadByte	vendor/lua/src/lundump.c	/^static lu_byte loadByte (LoadState *S) {$/;"	f	file:
loadCode	vendor/lua/src/lundump.c	/^static void loadCode (LoadState *S, Proto *f) {$/;"	f	file:
loadConstants	vendor/lua/src/lundump.c	/^static void loadConstants (LoadState *S, Proto *f) {$/;"	f	file:
loadDebug	vendor/lua/src/lundump.c	/^static void loadDebug (LoadState *S, Proto *f) {$/;"	f	file:
loadFunction	vendor/lua/src/lundump.c	/^static void loadFunction (LoadState *S, Proto *f, TString *psource) {$/;"	f	file:
loadInt	vendor/lua/src/lundump.c	/^static int loadInt (LoadState *S) {$/;"	f	file:
loadInteger	vendor/lua/src/lundump.c	/^static lua_Integer loadInteger (LoadState *S) {$/;"	f	file:
loadNumber	vendor/lua/src/lundump.c	/^static lua_Number loadNumber (LoadState *S) {$/;"	f	file:
loadProtos	vendor/lua/src/lundump.c	/^static void loadProtos (LoadState *S, Proto *f) {$/;"	f	file:
loadSize	vendor/lua/src/lundump.c	/^static size_t loadSize (LoadState *S) {$/;"	f	file:
loadString	vendor/lua/src/lundump.c	/^static TString *loadString (LoadState *S, Proto *p) {$/;"	f	file:
loadStringN	vendor/lua/src/lundump.c	/^static TString *loadStringN (LoadState *S, Proto *p) {$/;"	f	file:
loadUnsigned	vendor/lua/src/lundump.c	/^static size_t loadUnsigned (LoadState *S, size_t limit) {$/;"	f	file:
loadUpvalues	vendor/lua/src/lundump.c	/^static void loadUpvalues (LoadState *S, Proto *f) {$/;"	f	file:
loadVar	vendor/lua/src/lundump.c	58;"	d	file:
loadVector	vendor/lua/src/lundump.c	50;"	d	file:
load_aux	vendor/lua/src/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
load_config	scripts/damemtop	/^sub load_config {$/;"	s
load_server_certificates	tls.c	/^static bool load_server_certificates(char **errmsg) {$/;"	f	file:
loadedlibs	vendor/lua/src/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	vendor/lua/src/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib_c	vendor/lua/src/loadlib.c	11;"	d	file:
loadline	vendor/lua/src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	vendor/lua/src/lobject.c	7;"	d	file:
lobject_h	vendor/lua/src/lobject.h	9;"	d
local routetop 	t/startfile.lua	/^    local routetop = prefix_factory("^\/(%a+)\/", prefixes, function(r) return "SERVER_ERROR no route\\r\\n" end)$/;"	f
local_transport	memcached.h	/^    local_transport, \/* Unix sockets*\/$/;"	e	enum:network_transport
localdebuginfo	vendor/lua/src/lparser.c	/^static LocVar *localdebuginfo (FuncState *fs, int vidx) {$/;"	f	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	doc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localfunc	vendor/lua/src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	vendor/lua/src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	doc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locations	sasl_defs.c	/^const char * const locations[] = {$/;"	v
locations_dir_path	sasl_defs.c	/^const char *const locations_dir_path[] = {$/;"	v
locations_file_path	sasl_defs.c	/^const char *const locations_file_path[] = {$/;"	v
lock	crawler.h	/^    pthread_mutex_t lock;$/;"	m	struct:crawler_expired_data
lock	proxy.h	/^    pthread_mutex_t lock; \/\/ protects refcount.$/;"	m	struct:mcp_pool_s
lock	storage.c	/^    pthread_mutex_t lock; \/\/ gates the bools.$/;"	m	struct:storage_compact_wrap	file:
lock	thread.c	/^    pthread_mutex_t lock;$/;"	m	struct:conn_queue	file:
locked	proto_text.c	/^    unsigned int locked :1;$/;"	m	struct:_meta_flags	file:
locvars	vendor/lua/src/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto
log2maxs	vendor/lua/src/llimits.h	60;"	d
log_cb	logger.h	/^    entry_log_cb log_cb;$/;"	m	struct:_entry_details
log_entry_type	logger.h	/^enum log_entry_type {$/;"	g
log_watcher_sent	memcached.h	/^    uint64_t      log_watcher_sent; \/* logs sent to watcher buffers *\/$/;"	m	struct:stats
log_watcher_skipped	memcached.h	/^    uint64_t      log_watcher_skipped; \/* logs watchers missed *\/$/;"	m	struct:stats
log_watchers	memcached.h	/^    unsigned int  log_watchers; \/* number of currently active watchers *\/$/;"	m	struct:stats_state
log_worker_dropped	memcached.h	/^    uint64_t      log_worker_dropped; \/* logs dropped by worker threads *\/$/;"	m	struct:stats
log_worker_written	memcached.h	/^    uint64_t      log_worker_written; \/* logs written by worker threads *\/$/;"	m	struct:stats
logentry	logger.h	/^typedef struct _logentry logentry;$/;"	t	typeref:struct:_logentry
logentry_conn_event	logger.h	/^struct logentry_conn_event {$/;"	s
logentry_eviction	logger.h	/^struct logentry_eviction {$/;"	s
logentry_ext_write	logger.h	/^struct logentry_ext_write {$/;"	s
logentry_item_get	logger.h	/^struct logentry_item_get {$/;"	s
logentry_item_store	logger.h	/^struct logentry_item_store {$/;"	s
logentry_proxy_req	logger.h	/^struct logentry_proxy_req {$/;"	s
logger	logger.h	/^} logger;$/;"	t	typeref:struct:_logger
logger_add_watcher	logger.c	/^enum logger_add_watcher_ret logger_add_watcher(void *c, const int sfd, uint16_t f) {$/;"	f
logger_add_watcher_ret	logger.h	/^enum logger_add_watcher_ret {$/;"	g
logger_atomics_mutex	logger.c	/^pthread_mutex_t logger_atomics_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v
logger_buf_size	memcached.h	/^    unsigned int logger_buf_size; \/* size of per-thread logger buffer *\/$/;"	m	struct:settings
logger_count	logger.c	/^static unsigned int logger_count = 0;$/;"	v	file:
logger_create	logger.c	/^logger *logger_create(void) {$/;"	f
logger_get_gid	logger.c	/^uint64_t logger_get_gid(void) {$/;"	f
logger_gid	logger.c	/^static uint64_t logger_gid = 0;$/;"	v	file:
logger_init	logger.c	/^void logger_init(void) {$/;"	f
logger_key	logger.c	/^pthread_key_t logger_key;$/;"	v
logger_link_q	logger.c	/^static void logger_link_q(logger *l) {$/;"	f	file:
logger_log	logger.c	/^enum logger_ret_type logger_log(logger *l, const enum log_entry_type event, const void *entry, ...) {$/;"	f
logger_parse_entry_ret	logger.h	/^enum logger_parse_entry_ret {$/;"	g
logger_ret_type	logger.h	/^enum logger_ret_type {$/;"	g
logger_set_flags	logger.c	/^static void logger_set_flags(void) {$/;"	f	file:
logger_set_gid	logger.c	/^void logger_set_gid(uint64_t gid) {$/;"	f
logger_stack_cond	logger.c	/^pthread_cond_t logger_stack_cond = PTHREAD_COND_INITIALIZER;$/;"	v
logger_stack_head	logger.c	/^static logger *logger_stack_head = NULL;$/;"	v	file:
logger_stack_lock	logger.c	/^pthread_mutex_t logger_stack_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
logger_stack_tail	logger.c	/^static logger *logger_stack_tail = NULL;$/;"	v	file:
logger_stats	logger.h	/^struct logger_stats {$/;"	s
logger_stop	logger.c	/^void logger_stop(void) {$/;"	f
logger_thread	logger.c	/^static void *logger_thread(void *arg) {$/;"	f	file:
logger_thread_close_watcher	logger.c	/^static void logger_thread_close_watcher(logger_watcher *w) {$/;"	f	file:
logger_thread_flush_stats	logger.c	/^static void logger_thread_flush_stats(struct logger_stats *ls) {$/;"	f	file:
logger_thread_parse_entry	logger.c	/^static enum logger_parse_entry_ret logger_thread_parse_entry(logentry *e, struct logger_stats *ls,$/;"	f	file:
logger_thread_poll_watchers	logger.c	/^static int logger_thread_poll_watchers(int force_poll, int watcher) {$/;"	f	file:
logger_thread_read	logger.c	/^static int logger_thread_read(logger *l, struct logger_stats *ls) {$/;"	f	file:
logger_thread_write_entry	logger.c	/^static void logger_thread_write_entry(logentry *e, struct logger_stats *ls,$/;"	f	file:
logger_tid	logger.c	/^static pthread_t logger_tid;$/;"	v	file:
logger_watcher	logger.h	/^} logger_watcher;$/;"	t	typeref:struct:__anon60
logger_watcher_buf_size	memcached.h	/^    unsigned int logger_watcher_buf_size; \/* size of logger's per-watcher buffer *\/$/;"	m	struct:settings
logger_watcher_type	logger.h	/^enum logger_watcher_type {$/;"	g
lookahead	vendor/lua/src/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState
lookforfunc	vendor/lua/src/loadlib.c	/^static int lookforfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
lookuphost	testapp.c	/^static struct addrinfo *lookuphost(const char *hostname, in_port_t port)$/;"	f	file:
lopcodes_c	vendor/lua/src/lopcodes.c	7;"	d	file:
lopcodes_h	vendor/lua/src/lopcodes.h	8;"	d
lopnames_h	vendor/lua/src/lopnames.h	8;"	d
loslib_c	vendor/lua/src/loslib.c	7;"	d	file:
low64	xxhash.h	/^    XXH64_hash_t low64;   \/*!< `value & 0xFFFFFFFFFFFFFFFF` *\/$/;"	m	struct:__anon4
lparser_c	vendor/lua/src/lparser.c	7;"	d	file:
lparser_h	vendor/lua/src/lparser.h	8;"	d
lprefix_h	vendor/lua/src/lprefix.h	8;"	d
lru_bump_async	items.c	/^static bool lru_bump_async(lru_bump_buf *b, item *it, uint32_t hv) {$/;"	f	file:
lru_bump_buf	items.c	/^} lru_bump_buf;$/;"	t	typeref:struct:_lru_bump_buf	file:
lru_bump_buf	memcached.h	/^    void *lru_bump_buf;         \/* async LRU bump buffer *\/$/;"	m	struct:__anon110
lru_bump_buf_link_q	items.c	/^static void lru_bump_buf_link_q(lru_bump_buf *b) {$/;"	f	file:
lru_bump_entry	items.c	/^} lru_bump_entry;$/;"	t	typeref:struct:__anon11	file:
lru_crawler	memcached.h	/^    bool lru_crawler;        \/* Whether or not to enable the autocrawler thread *\/$/;"	m	struct:settings
lru_crawler_class_done	crawler.c	/^static void lru_crawler_class_done(int i) {$/;"	f	file:
lru_crawler_client_getbuf	crawler.c	/^static int lru_crawler_client_getbuf(crawler_client_t *c) {$/;"	f	file:
lru_crawler_close_client	crawler.c	/^static void lru_crawler_close_client(crawler_client_t *c) {$/;"	f	file:
lru_crawler_cond	crawler.c	/^static pthread_cond_t  lru_crawler_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
lru_crawler_crawl	crawler.c	/^enum crawler_result_type lru_crawler_crawl(char *slabs, const enum crawler_run_type type,$/;"	f
lru_crawler_initialized	crawler.c	/^static int lru_crawler_initialized = 0;$/;"	v	file:
lru_crawler_lock	crawler.c	/^static pthread_mutex_t lru_crawler_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
lru_crawler_pause	crawler.c	/^void lru_crawler_pause(void) {$/;"	f
lru_crawler_poll	crawler.c	/^static int lru_crawler_poll(crawler_client_t *c) {$/;"	f	file:
lru_crawler_release_client	crawler.c	/^static void lru_crawler_release_client(crawler_client_t *c) {$/;"	f	file:
lru_crawler_resume	crawler.c	/^void lru_crawler_resume(void) {$/;"	f
lru_crawler_running	memcached.h	/^    bool          lru_crawler_running; \/* crawl in progress *\/$/;"	m	struct:stats_state
lru_crawler_set_client	crawler.c	/^static int lru_crawler_set_client(crawler_module_t *cm, void *c, const int sfd) {$/;"	f	file:
lru_crawler_sleep	memcached.h	/^    int lru_crawler_sleep;  \/* Microsecond sleep between items *\/$/;"	m	struct:settings
lru_crawler_start	crawler.c	/^int lru_crawler_start(uint8_t *ids, uint32_t remaining,$/;"	f
lru_crawler_starts	memcached.h	/^    uint64_t      lru_crawler_starts; \/* Number of item crawlers kicked off *\/$/;"	m	struct:stats
lru_crawler_tocrawl	memcached.h	/^    uint32_t lru_crawler_tocrawl; \/* Number of items to crawl per run *\/$/;"	m	struct:settings
lru_hits	memcached.h	/^    uint64_t lru_hits[POWER_LARGEST];$/;"	m	struct:thread_stats
lru_locks	thread.c	/^pthread_mutex_t lru_locks[POWER_LARGEST];$/;"	v
lru_maintainer_bumps	items.c	/^static bool lru_maintainer_bumps(void) {$/;"	f	file:
lru_maintainer_crawler_check	items.c	/^static void lru_maintainer_crawler_check(struct crawler_expired_data *cdata, logger *l) {$/;"	f	file:
lru_maintainer_initialized	items.c	/^static int lru_maintainer_initialized = 0;$/;"	v	file:
lru_maintainer_juggle	items.c	/^static int lru_maintainer_juggle(const int slabs_clsid) {$/;"	f	file:
lru_maintainer_juggles	memcached.h	/^    uint64_t      lru_maintainer_juggles; \/* number of LRU bg pokes *\/$/;"	m	struct:stats
lru_maintainer_lock	items.c	/^static pthread_mutex_t lru_maintainer_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
lru_maintainer_pause	items.c	/^void lru_maintainer_pause(void) {$/;"	f
lru_maintainer_resume	items.c	/^void lru_maintainer_resume(void) {$/;"	f
lru_maintainer_thread	items.c	/^static void *lru_maintainer_thread(void *arg) {$/;"	f	file:
lru_maintainer_thread	memcached.h	/^    bool lru_maintainer_thread; \/* LRU maintainer background thread *\/$/;"	m	struct:settings
lru_maintainer_tid	items.c	/^static pthread_t lru_maintainer_tid;$/;"	v	file:
lru_pull_tail	items.c	/^int lru_pull_tail(const int orig_id, const int cur_lru,$/;"	f
lru_pull_tail_return	items.h	/^struct lru_pull_tail_return {$/;"	s
lru_segmented	memcached.h	/^    bool lru_segmented;     \/* Use split or flat LRU's *\/$/;"	m	struct:settings
lru_total_bumps_dropped	items.c	/^static uint64_t lru_total_bumps_dropped(void) {$/;"	f	file:
lru_type_map	items.c	/^static unsigned int lru_type_map[4] = {HOT_LRU, WARM_LRU, COLD_LRU, TEMP_LRU};$/;"	v	file:
lrutail_reflocked	items.c	/^    uint64_t lrutail_reflocked;$/;"	m	struct:__anon10	file:
ls	vendor/lua/src/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState
ls_byte	vendor/lua/src/llimits.h	/^typedef signed char ls_byte;$/;"	t
lsizenode	vendor/lua/src/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of 'node' array *\/$/;"	m	struct:Table
lstate_c	vendor/lua/src/lstate.c	7;"	d	file:
lstate_h	vendor/lua/src/lstate.h	8;"	d
lstop	vendor/lua/src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	vendor/lua/src/lstring.c	7;"	d	file:
lstring_h	vendor/lua/src/lstring.h	8;"	d
lstrlib_c	vendor/lua/src/lstrlib.c	7;"	d	file:
lsys_load	vendor/lua/src/loadlib.c	/^static void *lsys_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
lsys_sym	vendor/lua/src/loadlib.c	/^static lua_CFunction lsys_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
lsys_unloadlib	vendor/lua/src/loadlib.c	/^static void lsys_unloadlib (void *lib) {$/;"	f	file:
ltable_c	vendor/lua/src/ltable.c	7;"	d	file:
ltable_h	vendor/lua/src/ltable.h	8;"	d
ltablib_c	vendor/lua/src/ltablib.c	7;"	d	file:
ltm_c	vendor/lua/src/ltm.c	7;"	d	file:
ltm_h	vendor/lua/src/ltm.h	8;"	d
ltolower	vendor/lua/src/lctype.h	71;"	d
lu_byte	vendor/lua/src/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_int32	vendor/lua/src/lmathlib.c	/^typedef unsigned int lu_int32;$/;"	t	file:
lu_int32	vendor/lua/src/lmathlib.c	/^typedef unsigned long lu_int32;$/;"	t	file:
lu_mem	vendor/lua/src/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
lu_mem	vendor/lua/src/llimits.h	/^typedef size_t lu_mem;$/;"	t
lu_mem	vendor/lua/src/llimits.h	/^typedef unsigned long lu_mem;$/;"	t
luaB_assert	vendor/lua/src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	vendor/lua/src/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_close	vendor/lua/src/lcorolib.c	/^static int luaB_close (lua_State *L) {$/;"	f	file:
luaB_cocreate	vendor/lua/src/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	vendor/lua/src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	vendor/lua/src/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	vendor/lua/src/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	vendor/lua/src/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	vendor/lua/src/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	vendor/lua/src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	vendor/lua/src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	vendor/lua/src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	vendor/lua/src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	vendor/lua/src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	vendor/lua/src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	vendor/lua/src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_pairs	vendor/lua/src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	vendor/lua/src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	vendor/lua/src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	vendor/lua/src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	vendor/lua/src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	vendor/lua/src/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	vendor/lua/src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	vendor/lua/src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	vendor/lua/src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	vendor/lua/src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	vendor/lua/src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	vendor/lua/src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_warn	vendor/lua/src/lbaselib.c	/^static int luaB_warn (lua_State *L) {$/;"	f	file:
luaB_xpcall	vendor/lua/src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	vendor/lua/src/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaB_yieldable	vendor/lua/src/lcorolib.c	/^static int luaB_yieldable (lua_State *L) {$/;"	f	file:
luaC_barrier	vendor/lua/src/lgc.h	165;"	d
luaC_barrier_	vendor/lua/src/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback	vendor/lua/src/lgc.h	169;"	d
luaC_barrierback_	vendor/lua/src/lgc.c	/^void luaC_barrierback_ (lua_State *L, GCObject *o) {$/;"	f
luaC_changemode	vendor/lua/src/lgc.c	/^void luaC_changemode (lua_State *L, int newmode) {$/;"	f
luaC_checkGC	vendor/lua/src/lgc.h	162;"	d
luaC_checkfinalizer	vendor/lua/src/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_condGC	vendor/lua/src/lgc.h	157;"	d
luaC_fix	vendor/lua/src/lgc.c	/^void luaC_fix (lua_State *L, GCObject *o) {$/;"	f
luaC_freeallobjects	vendor/lua/src/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	vendor/lua/src/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	vendor/lua/src/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz) {$/;"	f
luaC_objbarrier	vendor/lua/src/lgc.h	173;"	d
luaC_runtilstate	vendor/lua/src/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	vendor/lua/src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaC_white	vendor/lua/src/lgc.h	102;"	d
luaD_call	vendor/lua/src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_callnoyield	vendor/lua/src/ldo.c	/^void luaD_callnoyield (lua_State *L, StkId func, int nResults) {$/;"	f
luaD_checkstack	vendor/lua/src/ldo.h	31;"	d
luaD_checkstackaux	vendor/lua/src/ldo.h	25;"	d
luaD_closeprotected	vendor/lua/src/ldo.c	/^int luaD_closeprotected (lua_State *L, ptrdiff_t level, int status) {$/;"	f
luaD_growstack	vendor/lua/src/ldo.c	/^int luaD_growstack (lua_State *L, int n, int raiseerror) {$/;"	f
luaD_hook	vendor/lua/src/ldo.c	/^void luaD_hook (lua_State *L, int event, int line,$/;"	f
luaD_hookcall	vendor/lua/src/ldo.c	/^void luaD_hookcall (lua_State *L, CallInfo *ci) {$/;"	f
luaD_inctop	vendor/lua/src/ldo.c	/^void luaD_inctop (lua_State *L) {$/;"	f
luaD_pcall	vendor/lua/src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	vendor/lua/src/ldo.c	/^void luaD_poscall (lua_State *L, CallInfo *ci, int nres) {$/;"	f
luaD_precall	vendor/lua/src/ldo.c	/^CallInfo *luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_pretailcall	vendor/lua/src/ldo.c	/^void luaD_pretailcall (lua_State *L, CallInfo *ci, StkId func, int narg1) {$/;"	f
luaD_protectedparser	vendor/lua/src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	vendor/lua/src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	vendor/lua/src/ldo.c	/^int luaD_reallocstack (lua_State *L, int newsize, int raiseerror) {$/;"	f
luaD_seterrorobj	vendor/lua/src/ldo.c	/^void luaD_seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f
luaD_shrinkstack	vendor/lua/src/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	vendor/lua/src/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaD_tryfuncTM	vendor/lua/src/ldo.c	/^void luaD_tryfuncTM (lua_State *L, StkId func) {$/;"	f
luaE_checkcstack	vendor/lua/src/lstate.c	/^void luaE_checkcstack (lua_State *L) {$/;"	f
luaE_extendCI	vendor/lua/src/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	vendor/lua/src/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	vendor/lua/src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_incCstack	vendor/lua/src/lstate.c	/^LUAI_FUNC void luaE_incCstack (lua_State *L) {$/;"	f
luaE_resetthread	vendor/lua/src/lstate.c	/^int luaE_resetthread (lua_State *L, int status) {$/;"	f
luaE_setdebt	vendor/lua/src/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaE_shrinkCI	vendor/lua/src/lstate.c	/^void luaE_shrinkCI (lua_State *L) {$/;"	f
luaE_warnerror	vendor/lua/src/lstate.c	/^void luaE_warnerror (lua_State *L, const char *where) {$/;"	f
luaE_warning	vendor/lua/src/lstate.c	/^void luaE_warning (lua_State *L, const char *msg, int tocont) {$/;"	f
luaF_close	vendor/lua/src/lfunc.c	/^void luaF_close (lua_State *L, StkId level, int status, int yy) {$/;"	f
luaF_closeupval	vendor/lua/src/lfunc.c	/^void luaF_closeupval (lua_State *L, StkId level) {$/;"	f
luaF_findupval	vendor/lua/src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	vendor/lua/src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_getlocalname	vendor/lua/src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_initupvals	vendor/lua/src/lfunc.c	/^void luaF_initupvals (lua_State *L, LClosure *cl) {$/;"	f
luaF_newCclosure	vendor/lua/src/lfunc.c	/^CClosure *luaF_newCclosure (lua_State *L, int nupvals) {$/;"	f
luaF_newLclosure	vendor/lua/src/lfunc.c	/^LClosure *luaF_newLclosure (lua_State *L, int nupvals) {$/;"	f
luaF_newproto	vendor/lua/src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newtbcupval	vendor/lua/src/lfunc.c	/^void luaF_newtbcupval (lua_State *L, StkId level) {$/;"	f
luaF_unlinkupval	vendor/lua/src/lfunc.c	/^void luaF_unlinkupval (UpVal *uv) {$/;"	f
luaG_addinfo	vendor/lua/src/ldebug.c	/^const char *luaG_addinfo (lua_State *L, const char *msg, TString *src,$/;"	f
luaG_callerror	vendor/lua/src/ldebug.c	/^l_noret luaG_callerror (lua_State *L, const TValue *o) {$/;"	f
luaG_concaterror	vendor/lua/src/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_errormsg	vendor/lua/src/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_findlocal	vendor/lua/src/ldebug.c	/^const char *luaG_findlocal (lua_State *L, CallInfo *ci, int n, StkId *pos) {$/;"	f
luaG_forerror	vendor/lua/src/ldebug.c	/^l_noret luaG_forerror (lua_State *L, const TValue *o, const char *what) {$/;"	f
luaG_getfuncline	vendor/lua/src/ldebug.c	/^int luaG_getfuncline (const Proto *f, int pc) {$/;"	f
luaG_opinterror	vendor/lua/src/ldebug.c	/^l_noret luaG_opinterror (lua_State *L, const TValue *p1,$/;"	f
luaG_ordererror	vendor/lua/src/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	vendor/lua/src/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_tointerror	vendor/lua/src/ldebug.c	/^l_noret luaG_tointerror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_traceexec	vendor/lua/src/ldebug.c	/^int luaG_traceexec (lua_State *L, const Instruction *pc) {$/;"	f
luaG_typeerror	vendor/lua/src/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_finishset	vendor/lua/src/ltable.c	/^void luaH_finishset (lua_State *L, Table *t, const TValue *key,$/;"	f
luaH_free	vendor/lua/src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	vendor/lua/src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	vendor/lua/src/ltable.c	/^const TValue *luaH_getint (Table *t, lua_Integer key) {$/;"	f
luaH_getn	vendor/lua/src/ltable.c	/^lua_Unsigned luaH_getn (Table *t) {$/;"	f
luaH_getshortstr	vendor/lua/src/ltable.c	/^const TValue *luaH_getshortstr (Table *t, TString *key) {$/;"	f
luaH_getstr	vendor/lua/src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	vendor/lua/src/ltable.c	/^int luaH_isdummy (const Table *t) { return isdummy(t); }$/;"	f
luaH_mainposition	vendor/lua/src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	vendor/lua/src/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	vendor/lua/src/ltable.c	/^void luaH_newkey (lua_State *L, Table *t, const TValue *key, TValue *value) {$/;"	f
luaH_next	vendor/lua/src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_realasize	vendor/lua/src/ltable.c	/^LUAI_FUNC unsigned int luaH_realasize (const Table *t) {$/;"	f
luaH_resize	vendor/lua/src/ltable.c	/^void luaH_resize (lua_State *L, Table *t, unsigned int newasize,$/;"	f
luaH_resizearray	vendor/lua/src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, unsigned int nasize) {$/;"	f
luaH_set	vendor/lua/src/ltable.c	/^void luaH_set (lua_State *L, Table *t, const TValue *key, TValue *value) {$/;"	f
luaH_setint	vendor/lua/src/ltable.c	/^void luaH_setint (lua_State *L, Table *t, lua_Integer key, TValue *value) {$/;"	f
luaK_checkstack	vendor/lua/src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	vendor/lua/src/lcode.c	/^int luaK_code (FuncState *fs, Instruction i) {$/;"	f
luaK_codeABC	vendor/lua/src/lcode.h	48;"	d
luaK_codeABCk	vendor/lua/src/lcode.c	/^int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {$/;"	f
luaK_codeABx	vendor/lua/src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codeAsBx	vendor/lua/src/lcode.c	/^int luaK_codeAsBx (FuncState *fs, OpCode o, int a, int bc) {$/;"	f
luaK_codek	vendor/lua/src/lcode.c	/^static int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f	file:
luaK_concat	vendor/lua/src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	vendor/lua/src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2K	vendor/lua/src/lcode.c	/^static int luaK_exp2K (FuncState *fs, expdesc *e) {$/;"	f	file:
luaK_exp2RK	vendor/lua/src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	vendor/lua/src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	vendor/lua/src/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2const	vendor/lua/src/lcode.c	/^int luaK_exp2const (FuncState *fs, const expdesc *e, TValue *v) {$/;"	f
luaK_exp2nextreg	vendor/lua/src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	vendor/lua/src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_finish	vendor/lua/src/lcode.c	/^void luaK_finish (FuncState *fs) {$/;"	f
luaK_fixline	vendor/lua/src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_float	vendor/lua/src/lcode.c	/^static void luaK_float (FuncState *fs, int reg, lua_Number f) {$/;"	f	file:
luaK_getlabel	vendor/lua/src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	vendor/lua/src/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	vendor/lua/src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	vendor/lua/src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	vendor/lua/src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_int	vendor/lua/src/lcode.c	/^void luaK_int (FuncState *fs, int reg, lua_Integer i) {$/;"	f
luaK_intK	vendor/lua/src/lcode.c	/^static int luaK_intK (FuncState *fs, lua_Integer n) {$/;"	f	file:
luaK_isKint	vendor/lua/src/lcode.c	/^int luaK_isKint (expdesc *e) {$/;"	f
luaK_jump	vendor/lua/src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_jumpto	vendor/lua/src/lcode.h	60;"	d
luaK_nil	vendor/lua/src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	vendor/lua/src/lcode.c	/^static int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f	file:
luaK_patchlist	vendor/lua/src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	vendor/lua/src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	vendor/lua/src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr opr,$/;"	f
luaK_prefix	vendor/lua/src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f
luaK_reserveregs	vendor/lua/src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	vendor/lua/src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	vendor/lua/src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_semerror	vendor/lua/src/lcode.c	/^l_noret luaK_semerror (LexState *ls, const char *msg) {$/;"	f
luaK_setlist	vendor/lua/src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setmultret	vendor/lua/src/lcode.h	58;"	d
luaK_setoneret	vendor/lua/src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	vendor/lua/src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_settablesize	vendor/lua/src/lcode.c	/^void luaK_settablesize (FuncState *fs, int pc, int ra, int asize, int hsize) {$/;"	f
luaK_storevar	vendor/lua/src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaL_Buffer	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_Buffer"><code>luaL_Buffer<\/code><\/a><\/h3>$/;"	a
luaL_Buffer	vendor/lua/src/lauxlib.h	/^struct luaL_Buffer {$/;"	s
luaL_Buffer	vendor/lua/src/lauxlib.h	/^typedef struct luaL_Buffer luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_Reg"><code>luaL_Reg<\/code><\/a><\/h3>$/;"	a
luaL_Reg	vendor/lua/src/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	vendor/lua/src/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Stream	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_Stream"><code>luaL_Stream<\/code><\/a><\/h3>$/;"	a
luaL_Stream	vendor/lua/src/lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	vendor/lua/src/lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_addchar	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_addchar"><code>luaL_addchar<\/code><\/a><\/h3><p>$/;"	a
luaL_addchar	vendor/lua/src/lauxlib.h	199;"	d
luaL_addgsub	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_addgsub"><code>luaL_addgsub<\/code><\/a><\/h3><p>$/;"	a
luaL_addgsub	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_addgsub (luaL_Buffer *b, const char *s,$/;"	f
luaL_addlstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_addlstring"><code>luaL_addlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addlstring	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addsize	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_addsize"><code>luaL_addsize<\/code><\/a><\/h3><p>$/;"	a
luaL_addsize	vendor/lua/src/lauxlib.h	203;"	d
luaL_addstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_addstring"><code>luaL_addstring<\/code><\/a><\/h3><p>$/;"	a
luaL_addstring	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_addvalue"><code>luaL_addvalue<\/code><\/a><\/h3><p>$/;"	a
luaL_addvalue	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argcheck	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_argcheck"><code>luaL_argcheck<\/code><\/a><\/h3><p>$/;"	a
luaL_argcheck	vendor/lua/src/lauxlib.h	133;"	d
luaL_argerror	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_argerror"><code>luaL_argerror<\/code><\/a><\/h3><p>$/;"	a
luaL_argerror	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int arg, const char *extramsg) {$/;"	f
luaL_argexpected	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_argexpected"><code>luaL_argexpected<\/code><\/a><\/h3><p>$/;"	a
luaL_argexpected	vendor/lua/src/lauxlib.h	136;"	d
luaL_buffaddr	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_buffaddr"><code>luaL_buffaddr<\/code><\/a><\/h3><p>$/;"	a
luaL_buffaddr	vendor/lua/src/lauxlib.h	196;"	d
luaL_buffinit	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_buffinit"><code>luaL_buffinit<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinit	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_buffinitsize"><code>luaL_buffinitsize<\/code><\/a><\/h3><p>$/;"	a
luaL_buffinitsize	vendor/lua/src/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_bufflen	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_bufflen"><code>luaL_bufflen<\/code><\/a><\/h3><p>$/;"	a
luaL_bufflen	vendor/lua/src/lauxlib.h	195;"	d
luaL_buffsub	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_buffsub"><code>luaL_buffsub<\/code><\/a><\/h3><p>$/;"	a
luaL_buffsub	vendor/lua/src/lauxlib.h	205;"	d
luaL_callmeta	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_callmeta"><code>luaL_callmeta<\/code><\/a><\/h3><p>$/;"	a
luaL_callmeta	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkany"><code>luaL_checkany<\/code><\/a><\/h3><p>$/;"	a
luaL_checkany	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int arg) {$/;"	f
luaL_checkint	vendor/lua/src/lauxlib.h	280;"	d
luaL_checkinteger	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkinteger"><code>luaL_checkinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_checkinteger	vendor/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int arg) {$/;"	f
luaL_checklong	vendor/lua/src/lauxlib.h	283;"	d
luaL_checklstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checklstring"><code>luaL_checklstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checklstring	vendor/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {$/;"	f
luaL_checknumber	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checknumber"><code>luaL_checknumber<\/code><\/a><\/h3><p>$/;"	a
luaL_checknumber	vendor/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int arg) {$/;"	f
luaL_checkoption	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkoption"><code>luaL_checkoption<\/code><\/a><\/h3><p>$/;"	a
luaL_checkoption	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int arg, const char *def,$/;"	f
luaL_checkstack	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstack"><code>luaL_checkstack<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstack	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checkstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkstring"><code>luaL_checkstring<\/code><\/a><\/h3><p>$/;"	a
luaL_checkstring	vendor/lua/src/lauxlib.h	139;"	d
luaL_checktype	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checktype"><code>luaL_checktype<\/code><\/a><\/h3><p>$/;"	a
luaL_checktype	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int arg, int t) {$/;"	f
luaL_checkudata	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkudata"><code>luaL_checkudata<\/code><\/a><\/h3><p>$/;"	a
luaL_checkudata	vendor/lua/src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	vendor/lua/src/lauxlib.h	276;"	d
luaL_checkversion	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_checkversion"><code>luaL_checkversion<\/code><\/a><\/h3><p>$/;"	a
luaL_checkversion	vendor/lua/src/lauxlib.h	47;"	d
luaL_checkversion_	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver, size_t sz) {$/;"	f
luaL_dofile	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_dofile"><code>luaL_dofile<\/code><\/a><\/h3><p>$/;"	a
luaL_dofile	vendor/lua/src/lauxlib.h	144;"	d
luaL_dostring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_dostring"><code>luaL_dostring<\/code><\/a><\/h3><p>$/;"	a
luaL_dostring	vendor/lua/src/lauxlib.h	147;"	d
luaL_error	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_error"><code>luaL_error<\/code><\/a><\/h3><p>$/;"	a
luaL_error	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_execresult"><code>luaL_execresult<\/code><\/a><\/h3><p>$/;"	a
luaL_execresult	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_fileresult"><code>luaL_fileresult<\/code><\/a><\/h3><p>$/;"	a
luaL_fileresult	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_getmetafield	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetafield"><code>luaL_getmetafield<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetafield	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_getmetatable"><code>luaL_getmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_getmetatable	vendor/lua/src/lauxlib.h	150;"	d
luaL_getsubtable	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_getsubtable"><code>luaL_getsubtable<\/code><\/a><\/h3><p>$/;"	a
luaL_getsubtable	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_gsub"><code>luaL_gsub<\/code><\/a><\/h3><p>$/;"	a
luaL_gsub	vendor/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s,$/;"	f
luaL_len	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_len"><code>luaL_len<\/code><\/a><\/h3><p>$/;"	a
luaL_len	vendor/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbuffer	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadbuffer"><code>luaL_loadbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbuffer	vendor/lua/src/lauxlib.h	154;"	d
luaL_loadbufferx	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadbufferx"><code>luaL_loadbufferx<\/code><\/a><\/h3><p>$/;"	a
luaL_loadbufferx	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfile	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadfile"><code>luaL_loadfile<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfile	vendor/lua/src/lauxlib.h	95;"	d
luaL_loadfilex	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadfilex"><code>luaL_loadfilex<\/code><\/a><\/h3><p>$/;"	a
luaL_loadfilex	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_loadstring"><code>luaL_loadstring<\/code><\/a><\/h3><p>$/;"	a
luaL_loadstring	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newlib	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_newlib"><code>luaL_newlib<\/code><\/a><\/h3><p>$/;"	a
luaL_newlib	vendor/lua/src/lauxlib.h	130;"	d
luaL_newlibtable	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_newlibtable"><code>luaL_newlibtable<\/code><\/a><\/h3><p>$/;"	a
luaL_newlibtable	vendor/lua/src/lauxlib.h	127;"	d
luaL_newmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_newmetatable"><code>luaL_newmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_newmetatable	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_newstate"><code>luaL_newstate<\/code><\/a><\/h3><p>$/;"	a
luaL_newstate	vendor/lua/src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlibs	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_openlibs"><code>luaL_openlibs<\/code><\/a><\/h3><p>$/;"	a
luaL_openlibs	vendor/lua/src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_opt	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_opt"><code>luaL_opt<\/code><\/a><\/h3><p>$/;"	a
luaL_opt	vendor/lua/src/lauxlib.h	152;"	d
luaL_optint	vendor/lua/src/lauxlib.h	281;"	d
luaL_optinteger	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_optinteger"><code>luaL_optinteger<\/code><\/a><\/h3><p>$/;"	a
luaL_optinteger	vendor/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int arg,$/;"	f
luaL_optlong	vendor/lua/src/lauxlib.h	284;"	d
luaL_optlstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_optlstring"><code>luaL_optlstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optlstring	vendor/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int arg,$/;"	f
luaL_optnumber	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_optnumber"><code>luaL_optnumber<\/code><\/a><\/h3><p>$/;"	a
luaL_optnumber	vendor/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int arg, lua_Number def) {$/;"	f
luaL_optstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_optstring"><code>luaL_optstring<\/code><\/a><\/h3><p>$/;"	a
luaL_optstring	vendor/lua/src/lauxlib.h	140;"	d
luaL_optunsigned	vendor/lua/src/lauxlib.h	277;"	d
luaL_prepbuffer	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_prepbuffer"><code>luaL_prepbuffer<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffer	vendor/lua/src/lauxlib.h	216;"	d
luaL_prepbuffsize	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_prepbuffsize"><code>luaL_prepbuffsize<\/code><\/a><\/h3><p>$/;"	a
luaL_prepbuffsize	vendor/lua/src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushfail	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_pushfail"><code>luaL_pushfail<\/code><\/a><\/h3><p>$/;"	a
luaL_pushfail	vendor/lua/src/lauxlib.h	158;"	d
luaL_pushresult	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_pushresult"><code>luaL_pushresult<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresult	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_pushresultsize"><code>luaL_pushresultsize<\/code><\/a><\/h3><p>$/;"	a
luaL_pushresultsize	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_ref"><code>luaL_ref<\/code><\/a><\/h3><p>$/;"	a
luaL_ref	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_requiref	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_requiref"><code>luaL_requiref<\/code><\/a><\/h3><p>$/;"	a
luaL_requiref	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_setfuncs"><code>luaL_setfuncs<\/code><\/a><\/h3><p>$/;"	a
luaL_setfuncs	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_setmetatable"><code>luaL_setmetatable<\/code><\/a><\/h3><p>$/;"	a
luaL_setmetatable	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_testudata"><code>luaL_testudata<\/code><\/a><\/h3><p>$/;"	a
luaL_testudata	vendor/lua/src/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_tolstring"><code>luaL_tolstring<\/code><\/a><\/h3><p>$/;"	a
luaL_tolstring	vendor/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_traceback"><code>luaL_traceback<\/code><\/a><\/h3><p>$/;"	a
luaL_traceback	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_typeerror	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_typeerror"><code>luaL_typeerror<\/code><\/a><\/h3><p>$/;"	a
luaL_typeerror	vendor/lua/src/lauxlib.c	/^LUALIB_API int luaL_typeerror (lua_State *L, int arg, const char *tname) {$/;"	f
luaL_typename	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_typename"><code>luaL_typename<\/code><\/a><\/h3><p>$/;"	a
luaL_typename	vendor/lua/src/lauxlib.h	142;"	d
luaL_unref	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_unref"><code>luaL_unref<\/code><\/a><\/h3><p>$/;"	a
luaL_unref	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	vendor/lua/doc/manual.html	/^<hr><h3><a name="luaL_where"><code>luaL_where<\/code><\/a><\/h3><p>$/;"	a
luaL_where	vendor/lua/src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_checksize	vendor/lua/src/lmem.h	34;"	d
luaM_error	vendor/lua/src/lmem.h	17;"	d
luaM_free	vendor/lua/src/lmem.h	56;"	d
luaM_free_	vendor/lua/src/lmem.c	/^void luaM_free_ (lua_State *L, void *block, size_t osize) {$/;"	f
luaM_freearray	vendor/lua/src/lmem.h	57;"	d
luaM_freemem	vendor/lua/src/lmem.h	55;"	d
luaM_growaux_	vendor/lua/src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int nelems, int *psize,$/;"	f
luaM_growvector	vendor/lua/src/lmem.h	66;"	d
luaM_limitN	vendor/lua/src/lmem.h	44;"	d
luaM_malloc_	vendor/lua/src/lmem.c	/^void *luaM_malloc_ (lua_State *L, size_t size, int tag) {$/;"	f
luaM_new	vendor/lua/src/lmem.h	59;"	d
luaM_newobject	vendor/lua/src/lmem.h	64;"	d
luaM_newvector	vendor/lua/src/lmem.h	60;"	d
luaM_newvectorchecked	vendor/lua/src/lmem.h	61;"	d
luaM_realloc_	vendor/lua/src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_reallocvchar	vendor/lua/src/lmem.h	52;"	d
luaM_reallocvector	vendor/lua/src/lmem.h	70;"	d
luaM_saferealloc_	vendor/lua/src/lmem.c	/^void *luaM_saferealloc_ (lua_State *L, void *block, size_t osize,$/;"	f
luaM_shrinkvector	vendor/lua/src/lmem.h	74;"	d
luaM_shrinkvector_	vendor/lua/src/lmem.c	/^void *luaM_shrinkvector_ (lua_State *L, void *block, int *size,$/;"	f
luaM_testsize	vendor/lua/src/lmem.h	31;"	d
luaM_toobig	vendor/lua/src/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	vendor/lua/src/lobject.c	/^void luaO_arith (lua_State *L, int op, const TValue *p1, const TValue *p2,$/;"	f
luaO_ceillog2	vendor/lua/src/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	vendor/lua/src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t srclen) {$/;"	f
luaO_hexavalue	vendor/lua/src/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_pushfstring	vendor/lua/src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	vendor/lua/src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_rawarith	vendor/lua/src/lobject.c	/^int luaO_rawarith (lua_State *L, int op, const TValue *p1, const TValue *p2,$/;"	f
luaO_str2num	vendor/lua/src/lobject.c	/^size_t luaO_str2num (const char *s, TValue *o) {$/;"	f
luaO_tostring	vendor/lua/src/lobject.c	/^void luaO_tostring (lua_State *L, TValue *obj) {$/;"	f
luaO_utf8esc	vendor/lua/src/lobject.c	/^int luaO_utf8esc (char *buff, unsigned long x) {$/;"	f
luaP_opmodes	vendor/lua/src/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaS_clearcache	vendor/lua/src/lstring.c	/^void luaS_clearcache (global_State *g) {$/;"	f
luaS_createlngstrobj	vendor/lua/src/lstring.c	/^TString *luaS_createlngstrobj (lua_State *L, size_t l) {$/;"	f
luaS_eqlngstr	vendor/lua/src/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_hash	vendor/lua/src/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_hashlongstr	vendor/lua/src/lstring.c	/^unsigned int luaS_hashlongstr (TString *ts) {$/;"	f
luaS_init	vendor/lua/src/lstring.c	/^void luaS_init (lua_State *L) {$/;"	f
luaS_new	vendor/lua/src/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newliteral	vendor/lua/src/lstring.h	28;"	d
luaS_newlstr	vendor/lua/src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	vendor/lua/src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, int nuvalue) {$/;"	f
luaS_remove	vendor/lua/src/lstring.c	/^void luaS_remove (lua_State *L, TString *ts) {$/;"	f
luaS_resize	vendor/lua/src/lstring.c	/^void luaS_resize (lua_State *L, int nsize) {$/;"	f
luaT_adjustvarargs	vendor/lua/src/ltm.c	/^void luaT_adjustvarargs (lua_State *L, int nfixparams, CallInfo *ci,$/;"	f
luaT_callTM	vendor/lua/src/ltm.c	/^void luaT_callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f
luaT_callTMres	vendor/lua/src/ltm.c	/^void luaT_callTMres (lua_State *L, const TValue *f, const TValue *p1,$/;"	f
luaT_callorderTM	vendor/lua/src/ltm.c	/^int luaT_callorderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_callorderiTM	vendor/lua/src/ltm.c	/^int luaT_callorderiTM (lua_State *L, const TValue *p1, int v2,$/;"	f
luaT_gettm	vendor/lua/src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	vendor/lua/src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_getvarargs	vendor/lua/src/ltm.c	/^void luaT_getvarargs (lua_State *L, CallInfo *ci, StkId where, int wanted) {$/;"	f
luaT_init	vendor/lua/src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_objtypename	vendor/lua/src/ltm.c	/^const char *luaT_objtypename (lua_State *L, const TValue *o) {$/;"	f
luaT_trybinTM	vendor/lua/src/ltm.c	/^void luaT_trybinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_trybinassocTM	vendor/lua/src/ltm.c	/^void luaT_trybinassocTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f
luaT_trybiniTM	vendor/lua/src/ltm.c	/^void luaT_trybiniTM (lua_State *L, const TValue *p1, lua_Integer i2,$/;"	f
luaT_tryconcatTM	vendor/lua/src/ltm.c	/^void luaT_tryconcatTM (lua_State *L) {$/;"	f
luaT_typenames_	vendor/lua/src/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTYPES] = {$/;"	v
luaU_dump	vendor/lua/src/ldump.c	/^int luaU_dump(lua_State *L, const Proto *f, lua_Writer w, void *data,$/;"	f
luaU_print	vendor/lua/src/luac.c	29;"	d	file:
luaU_undump	vendor/lua/src/lundump.c	/^LClosure *luaU_undump(lua_State *L, ZIO *Z, const char *name) {$/;"	f
luaV_concat	vendor/lua/src/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_equalobj	vendor/lua/src/lvm.c	/^int luaV_equalobj (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	vendor/lua/src/lvm.c	/^void luaV_execute (lua_State *L, CallInfo *ci) {$/;"	f
luaV_fastget	vendor/lua/src/lvm.h	85;"	d
luaV_fastgeti	vendor/lua/src/lvm.h	96;"	d
luaV_finishOp	vendor/lua/src/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_finishfastset	vendor/lua/src/lvm.h	108;"	d
luaV_finishget	vendor/lua/src/lvm.c	/^void luaV_finishget (lua_State *L, const TValue *t, TValue *key, StkId val,$/;"	f
luaV_finishset	vendor/lua/src/lvm.c	/^void luaV_finishset (lua_State *L, const TValue *t, TValue *key,$/;"	f
luaV_flttointeger	vendor/lua/src/lvm.c	/^int luaV_flttointeger (lua_Number n, lua_Integer *p, F2Imod mode) {$/;"	f
luaV_idiv	vendor/lua/src/lvm.c	/^lua_Integer luaV_idiv (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_lessequal	vendor/lua/src/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	vendor/lua/src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_mod	vendor/lua/src/lvm.c	/^lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f
luaV_modf	vendor/lua/src/lvm.c	/^lua_Number luaV_modf (lua_State *L, lua_Number m, lua_Number n) {$/;"	f
luaV_objlen	vendor/lua/src/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_rawequalobj	vendor/lua/src/lvm.h	75;"	d
luaV_shiftl	vendor/lua/src/lvm.c	/^lua_Integer luaV_shiftl (lua_Integer x, lua_Integer y) {$/;"	f
luaV_shiftr	vendor/lua/src/lvm.c	769;"	d	file:
luaV_tointeger	vendor/lua/src/lvm.c	/^int luaV_tointeger (const TValue *obj, lua_Integer *p, F2Imod mode) {$/;"	f
luaV_tointegerns	vendor/lua/src/lvm.c	/^int luaV_tointegerns (const TValue *obj, lua_Integer *p, F2Imod mode) {$/;"	f
luaV_tonumber_	vendor/lua/src/lvm.c	/^int luaV_tonumber_ (const TValue *obj, lua_Number *n) {$/;"	f
luaX_init	vendor/lua/src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	vendor/lua/src/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	vendor/lua/src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	vendor/lua/src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	vendor/lua/src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	vendor/lua/src/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	vendor/lua/src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	vendor/lua/src/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_nvarstack	vendor/lua/src/lparser.c	/^int luaY_nvarstack (FuncState *fs) {$/;"	f
luaY_parser	vendor/lua/src/lparser.c	/^LClosure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_buffer	vendor/lua/src/lzio.h	31;"	d
luaZ_bufflen	vendor/lua/src/lzio.h	33;"	d
luaZ_buffremove	vendor/lua/src/lzio.h	35;"	d
luaZ_fill	vendor/lua/src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_freebuffer	vendor/lua/src/lzio.h	44;"	d
luaZ_init	vendor/lua/src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_initbuffer	vendor/lua/src/lzio.h	29;"	d
luaZ_read	vendor/lua/src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
luaZ_resetbuffer	vendor/lua/src/lzio.h	36;"	d
luaZ_resizebuffer	vendor/lua/src/lzio.h	39;"	d
luaZ_sizebuffer	vendor/lua/src/lzio.h	32;"	d
lua_Alloc	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Alloc"><code>lua_Alloc<\/code><\/a><\/h3>$/;"	a
lua_Alloc	vendor/lua/src/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_CFunction"><code>lua_CFunction<\/code><\/a><\/h3>$/;"	a
lua_CFunction	vendor/lua/src/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Debug	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Debug"><code>lua_Debug<\/code><\/a><\/h3>$/;"	a
lua_Debug	vendor/lua/src/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	vendor/lua/src/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Hook"><code>lua_Hook<\/code><\/a><\/h3>$/;"	a
lua_Hook	vendor/lua/src/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Integer"><code>lua_Integer<\/code><\/a><\/h3>$/;"	a
lua_Integer	vendor/lua/src/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_KContext	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_KContext"><code>lua_KContext<\/code><\/a><\/h3>$/;"	a
lua_KContext	vendor/lua/src/lua.h	/^typedef LUA_KCONTEXT lua_KContext;$/;"	t
lua_KFunction	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_KFunction"><code>lua_KFunction<\/code><\/a><\/h3>$/;"	a
lua_KFunction	vendor/lua/src/lua.h	/^typedef int (*lua_KFunction) (lua_State *L, int status, lua_KContext ctx);$/;"	t
lua_Number	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Number"><code>lua_Number<\/code><\/a><\/h3>$/;"	a
lua_Number	vendor/lua/src/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Reader"><code>lua_Reader<\/code><\/a><\/h3>$/;"	a
lua_Reader	vendor/lua/src/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_State"><code>lua_State<\/code><\/a><\/h3>$/;"	a
lua_State	vendor/lua/src/lstate.h	/^struct lua_State {$/;"	s
lua_State	vendor/lua/src/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_Unsigned	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Unsigned"><code>lua_Unsigned<\/code><\/a><\/h3>$/;"	a
lua_Unsigned	vendor/lua/src/lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_WarnFunction	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_WarnFunction"><code>lua_WarnFunction<\/code><\/a><\/h3>$/;"	a
lua_WarnFunction	vendor/lua/src/lua.h	/^typedef void (*lua_WarnFunction) (void *ud, const char *msg, int tocont);$/;"	t
lua_Writer	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_Writer"><code>lua_Writer<\/code><\/a><\/h3>$/;"	a
lua_Writer	vendor/lua/src/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void *p, size_t sz, void *ud);$/;"	t
lua_absindex	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_absindex"><code>lua_absindex<\/code><\/a><\/h3><p>$/;"	a
lua_absindex	vendor/lua/src/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_arith	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_arith"><code>lua_arith<\/code><\/a><\/h3><p>$/;"	a
lua_arith	vendor/lua/src/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_assert	vendor/lua/src/lauxlib.h	168;"	d
lua_assert	vendor/lua/src/lauxlib.h	170;"	d
lua_assert	vendor/lua/src/llimits.h	101;"	d
lua_assert	vendor/lua/src/llimits.h	93;"	d
lua_atpanic	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_atpanic"><code>lua_atpanic<\/code><\/a><\/h3><p>$/;"	a
lua_atpanic	vendor/lua/src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	vendor/lua/src/lua.c	7;"	d	file:
lua_call	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_call"><code>lua_call<\/code><\/a><\/h3><p>$/;"	a
lua_call	vendor/lua/src/lua.h	283;"	d
lua_callk	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_callk"><code>lua_callk<\/code><\/a><\/h3><p>$/;"	a
lua_callk	vendor/lua/src/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults,$/;"	f
lua_checkstack	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_checkstack"><code>lua_checkstack<\/code><\/a><\/h3><p>$/;"	a
lua_checkstack	vendor/lua/src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int n) {$/;"	f
lua_close	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_close"><code>lua_close<\/code><\/a><\/h3><p>$/;"	a
lua_close	vendor/lua/src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_closeslot	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_closeslot"><code>lua_closeslot<\/code><\/a><\/h3><p>$/;"	a
lua_closeslot	vendor/lua/src/lapi.c	/^LUA_API void lua_closeslot (lua_State *L, int idx) {$/;"	f
lua_compare	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_compare"><code>lua_compare<\/code><\/a><\/h3><p>$/;"	a
lua_compare	vendor/lua/src/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_concat"><code>lua_concat<\/code><\/a><\/h3><p>$/;"	a
lua_concat	vendor/lua/src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_copy"><code>lua_copy<\/code><\/a><\/h3><p>$/;"	a
lua_copy	vendor/lua/src/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_createtable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_createtable"><code>lua_createtable<\/code><\/a><\/h3><p>$/;"	a
lua_createtable	vendor/lua/src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_dump	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_dump"><code>lua_dump<\/code><\/a><\/h3><p>$/;"	a
lua_dump	vendor/lua/src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data, int strip) {$/;"	f
lua_equal	vendor/lua/src/luaconf.h	370;"	d
lua_error	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_error"><code>lua_error<\/code><\/a><\/h3><p>$/;"	a
lua_error	vendor/lua/src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	vendor/lua/src/lua.c	422;"	d	file:
lua_freeline	vendor/lua/src/lua.c	431;"	d	file:
lua_gc	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_gc"><code>lua_gc<\/code><\/a><\/h3><p>$/;"	a
lua_gc	vendor/lua/src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, ...) {$/;"	f
lua_getallocf	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getallocf"><code>lua_getallocf<\/code><\/a><\/h3><p>$/;"	a
lua_getallocf	vendor/lua/src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getextraspace	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getextraspace"><code>lua_getextraspace<\/code><\/a><\/h3><p>$/;"	a
lua_getextraspace	vendor/lua/src/lua.h	360;"	d
lua_getfield	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getfield"><code>lua_getfield<\/code><\/a><\/h3><p>$/;"	a
lua_getfield	vendor/lua/src/lapi.c	/^LUA_API int lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getglobal"><code>lua_getglobal<\/code><\/a><\/h3><p>$/;"	a
lua_getglobal	vendor/lua/src/lapi.c	/^LUA_API int lua_getglobal (lua_State *L, const char *name) {$/;"	f
lua_gethook	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_gethook"><code>lua_gethook<\/code><\/a><\/h3><p>$/;"	a
lua_gethook	vendor/lua/src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_gethookcount"><code>lua_gethookcount<\/code><\/a><\/h3><p>$/;"	a
lua_gethookcount	vendor/lua/src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_gethookmask"><code>lua_gethookmask<\/code><\/a><\/h3><p>$/;"	a
lua_gethookmask	vendor/lua/src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_geti	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_geti"><code>lua_geti<\/code><\/a><\/h3><p>$/;"	a
lua_geti	vendor/lua/src/lapi.c	/^LUA_API int lua_geti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_getinfo	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getinfo"><code>lua_getinfo<\/code><\/a><\/h3><p>$/;"	a
lua_getinfo	vendor/lua/src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getiuservalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getiuservalue"><code>lua_getiuservalue<\/code><\/a><\/h3><p>$/;"	a
lua_getiuservalue	vendor/lua/src/lapi.c	/^LUA_API int lua_getiuservalue (lua_State *L, int idx, int n) {$/;"	f
lua_getlocal	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getlocal"><code>lua_getlocal<\/code><\/a><\/h3><p>$/;"	a
lua_getlocal	vendor/lua/src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getlocaledecpoint	vendor/lua/src/luaconf.h	660;"	d
lua_getmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getmetatable"><code>lua_getmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_getmetatable	vendor/lua/src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getstack"><code>lua_getstack<\/code><\/a><\/h3><p>$/;"	a
lua_getstack	vendor/lua/src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_gettable"><code>lua_gettable<\/code><\/a><\/h3><p>$/;"	a
lua_gettable	vendor/lua/src/lapi.c	/^LUA_API int lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_gettop"><code>lua_gettop<\/code><\/a><\/h3><p>$/;"	a
lua_gettop	vendor/lua/src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_getupvalue"><code>lua_getupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_getupvalue	vendor/lua/src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	vendor/lua/src/lua.h	413;"	d
lua_h	vendor/lua/src/lua.h	10;"	d
lua_ident	vendor/lua/src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_initreadline	vendor/lua/src/lua.c	419;"	d	file:
lua_initreadline	vendor/lua/src/lua.c	426;"	d	file:
lua_insert	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_insert"><code>lua_insert<\/code><\/a><\/h3><p>$/;"	a
lua_insert	vendor/lua/src/lua.h	390;"	d
lua_integer2str	vendor/lua/src/luaconf.h	499;"	d
lua_isboolean	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isboolean"><code>lua_isboolean<\/code><\/a><\/h3><p>$/;"	a
lua_isboolean	vendor/lua/src/lua.h	377;"	d
lua_iscfunction	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_iscfunction"><code>lua_iscfunction<\/code><\/a><\/h3><p>$/;"	a
lua_iscfunction	vendor/lua/src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isfunction	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isfunction"><code>lua_isfunction<\/code><\/a><\/h3><p>$/;"	a
lua_isfunction	vendor/lua/src/lua.h	373;"	d
lua_isinteger	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isinteger"><code>lua_isinteger<\/code><\/a><\/h3><p>$/;"	a
lua_isinteger	vendor/lua/src/lapi.c	/^LUA_API int lua_isinteger (lua_State *L, int idx) {$/;"	f
lua_islightuserdata	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_islightuserdata"><code>lua_islightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_islightuserdata	vendor/lua/src/lua.h	375;"	d
lua_isnil	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isnil"><code>lua_isnil<\/code><\/a><\/h3><p>$/;"	a
lua_isnil	vendor/lua/src/lua.h	376;"	d
lua_isnone	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isnone"><code>lua_isnone<\/code><\/a><\/h3><p>$/;"	a
lua_isnone	vendor/lua/src/lua.h	379;"	d
lua_isnoneornil	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isnoneornil"><code>lua_isnoneornil<\/code><\/a><\/h3><p>$/;"	a
lua_isnoneornil	vendor/lua/src/lua.h	380;"	d
lua_isnumber	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isnumber"><code>lua_isnumber<\/code><\/a><\/h3><p>$/;"	a
lua_isnumber	vendor/lua/src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isstring"><code>lua_isstring<\/code><\/a><\/h3><p>$/;"	a
lua_isstring	vendor/lua/src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_istable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_istable"><code>lua_istable<\/code><\/a><\/h3><p>$/;"	a
lua_istable	vendor/lua/src/lua.h	374;"	d
lua_isthread	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isthread"><code>lua_isthread<\/code><\/a><\/h3><p>$/;"	a
lua_isthread	vendor/lua/src/lua.h	378;"	d
lua_isuserdata	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isuserdata"><code>lua_isuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_isuserdata	vendor/lua/src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_isyieldable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_isyieldable"><code>lua_isyieldable<\/code><\/a><\/h3><p>$/;"	a
lua_isyieldable	vendor/lua/src/ldo.c	/^LUA_API int lua_isyieldable (lua_State *L) {$/;"	f
lua_len	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_len"><code>lua_len<\/code><\/a><\/h3><p>$/;"	a
lua_len	vendor/lua/src/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_lessthan	vendor/lua/src/luaconf.h	371;"	d
lua_load	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_load"><code>lua_load<\/code><\/a><\/h3><p>$/;"	a
lua_load	vendor/lua/src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_lock	vendor/lua/src/llimits.h	237;"	d
lua_longassert	vendor/lua/src/llimits.h	103;"	d
lua_longassert	vendor/lua/src/llimits.h	99;"	d
lua_longjmp	vendor/lua/src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_newstate"><code>lua_newstate<\/code><\/a><\/h3><p>$/;"	a
lua_newstate	vendor/lua/src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newtable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_newtable"><code>lua_newtable<\/code><\/a><\/h3><p>$/;"	a
lua_newtable	vendor/lua/src/lua.h	367;"	d
lua_newthread	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_newthread"><code>lua_newthread<\/code><\/a><\/h3><p>$/;"	a
lua_newthread	vendor/lua/src/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	vendor/lua/src/lua.h	412;"	d
lua_newuserdatauv	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_newuserdatauv"><code>lua_newuserdatauv<\/code><\/a><\/h3><p>$/;"	a
lua_newuserdatauv	vendor/lua/src/lapi.c	/^LUA_API void *lua_newuserdatauv (lua_State *L, size_t size, int nuvalue) {$/;"	f
lua_next	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_next"><code>lua_next<\/code><\/a><\/h3><p>$/;"	a
lua_next	vendor/lua/src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_number2str	vendor/lua/src/luaconf.h	405;"	d
lua_number2strx	vendor/lua/src/lstrlib.c	/^static int lua_number2strx (lua_State *L, char *buff, int sz,$/;"	f	file:
lua_number2strx	vendor/lua/src/luaconf.h	617;"	d
lua_numbertointeger	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_numbertointeger"><code>lua_numbertointeger<\/code><\/a><\/h3>$/;"	a
lua_numbertointeger	vendor/lua/src/luaconf.h	417;"	d
lua_objlen	vendor/lua/src/luaconf.h	368;"	d
lua_pcall	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pcall"><code>lua_pcall<\/code><\/a><\/h3><p>$/;"	a
lua_pcall	vendor/lua/src/lua.h	287;"	d
lua_pcallk	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pcallk"><code>lua_pcallk<\/code><\/a><\/h3><p>$/;"	a
lua_pcallk	vendor/lua/src/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pointer2str	vendor/lua/src/luaconf.h	607;"	d
lua_pop	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pop"><code>lua_pop<\/code><\/a><\/h3><p>$/;"	a
lua_pop	vendor/lua/src/lua.h	365;"	d
lua_pushboolean	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushboolean"><code>lua_pushboolean<\/code><\/a><\/h3><p>$/;"	a
lua_pushboolean	vendor/lua/src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushcclosure"><code>lua_pushcclosure<\/code><\/a><\/h3><p>$/;"	a
lua_pushcclosure	vendor/lua/src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushcfunction	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushcfunction"><code>lua_pushcfunction<\/code><\/a><\/h3><p>$/;"	a
lua_pushcfunction	vendor/lua/src/lua.h	371;"	d
lua_pushfstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushfstring"><code>lua_pushfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushfstring	vendor/lua/src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushglobaltable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushglobaltable"><code>lua_pushglobaltable<\/code><\/a><\/h3><p>$/;"	a
lua_pushglobaltable	vendor/lua/src/lua.h	384;"	d
lua_pushinteger	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushinteger"><code>lua_pushinteger<\/code><\/a><\/h3><p>$/;"	a
lua_pushinteger	vendor/lua/src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushlightuserdata"><code>lua_pushlightuserdata<\/code><\/a><\/h3><p>$/;"	a
lua_pushlightuserdata	vendor/lua/src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushliteral	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushliteral"><code>lua_pushliteral<\/code><\/a><\/h3><p>$/;"	a
lua_pushliteral	vendor/lua/src/lua.h	382;"	d
lua_pushlstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushlstring"><code>lua_pushlstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushlstring	vendor/lua/src/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushnil"><code>lua_pushnil<\/code><\/a><\/h3><p>$/;"	a
lua_pushnil	vendor/lua/src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushnumber"><code>lua_pushnumber<\/code><\/a><\/h3><p>$/;"	a
lua_pushnumber	vendor/lua/src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushstring"><code>lua_pushstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushstring	vendor/lua/src/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushthread"><code>lua_pushthread<\/code><\/a><\/h3><p>$/;"	a
lua_pushthread	vendor/lua/src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	vendor/lua/src/lua.h	406;"	d
lua_pushvalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushvalue"><code>lua_pushvalue<\/code><\/a><\/h3><p>$/;"	a
lua_pushvalue	vendor/lua/src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_pushvfstring"><code>lua_pushvfstring<\/code><\/a><\/h3><p>$/;"	a
lua_pushvfstring	vendor/lua/src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawequal"><code>lua_rawequal<\/code><\/a><\/h3><p>$/;"	a
lua_rawequal	vendor/lua/src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawget"><code>lua_rawget<\/code><\/a><\/h3><p>$/;"	a
lua_rawget	vendor/lua/src/lapi.c	/^LUA_API int lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawgeti"><code>lua_rawgeti<\/code><\/a><\/h3><p>$/;"	a
lua_rawgeti	vendor/lua/src/lapi.c	/^LUA_API int lua_rawgeti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawgetp	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawgetp"><code>lua_rawgetp<\/code><\/a><\/h3><p>$/;"	a
lua_rawgetp	vendor/lua/src/lapi.c	/^LUA_API int lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawlen"><code>lua_rawlen<\/code><\/a><\/h3><p>$/;"	a
lua_rawlen	vendor/lua/src/lapi.c	/^LUA_API lua_Unsigned lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawset"><code>lua_rawset<\/code><\/a><\/h3><p>$/;"	a
lua_rawset	vendor/lua/src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawseti"><code>lua_rawseti<\/code><\/a><\/h3><p>$/;"	a
lua_rawseti	vendor/lua/src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_rawsetp	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rawsetp"><code>lua_rawsetp<\/code><\/a><\/h3><p>$/;"	a
lua_rawsetp	vendor/lua/src/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	vendor/lua/src/lua.c	420;"	d	file:
lua_readline	vendor/lua/src/lua.c	427;"	d	file:
lua_ref	proxy.h	/^    int lua_ref;$/;"	m	struct:proxy_hook
lua_ref	proxy.h	/^    int lua_ref;$/;"	m	struct:proxy_hook_tagged
lua_register	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_register"><code>lua_register<\/code><\/a><\/h3><p>$/;"	a
lua_register	vendor/lua/src/lua.h	369;"	d
lua_remove	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_remove"><code>lua_remove<\/code><\/a><\/h3><p>$/;"	a
lua_remove	vendor/lua/src/lua.h	392;"	d
lua_replace	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_replace"><code>lua_replace<\/code><\/a><\/h3><p>$/;"	a
lua_replace	vendor/lua/src/lua.h	394;"	d
lua_resetthread	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_resetthread"><code>lua_resetthread<\/code><\/a><\/h3><p>$/;"	a
lua_resetthread	vendor/lua/src/lstate.c	/^LUA_API int lua_resetthread (lua_State *L) {$/;"	f
lua_resume	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_resume"><code>lua_resume<\/code><\/a><\/h3><p>$/;"	a
lua_resume	vendor/lua/src/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs,$/;"	f
lua_rotate	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_rotate"><code>lua_rotate<\/code><\/a><\/h3><p>$/;"	a
lua_rotate	vendor/lua/src/lapi.c	/^LUA_API void lua_rotate (lua_State *L, int idx, int n) {$/;"	f
lua_saveline	vendor/lua/src/lua.c	421;"	d	file:
lua_saveline	vendor/lua/src/lua.c	430;"	d	file:
lua_setallocf	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setallocf"><code>lua_setallocf<\/code><\/a><\/h3><p>$/;"	a
lua_setallocf	vendor/lua/src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setcstacklimit	vendor/lua/src/lstate.c	/^LUA_API int lua_setcstacklimit (lua_State *L, unsigned int limit) {$/;"	f
lua_setfield	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setfield"><code>lua_setfield<\/code><\/a><\/h3><p>$/;"	a
lua_setfield	vendor/lua/src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setglobal"><code>lua_setglobal<\/code><\/a><\/h3><p>$/;"	a
lua_setglobal	vendor/lua/src/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *name) {$/;"	f
lua_sethook	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_sethook"><code>lua_sethook<\/code><\/a><\/h3><p>$/;"	a
lua_sethook	vendor/lua/src/ldebug.c	/^LUA_API void lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_seti	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_seti"><code>lua_seti<\/code><\/a><\/h3><p>$/;"	a
lua_seti	vendor/lua/src/lapi.c	/^LUA_API void lua_seti (lua_State *L, int idx, lua_Integer n) {$/;"	f
lua_setiuservalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setiuservalue"><code>lua_setiuservalue<\/code><\/a><\/h3><p>$/;"	a
lua_setiuservalue	vendor/lua/src/lapi.c	/^LUA_API int lua_setiuservalue (lua_State *L, int idx, int n) {$/;"	f
lua_setlocal	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setlocal"><code>lua_setlocal<\/code><\/a><\/h3><p>$/;"	a
lua_setlocal	vendor/lua/src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setmetatable"><code>lua_setmetatable<\/code><\/a><\/h3><p>$/;"	a
lua_setmetatable	vendor/lua/src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_settable"><code>lua_settable<\/code><\/a><\/h3><p>$/;"	a
lua_settable	vendor/lua/src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_settop"><code>lua_settop<\/code><\/a><\/h3><p>$/;"	a
lua_settop	vendor/lua/src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setupvalue"><code>lua_setupvalue<\/code><\/a><\/h3><p>$/;"	a
lua_setupvalue	vendor/lua/src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	vendor/lua/src/lua.h	414;"	d
lua_setwarnf	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_setwarnf"><code>lua_setwarnf<\/code><\/a><\/h3><p>$/;"	a
lua_setwarnf	vendor/lua/src/lapi.c	/^void lua_setwarnf (lua_State *L, lua_WarnFunction f, void *ud) {$/;"	f
lua_status	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_status"><code>lua_status<\/code><\/a><\/h3><p>$/;"	a
lua_status	vendor/lua/src/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	vendor/lua/src/lua.c	388;"	d	file:
lua_stdin_is_tty	vendor/lua/src/lua.c	395;"	d	file:
lua_stdin_is_tty	vendor/lua/src/lua.c	400;"	d	file:
lua_str2number	vendor/lua/src/luaconf.h	438;"	d
lua_str2number	vendor/lua/src/luaconf.h	454;"	d
lua_str2number	vendor/lua/src/luaconf.h	469;"	d
lua_str2number	vendor/lua/src/luaconf.h	630;"	d
lua_str2number	vendor/lua/src/luaconf.h	632;"	d
lua_stringtonumber	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_stringtonumber"><code>lua_stringtonumber<\/code><\/a><\/h3><p>$/;"	a
lua_stringtonumber	vendor/lua/src/lapi.c	/^LUA_API size_t lua_stringtonumber (lua_State *L, const char *s) {$/;"	f
lua_strlen	vendor/lua/src/luaconf.h	366;"	d
lua_strx2number	vendor/lua/src/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_strx2number	vendor/lua/src/luaconf.h	599;"	d
lua_tmpnam	vendor/lua/src/loslib.c	123;"	d	file:
lua_tmpnam	vendor/lua/src/loslib.c	133;"	d	file:
lua_toboolean	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_toboolean"><code>lua_toboolean<\/code><\/a><\/h3><p>$/;"	a
lua_toboolean	vendor/lua/src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tocfunction"><code>lua_tocfunction<\/code><\/a><\/h3><p>$/;"	a
lua_tocfunction	vendor/lua/src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_toclose	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_toclose"><code>lua_toclose<\/code><\/a><\/h3><p>$/;"	a
lua_toclose	vendor/lua/src/lapi.c	/^LUA_API void lua_toclose (lua_State *L, int idx) {$/;"	f
lua_tointeger	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tointeger"><code>lua_tointeger<\/code><\/a><\/h3><p>$/;"	a
lua_tointeger	vendor/lua/src/lua.h	363;"	d
lua_tointegerx	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tointegerx"><code>lua_tointegerx<\/code><\/a><\/h3><p>$/;"	a
lua_tointegerx	vendor/lua/src/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_tolstring	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tolstring"><code>lua_tolstring<\/code><\/a><\/h3><p>$/;"	a
lua_tolstring	vendor/lua/src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumber	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tonumber"><code>lua_tonumber<\/code><\/a><\/h3><p>$/;"	a
lua_tonumber	vendor/lua/src/lua.h	362;"	d
lua_tonumberx	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tonumberx"><code>lua_tonumberx<\/code><\/a><\/h3><p>$/;"	a
lua_tonumberx	vendor/lua/src/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *pisnum) {$/;"	f
lua_topointer	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_topointer"><code>lua_topointer<\/code><\/a><\/h3><p>$/;"	a
lua_topointer	vendor/lua/src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tostring	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tostring"><code>lua_tostring<\/code><\/a><\/h3><p>$/;"	a
lua_tostring	vendor/lua/src/lua.h	387;"	d
lua_tothread	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_tothread"><code>lua_tothread<\/code><\/a><\/h3><p>$/;"	a
lua_tothread	vendor/lua/src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsigned	vendor/lua/src/lua.h	408;"	d
lua_tounsignedx	vendor/lua/src/lua.h	407;"	d
lua_touserdata	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_touserdata"><code>lua_touserdata<\/code><\/a><\/h3><p>$/;"	a
lua_touserdata	vendor/lua/src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_type"><code>lua_type<\/code><\/a><\/h3><p>$/;"	a
lua_type	vendor/lua/src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_typename"><code>lua_typename<\/code><\/a><\/h3><p>$/;"	a
lua_typename	vendor/lua/src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_unlock	vendor/lua/src/llimits.h	238;"	d
lua_upvalueid	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_upvalueid"><code>lua_upvalueid<\/code><\/a><\/h3><p>$/;"	a
lua_upvalueid	vendor/lua/src/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvalueindex	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_upvalueindex"><code>lua_upvalueindex<\/code><\/a><\/h3><p>$/;"	a
lua_upvalueindex	vendor/lua/src/lua.h	45;"	d
lua_upvaluejoin	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_upvaluejoin"><code>lua_upvaluejoin<\/code><\/a><\/h3><p>$/;"	a
lua_upvaluejoin	vendor/lua/src/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_version"><code>lua_version<\/code><\/a><\/h3><p>$/;"	a
lua_version	vendor/lua/src/lapi.c	/^LUA_API lua_Number lua_version (lua_State *L) {$/;"	f
lua_warning	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_warning"><code>lua_warning<\/code><\/a><\/h3><p>$/;"	a
lua_warning	vendor/lua/src/lapi.c	/^void lua_warning (lua_State *L, const char *msg, int tocont) {$/;"	f
lua_writeline	vendor/lua/src/lauxlib.h	257;"	d
lua_writestring	vendor/lua/src/lauxlib.h	252;"	d
lua_writestringerror	vendor/lua/src/lauxlib.h	262;"	d
lua_xmove	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_xmove"><code>lua_xmove<\/code><\/a><\/h3><p>$/;"	a
lua_xmove	vendor/lua/src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yield	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_yield"><code>lua_yield<\/code><\/a><\/h3><p>$/;"	a
lua_yield	vendor/lua/src/lua.h	305;"	d
lua_yieldk	vendor/lua/doc/manual.html	/^<hr><h3><a name="lua_yieldk"><code>lua_yieldk<\/code><\/a><\/h3><p>$/;"	a
lua_yieldk	vendor/lua/src/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, lua_KContext ctx,$/;"	f
luac_c	vendor/lua/src/luac.c	7;"	d	file:
luaconf_h	vendor/lua/src/luaconf.h	9;"	d
luai_apicheck	vendor/lua/src/llimits.h	110;"	d
luai_apicheck	vendor/lua/src/luaconf.h	716;"	d
luai_ctype_	vendor/lua/src/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_jmpbuf	vendor/lua/src/ldo.c	61;"	d	file:
luai_jmpbuf	vendor/lua/src/ldo.c	68;"	d	file:
luai_jmpbuf	vendor/lua/src/ldo.c	75;"	d	file:
luai_likely	vendor/lua/src/luaconf.h	673;"	d
luai_likely	vendor/lua/src/luaconf.h	676;"	d
luai_makeseed	vendor/lua/src/lstate.c	/^static unsigned int luai_makeseed (lua_State *L) {$/;"	f	file:
luai_numadd	vendor/lua/src/llimits.h	319;"	d
luai_numdiv	vendor/lua/src/llimits.h	291;"	d
luai_numeq	vendor/lua/src/llimits.h	323;"	d
luai_numge	vendor/lua/src/llimits.h	327;"	d
luai_numgt	vendor/lua/src/llimits.h	326;"	d
luai_numidiv	vendor/lua/src/llimits.h	286;"	d
luai_numisnan	vendor/lua/src/llimits.h	328;"	d
luai_numle	vendor/lua/src/llimits.h	325;"	d
luai_numlt	vendor/lua/src/llimits.h	324;"	d
luai_nummod	vendor/lua/src/llimits.h	306;"	d
luai_nummul	vendor/lua/src/llimits.h	321;"	d
luai_numpow	vendor/lua/src/llimits.h	313;"	d
luai_numsub	vendor/lua/src/llimits.h	320;"	d
luai_numunm	vendor/lua/src/llimits.h	322;"	d
luai_threadyield	vendor/lua/src/llimits.h	246;"	d
luai_unlikely	vendor/lua/src/luaconf.h	674;"	d
luai_unlikely	vendor/lua/src/luaconf.h	677;"	d
luai_userstateclose	vendor/lua/src/llimits.h	259;"	d
luai_userstatefree	vendor/lua/src/llimits.h	267;"	d
luai_userstateopen	vendor/lua/src/llimits.h	255;"	d
luai_userstateresume	vendor/lua/src/llimits.h	271;"	d
luai_userstatethread	vendor/lua/src/llimits.h	263;"	d
luai_userstateyield	vendor/lua/src/llimits.h	275;"	d
luai_verifycode	vendor/lua/src/lundump.c	29;"	d	file:
lualib_h	vendor/lua/src/lualib.h	9;"	d
luaopen_base	vendor/lua/src/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_coroutine	vendor/lua/src/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	vendor/lua/src/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	vendor/lua/src/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	vendor/lua/src/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	vendor/lua/src/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	vendor/lua/src/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	vendor/lua/src/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	vendor/lua/src/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
luaopen_utf8	vendor/lua/src/lutf8lib.c	/^LUAMOD_API int luaopen_utf8 (lua_State *L) {$/;"	f
lundump_c	vendor/lua/src/lundump.c	7;"	d	file:
lundump_h	vendor/lua/src/lundump.h	8;"	d
lut	itoa_ljust.c	/^static const char lut[201] =$/;"	v	file:
lutf8lib_c	vendor/lua/src/lutf8lib.c	7;"	d	file:
lvm_c	vendor/lua/src/lvm.c	7;"	d	file:
lvm_h	vendor/lua/src/lvm.h	8;"	d
lzio_c	vendor/lua/src/lzio.c	7;"	d	file:
lzio_h	vendor/lua/src/lzio.h	9;"	d
magic	protocol_binary.h	/^            uint8_t magic;$/;"	m	struct:__anon65::__anon66
magic	protocol_binary.h	/^            uint8_t magic;$/;"	m	struct:__anon67::__anon68
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	memcached.c	/^int main (int argc, char **argv) {$/;"	f
main	proxy.h	/^    mcp_pool_t *main; \/\/ ptr to original$/;"	m	struct:__anon106
main	sizes.c	/^int main(int argc, char **argv) {$/;"	f
main	testapp.c	/^int main(int argc, char **argv)$/;"	f
main	timedrun.c	/^int main(int argc, char **argv)$/;"	f
main	vendor/lua/src/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	vendor/lua/src/luac.c	/^int main(int argc, char* argv[])$/;"	f
main	vendor/mcmc/example.c	/^int main (int argc, char *agv[]) {$/;"	f
main_auth_data	authfile.c	/^char *main_auth_data = NULL;$/;"	v
main_auth_entries	authfile.c	/^auth_t main_auth_entries[MAX_ENTRIES];$/;"	v
main_base	memcached.c	/^static struct event_base *main_base;$/;"	v	typeref:struct:event_base	file:
main_loop	scripts/damemtop	/^sub main_loop {$/;"	s
mainfunc	vendor/lua/src/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainposition	vendor/lua/src/ltable.c	/^static Node *mainposition (const Table *t, int ktt, const Value *kvl) {$/;"	f	file:
mainpositionTV	vendor/lua/src/ltable.c	/^static Node *mainpositionTV (const Table *t, const TValue *key) {$/;"	f	file:
maint_thread	extstore.c	/^    store_maint_thread *maint_thread;$/;"	m	struct:store_engine	file:
maintain_connections	scripts/damemtop	/^sub maintain_connections {$/;"	s
maintenance_cond	assoc.c	/^static pthread_cond_t maintenance_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
maintenance_lock	assoc.c	/^static pthread_mutex_t maintenance_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
maintenance_tid	assoc.c	/^static pthread_t maintenance_tid;$/;"	v	file:
mainthread	vendor/lua/src/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
make_ascii_get_suffix	proto_text.c	/^static inline int make_ascii_get_suffix(char *suffix, item *it, bool return_cas, int nbytes) {$/;"	f	file:
make_dummy_depfile	depcomp	/^make_dummy_depfile ()$/;"	f
makemask	vendor/lua/src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makevariant	vendor/lua/src/lobject.h	42;"	d
makewhite	vendor/lua/src/lgc.c	71;"	d	file:
malloc_fails	memcached.h	/^    uint64_t      malloc_fails;$/;"	m	struct:stats
man1dir	doc/Makefile	/^man1dir = $(mandir)\/man1$/;"	m
man_MANS	doc/Makefile	/^man_MANS = memcached.1$/;"	m
manager_cond	proxy.h	/^    pthread_cond_t manager_cond;$/;"	m	struct:__anon102
manager_head	proxy.h	/^    pool_head_t manager_head; \/\/ stack for pool deallocation.$/;"	m	struct:__anon102
manager_lock	proxy.h	/^    pthread_mutex_t manager_lock;$/;"	m	struct:__anon102
manager_tid	proxy.h	/^    pthread_t manager_tid; \/\/ deallocation management thread$/;"	m	struct:__anon102
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	doc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
markbeingfnz	vendor/lua/src/lgc.c	/^static lu_mem markbeingfnz (global_State *g) {$/;"	f	file:
markkey	vendor/lua/src/lgc.c	97;"	d	file:
marklen	vendor/lua/src/lua.c	455;"	d	file:
markmt	vendor/lua/src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	vendor/lua/src/lgc.c	99;"	d	file:
markobjectN	vendor/lua/src/lgc.c	105;"	d	file:
markold	vendor/lua/src/lgc.c	/^static void markold (global_State *g, GCObject *from, GCObject *to) {$/;"	f	file:
markupval	vendor/lua/src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	vendor/lua/src/lgc.c	94;"	d	file:
maskcolors	vendor/lua/src/lgc.c	64;"	d	file:
maskflags	vendor/lua/src/ltm.h	54;"	d
maskgcbits	vendor/lua/src/lgc.c	67;"	d	file:
match	vendor/lua/src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	vendor/lua/src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	vendor/lua/src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
matchbalance	vendor/lua/src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	vendor/lua/src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	vendor/lua/src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
math_abs	vendor/lua/src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	vendor/lua/src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	vendor/lua/src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	vendor/lua/src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_ceil	vendor/lua/src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	vendor/lua/src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	vendor/lua/src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	vendor/lua/src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	vendor/lua/src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	vendor/lua/src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	vendor/lua/src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	vendor/lua/src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	vendor/lua/src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	vendor/lua/src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	vendor/lua/src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	vendor/lua/src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	vendor/lua/src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	vendor/lua/src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	vendor/lua/src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	vendor/lua/src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	vendor/lua/src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	vendor/lua/src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	vendor/lua/src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	vendor/lua/src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	vendor/lua/src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	vendor/lua/src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	vendor/lua/src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
math_toint	vendor/lua/src/lmathlib.c	/^static int math_toint (lua_State *L) {$/;"	f	file:
math_type	vendor/lua/src/lmathlib.c	/^static int math_type (lua_State *L) {$/;"	f	file:
math_ult	vendor/lua/src/lmathlib.c	/^static int math_ult (lua_State *L) {$/;"	f	file:
mathlib	vendor/lua/src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max_age_ratio	slab_automove.c	/^    double max_age_ratio;$/;"	m	struct:__anon57	file:
max_age_ratio	slab_automove_extstore.c	/^    double max_age_ratio;$/;"	m	struct:__anon15	file:
max_expand	vendor/lua/src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
max_fds	memcached.c	/^static int max_fds;$/;"	v	file:
max_results	protocol_binary.h	/^                uint32_t max_results;$/;"	m	struct:__anon94::__anon95::__anon96
maxalign	vendor/lua/src/lstrlib.c	/^  int maxalign;$/;"	m	struct:Header	file:
maxbytes	memcached.h	/^    size_t maxbytes;$/;"	m	struct:settings
maxconns	memcached.h	/^    int maxconns;$/;"	m	struct:settings
maxconns_entered	memcached.h	/^    struct timeval maxconns_entered;  \/* last time maxconns entered *\/$/;"	m	struct:stats	typeref:struct:stats::timeval
maxconns_fast	memcached.h	/^    bool maxconns_fast;     \/* Whether or not to early close connections *\/$/;"	m	struct:settings
maxconns_handler	memcached.c	/^static void maxconns_handler(const evutil_socket_t fd, const short which, void *arg) {$/;"	f	file:
maxconnsevent	memcached.c	/^static struct event maxconnsevent;$/;"	v	typeref:struct:event	file:
maximize_sndbuf	memcached.c	/^static void maximize_sndbuf(const int sfd) {$/;"	f	file:
maxstacksize	vendor/lua/src/lobject.h	/^  lu_byte maxstacksize;  \/* number of registers needed by this function *\/$/;"	m	struct:Proto
mc_ptr_t	restart.h	/^    typedef uint32_t mc_ptr_t;$/;"	t
mc_ptr_t	restart.h	/^    typedef uint64_t mc_ptr_t;$/;"	t
mc_resp	memcached.h	/^} mc_resp;$/;"	t	typeref:struct:_mc_resp
mc_resp_bundle	memcached.h	/^typedef struct _mc_resp_bundle mc_resp_bundle;$/;"	t	typeref:struct:_mc_resp_bundle
mc_swap64	util.c	/^static uint64_t mc_swap64(uint64_t in) {$/;"	f	file:
mcmc_check_nonblock_connect	vendor/mcmc/mcmc.c	/^int mcmc_check_nonblock_connect(void *c, int *err) {$/;"	f
mcmc_connect	vendor/mcmc/mcmc.c	/^int mcmc_connect(void *c, char *host, char *port, int options) {$/;"	f
mcmc_ctx	vendor/mcmc/mcmc.c	/^typedef struct mcmc_ctx {$/;"	s	file:
mcmc_ctx_t	vendor/mcmc/mcmc.c	/^} mcmc_ctx_t;$/;"	t	typeref:struct:mcmc_ctx	file:
mcmc_disconnect	vendor/mcmc/mcmc.c	/^int mcmc_disconnect(void *c) {$/;"	f
mcmc_fd	vendor/mcmc/mcmc.c	/^int mcmc_fd(void *c) {$/;"	f
mcmc_get_error	vendor/mcmc/mcmc.c	/^void mcmc_get_error(void *c, char *code, size_t clen, char *msg, size_t mlen) {$/;"	f
mcmc_min_buffer_size	vendor/mcmc/mcmc.c	/^size_t mcmc_min_buffer_size(int options) {$/;"	f
mcmc_parse_buf	vendor/mcmc/mcmc.c	/^int mcmc_parse_buf(void *c, char *buf, size_t read, mcmc_resp_t *r) {$/;"	f
mcmc_request_writev	vendor/mcmc/mcmc.c	/^int mcmc_request_writev(void *c, const struct iovec *iov, int iovcnt, ssize_t *sent, int count) {$/;"	f
mcmc_resp_t	vendor/mcmc/mcmc.h	/^} mcmc_resp_t;$/;"	t	typeref:struct:__anon21
mcmc_send_request	vendor/mcmc/mcmc.c	/^int mcmc_send_request(void *c, const char *request, int len, int count) {$/;"	f
mcmc_size	vendor/mcmc/mcmc.c	/^size_t mcmc_size(int options) {$/;"	f
mcp_await_e	proxy.h	/^enum mcp_await_e {$/;"	g
mcp_await_s	proxy_await.c	/^typedef struct mcp_await_s {$/;"	s	file:
mcp_await_t	proxy_await.c	/^} mcp_await_t;$/;"	t	typeref:struct:mcp_await_s	file:
mcp_backend_next	proxy.h	/^    mcp_backend_next, \/\/ advance to the next IO$/;"	e	enum:mcp_backend_states
mcp_backend_parse	proxy.h	/^    mcp_backend_parse, \/\/ have some buffered data to check$/;"	e	enum:mcp_backend_states
mcp_backend_read	proxy.h	/^    mcp_backend_read = 0, \/\/ waiting to read any response$/;"	e	enum:mcp_backend_states
mcp_backend_read_end	proxy.h	/^    mcp_backend_read_end, \/\/ looking for an "END" marker for GET$/;"	e	enum:mcp_backend_states
mcp_backend_s	proxy.h	/^struct mcp_backend_s {$/;"	s
mcp_backend_states	proxy.h	/^enum mcp_backend_states {$/;"	g
mcp_backend_t	proxy.h	/^typedef struct mcp_backend_s mcp_backend_t;$/;"	t	typeref:struct:mcp_backend_s
mcp_backend_want_read	proxy.h	/^    mcp_backend_want_read, \/\/ read more data to complete command$/;"	e	enum:mcp_backend_states
mcp_config_pools	t/startfile.lua	/^function mcp_config_pools(oldss)$/;"	f
mcp_config_routes	t/startfile.lua	/^function mcp_config_routes(main_zones)$/;"	f
mcp_key_hash_filter_stop	proxy_lua.c	/^static const char *mcp_key_hash_filter_stop(const char *conf, const char *key, size_t klen, size_t *newlen) {$/;"	f	file:
mcp_key_hash_filter_tag	proxy_lua.c	/^static const char *mcp_key_hash_filter_tag(const char *conf, const char *key, size_t klen, size_t *newlen) {$/;"	f	file:
mcp_new_request	proxy_request.c	/^mcp_request_t *mcp_new_request(lua_State *L, mcp_parser_t *pr, const char *command, size_t cmdlen) {$/;"	f
mcp_parser_meta_s	proxy.h	/^struct mcp_parser_meta_s {$/;"	s
mcp_parser_s	proxy.h	/^struct mcp_parser_s {$/;"	s
mcp_parser_t	proxy.h	/^typedef struct mcp_parser_s mcp_parser_t;$/;"	t	typeref:struct:mcp_parser_s
mcp_pool_be_t	proxy.h	/^} mcp_pool_be_t;$/;"	t	typeref:struct:__anon105
mcp_pool_proxy_t	proxy.h	/^} mcp_pool_proxy_t;$/;"	t	typeref:struct:__anon106
mcp_pool_s	proxy.h	/^struct mcp_pool_s {$/;"	s
mcp_pool_t	proxy.h	/^typedef struct mcp_pool_s mcp_pool_t;$/;"	t	typeref:struct:mcp_pool_s
mcp_queue_await_io	proxy_await.c	/^static void mcp_queue_await_io(conn *c, lua_State *Lc, mcp_request_t *rq, int await_ref, bool await_first) {$/;"	f	file:
mcp_queue_io	proto_proxy.c	/^static void mcp_queue_io(conn *c, mc_resp *resp, int coro_ref, lua_State *Lc) {$/;"	f	file:
mcp_request_attach	proxy_request.c	/^void mcp_request_attach(lua_State *L, mcp_request_t *rq, io_pending_proxy_t *p) {$/;"	f
mcp_request_s	proxy.h	/^struct mcp_request_s {$/;"	s
mcp_request_t	proxy.h	/^typedef struct mcp_request_s mcp_request_t;$/;"	t	typeref:struct:mcp_request_s
mcp_resp_mode	proxy.h	/^enum mcp_resp_mode {$/;"	g
mcp_resp_t	proxy.h	/^} mcp_resp_t;$/;"	t	typeref:struct:__anon104
mcplib_add_stat	proxy_ustats.c	/^int mcplib_add_stat(lua_State *L) {$/;"	f
mcplib_attach	proxy_lua.c	/^static int mcplib_attach(lua_State *L) {$/;"	f	file:
mcplib_await	proxy_await.c	/^int mcplib_await(lua_State *L) {$/;"	f
mcplib_await_return	proxy_await.c	/^int mcplib_await_return(io_pending_proxy_t *p) {$/;"	f
mcplib_await_run	proxy_await.c	/^int mcplib_await_run(conn *c, mc_resp *resp, lua_State *L, int coro_ref) {$/;"	f
mcplib_backend	proxy_lua.c	/^static int mcplib_backend(lua_State *L) {$/;"	f	file:
mcplib_backend_connect_timeout	proxy_lua.c	/^static int mcplib_backend_connect_timeout(lua_State *L) {$/;"	f	file:
mcplib_backend_failure_limit	proxy_lua.c	/^static int mcplib_backend_failure_limit(lua_State *L) {$/;"	f	file:
mcplib_backend_gc	proxy_lua.c	/^static int mcplib_backend_gc(lua_State *L) {$/;"	f	file:
mcplib_backend_read_timeout	proxy_lua.c	/^static int mcplib_backend_read_timeout(lua_State *L) {$/;"	f	file:
mcplib_backend_retry_timeout	proxy_lua.c	/^static int mcplib_backend_retry_timeout(lua_State *L) {$/;"	f	file:
mcplib_dist_jump_hash_get_server	proxy_jump_hash.c	/^static uint32_t mcplib_dist_jump_hash_get_server(uint64_t hash, void *ctx) {$/;"	f	file:
mcplib_dist_jump_hash_new	proxy_jump_hash.c	/^static int mcplib_dist_jump_hash_new(lua_State *L) {$/;"	f	file:
mcplib_hash_xxhash	proxy_xxhash.c	/^static struct proxy_hash_func mcplib_hash_xxhash = {$/;"	v	typeref:struct:proxy_hash_func	file:
mcplib_jump_hash_t	proxy_jump_hash.c	/^} mcplib_jump_hash_t;$/;"	t	typeref:struct:__anon12	file:
mcplib_log	proxy_lua.c	/^static int mcplib_log(lua_State *L) {$/;"	f	file:
mcplib_log_req	proxy_lua.c	/^static int mcplib_log_req(lua_State *L) {$/;"	f	file:
mcplib_log_reqsample	proxy_lua.c	/^static int mcplib_log_reqsample(lua_State *L) {$/;"	f	file:
mcplib_open_dist_jump_hash	proxy_jump_hash.c	/^int mcplib_open_dist_jump_hash(lua_State *L) {$/;"	f
mcplib_open_dist_ring_hash	proxy_ring_hash.c	/^int mcplib_open_dist_ring_hash(lua_State *L) {$/;"	f
mcplib_open_hash_xxhash	proxy_xxhash.c	/^int mcplib_open_hash_xxhash(lua_State *L) {$/;"	f
mcplib_pool	proxy_lua.c	/^static int mcplib_pool(lua_State *L) {$/;"	f	file:
mcplib_pool_gc	proxy_lua.c	/^static int mcplib_pool_gc(lua_State *L) {$/;"	f	file:
mcplib_pool_proxy_call	proxy_lua.c	/^static int mcplib_pool_proxy_call(lua_State *L) {$/;"	f	file:
mcplib_pool_proxy_call_helper	proxy_lua.c	/^mcp_backend_t *mcplib_pool_proxy_call_helper(lua_State *L, mcp_pool_t *p, const char *key, size_t len) {$/;"	f
mcplib_pool_proxy_gc	proxy_lua.c	/^static int mcplib_pool_proxy_gc(lua_State *L) {$/;"	f	file:
mcplib_request	proxy_request.c	/^int mcplib_request(lua_State *L) {$/;"	f
mcplib_request_command	proxy_request.c	/^int mcplib_request_command(lua_State *L) {$/;"	f
mcplib_request_flag_token	proxy_request.c	/^int mcplib_request_flag_token(lua_State *L) {$/;"	f
mcplib_request_gc	proxy_request.c	/^int mcplib_request_gc(lua_State *L) {$/;"	f
mcplib_request_has_flag	proxy_request.c	/^int mcplib_request_has_flag(lua_State *L) {$/;"	f
mcplib_request_key	proxy_request.c	/^int mcplib_request_key(lua_State *L) {$/;"	f
mcplib_request_ltrimkey	proxy_request.c	/^int mcplib_request_ltrimkey(lua_State *L) {$/;"	f
mcplib_request_ntokens	proxy_request.c	/^int mcplib_request_ntokens(lua_State *L) {$/;"	f
mcplib_request_rtrimkey	proxy_request.c	/^int mcplib_request_rtrimkey(lua_State *L) {$/;"	f
mcplib_request_token	proxy_request.c	/^int mcplib_request_token(lua_State *L) {$/;"	f
mcplib_response_code	proxy_lua.c	/^static int mcplib_response_code(lua_State *L) {$/;"	f	file:
mcplib_response_gc	proxy_lua.c	/^static int mcplib_response_gc(lua_State *L) {$/;"	f	file:
mcplib_response_hit	proxy_lua.c	/^static int mcplib_response_hit(lua_State *L) {$/;"	f	file:
mcplib_response_line	proxy_lua.c	/^static int mcplib_response_line(lua_State *L) {$/;"	f	file:
mcplib_response_ok	proxy_lua.c	/^static int mcplib_response_ok(lua_State *L) {$/;"	f	file:
mcplib_response_vlen	proxy_lua.c	/^static int mcplib_response_vlen(lua_State *L) {$/;"	f	file:
mcplib_stat	proxy_ustats.c	/^int mcplib_stat(lua_State *L) {$/;"	f
mcplib_tcp_keepalive	proxy_lua.c	/^static int mcplib_tcp_keepalive(lua_State *L) {$/;"	f	file:
mcpres_ref	proxy.h	/^    int mcpres_ref; \/\/ mcp.res reference used for await()$/;"	m	struct:_io_pending_proxy_t
md5_INCLUDED	md5.h	51;"	d
md5_append	md5.c	/^md5_append(md5_state_t *pms, const md5_byte_t *data, int nbytes)$/;"	f
md5_byte_t	md5.h	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t
md5_finish	md5.c	/^md5_finish(md5_state_t *pms, md5_byte_t digest[16])$/;"	f
md5_init	md5.c	/^md5_init(md5_state_t *pms)$/;"	f
md5_process	md5.c	/^md5_process(md5_state_t *pms, const md5_byte_t *data \/*[64]*\/)$/;"	f	file:
md5_state_s	md5.h	/^typedef struct md5_state_s {$/;"	s
md5_state_t	md5.h	/^} md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	md5.h	/^typedef unsigned int md5_word_t; \/* 32-bit word *\/$/;"	t
mem32	xxhash.h	/^   XXH32_hash_t mem32[4];     \/*!< Internal buffer for partial reads. Treated as unsigned char[16]. *\/$/;"	m	struct:XXH32_state_s
mem64	xxhash.h	/^   XXH64_hash_t mem64[4];     \/*!< Internal buffer for partial reads. Treated as unsigned char[32]. *\/$/;"	m	struct:XXH64_state_s
mem_avail	slabs.c	/^static size_t mem_avail = 0;$/;"	v	file:
mem_base	slabs.c	/^static void *mem_base = NULL;$/;"	v	file:
mem_current	slabs.c	/^static void *mem_current = NULL;$/;"	v	file:
mem_get_is	t/lib/MemcachedTest.pm	/^sub mem_get_is {$/;"	s
mem_gets	t/lib/MemcachedTest.pm	/^sub mem_gets {$/;"	s
mem_gets_is	t/lib/MemcachedTest.pm	/^sub mem_gets_is {$/;"	s
mem_limit	slabs.c	/^static size_t mem_limit = 0;$/;"	v	file:
mem_limit_reached	slabs.c	/^static bool mem_limit_reached = false;$/;"	v	file:
mem_malloced	slabs.c	/^static size_t mem_malloced = 0;$/;"	v	file:
mem_move_time	t/lib/MemcachedTest.pm	/^sub mem_move_time {$/;"	s
mem_requested	items.c	/^    uint64_t mem_requested;$/;"	m	struct:__anon10	file:
mem_stats	t/lib/MemcachedTest.pm	/^sub mem_stats {$/;"	s
memcached_CPPFLAGS	Makefile	/^memcached_CPPFLAGS = -DNDEBUG$/;"	m
memcached_DEPENDENCIES	Makefile	/^memcached_DEPENDENCIES = $(am__append_15)$/;"	m
memcached_LDADD	Makefile	/^memcached_LDADD = $(am__append_10) $(am__append_14) $(am__append_19) \\$/;"	m
memcached_OBJECTS	Makefile	/^memcached_OBJECTS = $(am_memcached_OBJECTS)$/;"	m
memcached_SOURCES	Makefile	/^memcached_SOURCES = memcached.c memcached.h hash.c hash.h \\$/;"	m
memcached_debug_CFLAGS	Makefile	/^memcached_debug_CFLAGS = -fprofile-arcs -ftest-coverage -DMEMCACHED_DEBUG$/;"	m
memcached_debug_DEPENDENCIES	Makefile	/^memcached_debug_DEPENDENCIES = $(am__append_17)$/;"	m
memcached_debug_LDADD	Makefile	/^memcached_debug_LDADD = -lgcov $(am__append_11) \\$/;"	m
memcached_debug_LINK	Makefile	/^memcached_debug_LINK = $(CCLD) $(memcached_debug_CFLAGS) $(CFLAGS) \\$/;"	m
memcached_debug_OBJECTS	Makefile	/^memcached_debug_OBJECTS = $(am_memcached_debug_OBJECTS)$/;"	m
memcached_debug_SOURCES	Makefile	/^memcached_debug_SOURCES = $(memcached_SOURCES)$/;"	m
memcached_sasl_pwdb	sasl_defs.c	/^static const char *memcached_sasl_pwdb;$/;"	v	file:
memcached_thread_init	thread.c	/^void memcached_thread_init(int nthreads, void *arg) {$/;"	f
memcheck	slab_automove_extstore.c	/^static void memcheck(slab_automove *a) {$/;"	f	file:
memerrmsg	vendor/lua/src/lstate.h	/^  TString *memerrmsg;  \/* message for memory-allocation errors *\/$/;"	m	struct:global_State
memory_allocate	slabs.c	/^static void *memory_allocate(size_t size) {$/;"	f	file:
memory_file	memcached.h	/^    char *memory_file;  \/* warm restart memory file path *\/$/;"	m	struct:settings
memory_file	restart.c	/^char *memory_file = NULL;$/;"	v
memory_release	slabs.c	/^static void memory_release() {$/;"	f	file:
memsize	xxhash.h	/^   XXH32_hash_t memsize;      \/*!< Amount of data in @ref mem32 *\/$/;"	m	struct:XXH32_state_s
memsize	xxhash.h	/^   XXH32_hash_t memsize;      \/*!< Amount of data in @ref mem64 *\/$/;"	m	struct:XXH64_state_s
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon69	typeref:struct:__anon69::__anon70
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon71	typeref:struct:__anon71::__anon72
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon73	typeref:struct:__anon73::__anon74
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon76	typeref:struct:__anon76::__anon77
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon79	typeref:struct:__anon79::__anon80
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon82	typeref:struct:__anon82::__anon83
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon85	typeref:struct:__anon85::__anon86
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon88	typeref:struct:__anon88::__anon89
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon91	typeref:struct:__anon91::__anon92
message	protocol_binary.h	/^        } message;$/;"	m	union:__anon94	typeref:struct:__anon94::__anon95
meta	proxy.h	/^        struct mcp_parser_meta_s meta;$/;"	m	union:mcp_parser_s::__anon103	typeref:struct:mcp_parser_s::__anon103::mcp_parser_meta_s
meta_get_factory	t/startfile.lua	/^function meta_get_factory(zones, local_zone)$/;"	f
meta_response_old	memcached.h	/^    bool meta_response_old; \/* use "OK" instead of "HD". for response code TEMPORARY! *\/$/;"	m	struct:settings
meta_set_factory	t/startfile.lua	/^function meta_set_factory(zones, local_zone)$/;"	f
metameth	vendor/lua/src/liolib.c	/^static const luaL_Reg metameth[] = {$/;"	v	file:
metamethods	vendor/lua/doc/contents.html	/^<H3><A NAME="metamethods">metamethods<\/A><\/H3>$/;"	a
metatable	vendor/lua/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table
metatable	vendor/lua/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata	typeref:struct:Udata::Table
metatable	vendor/lua/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata0	typeref:struct:Udata0::Table
meth	vendor/lua/src/liolib.c	/^static const luaL_Reg meth[] = {$/;"	v	file:
min_expand	vendor/lua/src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
min_gid	logger.h	/^    uint64_t min_gid; \/* don't show log entries older than this GID *\/$/;"	m	struct:__anon60
miss	storage.c	/^    bool miss;                \/* signal a miss to unlink hdr_it *\/$/;"	m	struct:_io_pending_storage_t	file:
miss	storage.c	/^    bool miss; \/\/ version flipped out from under us$/;"	m	struct:storage_compact_wrap	file:
mix	jenkins_hash.c	79;"	d	file:
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	doc/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	doc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mmap_base	memcached.c	/^    void *mmap_base;$/;"	m	struct:_mc_meta_data	file:
mmap_base	restart.c	/^static void *mmap_base = NULL;$/;"	v	file:
mmap_fd	restart.c	/^static int mmap_fd = 0;$/;"	v	file:
mod	crawler.c	/^    crawler_module_reg_t *mod;$/;"	m	struct:_crawler_module_t	file:
mode	extstore.h	/^    enum obj_io_mode mode;$/;"	m	struct:_obj_io	typeref:enum:_obj_io::obj_io_mode
mode	proto_text.c	/^    char mode; \/\/ single character mode switch, common to ms\/ma$/;"	m	struct:_meta_flags	file:
mode	proxy.h	/^    enum mcp_resp_mode mode; \/\/ reply mode (for noreply fixing)$/;"	m	struct:__anon104	typeref:enum:__anon104::mcp_resp_mode
mode	thread.c	/^    enum conn_queue_item_modes mode;$/;"	m	struct:conn_queue_item	typeref:enum:conn_queue_item::conn_queue_item_modes	file:
mode	vendor/lua/src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
monotonic	memcached.c	/^static bool monotonic = false;$/;"	v	file:
monotonic_start	memcached.c	/^static int64_t monotonic_start;$/;"	v	file:
move_status	slabs.c	/^enum move_status {$/;"	g	file:
movegotosout	vendor/lua/src/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveresults	vendor/lua/src/ldo.c	/^static void moveresults (lua_State *L, StkId res, int nres, int wanted) {$/;"	f	file:
moves_to_cold	items.c	/^    uint64_t moves_to_cold;$/;"	m	struct:__anon10	file:
moves_to_warm	items.c	/^    uint64_t moves_to_warm;$/;"	m	struct:__anon10	file:
moves_within_lru	items.c	/^    uint64_t moves_within_lru;$/;"	m	struct:__anon10	file:
ms	vendor/lua/src/lstrlib.c	/^  MatchState ms;  \/* match state *\/$/;"	m	struct:GMatchState	file:
mset_res	memcached.h	/^    bool mset_res; \/** uses mset format for return code *\/$/;"	m	struct:conn
msghandler	vendor/lua/src/lua.c	/^static int msghandler (lua_State *L) {$/;"	f	file:
mt	vendor/lua/src/lstate.h	/^  struct Table *mt[LUA_NUMTAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table
mul_delta	thread.c	/^enum delta_result_type mul_delta(conn *c, const char *key,$/;"	f
multiline	vendor/lua/src/lua.c	/^static int multiline (lua_State *L) {$/;"	f	file:
mutation_ratio	logger.h	/^    uint16_t mutation_ratio; \/* log one out of every N mutations *\/$/;"	m	struct:_logger
mutex	cache.h	/^    pthread_mutex_t mutex;$/;"	m	struct:__anon20
mutex	extstore.c	/^    pthread_mutex_t mutex; \/* Need to be held for most operations *\/$/;"	m	struct:_store_page	file:
mutex	extstore.c	/^    pthread_mutex_t mutex; \/* covers internal stacks and variables *\/$/;"	m	struct:store_engine	file:
mutex	extstore.c	/^    pthread_mutex_t mutex;$/;"	m	struct:__anon13	file:
mutex	extstore.c	/^    pthread_mutex_t mutex;$/;"	m	struct:__anon14	file:
mutex	items.c	/^    pthread_mutex_t mutex;$/;"	m	struct:_lru_bump_buf	file:
mutex	logger.h	/^    pthread_mutex_t mutex; \/* guard for this + *buf *\/$/;"	m	struct:_logger
mutex	memcached.h	/^    pthread_mutex_t   mutex;$/;"	m	struct:thread_stats
mutex	proxy.h	/^    pthread_mutex_t mutex; \/\/ covers stack.$/;"	m	struct:mcp_backend_s
mutex	proxy.h	/^    pthread_mutex_t mutex; \/\/ covers stack.$/;"	m	struct:proxy_event_thread_s
mutex_lock	memcached.h	939;"	d
mutex_unlock	memcached.h	940;"	d
my_sasl_hostname	sasl_defs.c	/^char my_sasl_hostname[1025];$/;"	v
n	vendor/lua/src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
n	vendor/lua/src/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer
n	vendor/lua/src/liolib.c	/^  int n;  \/* number of elements in buffer 'buff' *\/$/;"	m	struct:__anon47	file:
n	vendor/lua/src/lobject.h	/^  lua_Number n;    \/* float numbers *\/$/;"	m	union:Value
n	vendor/lua/src/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon39
n	vendor/lua/src/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist
n	vendor/lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon42	file:
n	vendor/lua/src/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio
n	vendor/lua/src/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer
nCcalls	vendor/lua/src/lstate.h	/^  l_uint32 nCcalls;  \/* number of nested (non-yieldable | C)  calls *\/$/;"	m	struct:lua_State
na	vendor/lua/src/lparser.c	/^  int na;  \/* number of array elements already stored *\/$/;"	m	struct:ConsControl	file:
nabslineinfo	vendor/lua/src/lparser.h	/^  int nabslineinfo;  \/* number of elements in 'abslineinfo' *\/$/;"	m	struct:FuncState
nactvar	vendor/lua/src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
nactvar	vendor/lua/src/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState
nactvar	vendor/lua/src/lparser.h	/^  lu_byte nactvar;  \/* number of active variables in that position *\/$/;"	m	struct:Labeldesc
name	cache.h	/^    char *name;$/;"	m	struct:__anon20
name	proxy.h	/^    char name[MAX_NAMELEN+1];$/;"	m	struct:mcp_backend_s
name	vendor/lua/src/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg
name	vendor/lua/src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	vendor/lua/src/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc
name	vendor/lua/src/lparser.h	/^    TString *name;  \/* variable name *\/$/;"	m	struct:Vardesc::__anon38
name	vendor/lua/src/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc
name	vendor/lua/src/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug
name	vendor/lua/src/lundump.c	/^  const char *name;$/;"	m	struct:__anon45	file:
names	proxy.h	/^    char **names; \/\/ not needed for worker threads$/;"	m	struct:proxy_user_stats
namewhat	vendor/lua/src/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug
napi_id	memcached.h	/^    int napi_id;                \/* napi id associated with this thread *\/$/;"	m	struct:__anon110
nativeendian	vendor/lua/src/lstrlib.c	/^} nativeendian = {1};$/;"	v	typeref:union:__anon41	file:
nbStripesPerBlock	xxhash.h	/^   size_t nbStripesPerBlock;$/;"	m	struct:XXH3_state_s
nbStripesSoFar	xxhash.h	/^   size_t nbStripesSoFar;$/;"	m	struct:XXH3_state_s
nbytes	logger.h	/^    int nbytes;$/;"	m	struct:logentry_eviction
nbytes	logger.h	/^    int nbytes;$/;"	m	struct:logentry_item_get
nbytes	logger.h	/^    int nbytes;$/;"	m	struct:logentry_item_store
nbytes	memcached.h	/^    int              nbytes;    \/* used. *\/$/;"	m	struct:_strchunk
nbytes	memcached.h	/^    int             nbytes;     \/* size of data *\/$/;"	m	struct:__anon108
nbytes	memcached.h	/^    int             nbytes;     \/* size of data *\/$/;"	m	struct:_stritem
nci	vendor/lua/src/lstate.h	/^  unsigned short nci;  \/* number of items in 'ci' list *\/$/;"	m	struct:lua_State
ndebugvars	vendor/lua/src/lparser.h	/^  short ndebugvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState
need_value	vendor/lua/src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
needclose	vendor/lua/src/lparser.h	/^  lu_byte needclose;  \/* function needs to close upvalues when returning *\/$/;"	m	struct:FuncState
needs_client	crawler.c	/^    bool needs_client; \/* whether or not to grab onto the remote client *\/$/;"	m	struct:__anon56	file:
needs_lock	crawler.c	/^    bool needs_lock; \/* whether or not we need the LRU lock held when eval is called *\/$/;"	m	struct:__anon56	file:
negatecondition	vendor/lua/src/lcode.c	/^static void negatecondition (FuncState *fs, expdesc *e) {$/;"	f	file:
negotiating_prot	memcached.h	/^    negotiating_prot, \/* Discovering the protocol *\/$/;"	e	enum:protocol
network_transport	memcached.h	/^enum network_transport {$/;"	g
new	t/binary-extstore.t	/^sub new {$/;"	s
new	t/binary-sasl.t	/^sub new {$/;"	s
new	t/binary.t	/^sub new {$/;"	s
new	t/lib/MemcachedTest.pm	/^sub new {$/;"	s
new_localvar	vendor/lua/src/lparser.c	/^static int new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	vendor/lua/src/lparser.c	208;"	d	file:
new_memcached	t/lib/MemcachedTest.pm	/^sub new_memcached {$/;"	s
new_sock	t/lib/MemcachedTest.pm	/^sub new_sock {$/;"	s
new_socket	memcached.c	/^static int new_socket(struct addrinfo *ai) {$/;"	f	file:
new_socket_unix	memcached.c	/^static int new_socket_unix(void) {$/;"	f	file:
new_ttl	proto_text.c	/^    unsigned int new_ttl :1;$/;"	m	struct:_meta_flags	file:
new_udp_sock	t/lib/MemcachedTest.pm	/^sub new_udp_sock {$/;"	s
newbox	vendor/lua/src/lauxlib.c	/^static void newbox (lua_State *L) {$/;"	f	file:
newbuffsize	vendor/lua/src/lauxlib.c	/^static size_t newbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f	file:
newfile	vendor/lua/src/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newgotoentry	vendor/lua/src/lparser.c	/^static int newgotoentry (LexState *ls, TString *name, int line, int pc) {$/;"	f	file:
newlabelentry	vendor/lua/src/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newprefile	vendor/lua/src/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newupval	vendor/lua/src/lfunc.c	/^static UpVal *newupval (lua_State *L, int tbc, StkId level, UpVal **prev) {$/;"	f	file:
newupvalue	vendor/lua/src/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
next	assoc.c	/^    item *next;$/;"	m	struct:assoc_iterator	file:
next	extstore.c	/^    struct __store_wbuf *next;$/;"	m	struct:__store_wbuf	typeref:struct:__store_wbuf::__store_wbuf	file:
next	extstore.c	/^    struct _store_page *next;$/;"	m	struct:_store_page	typeref:struct:_store_page::_store_page	file:
next	extstore.h	/^    struct _obj_io *next;$/;"	m	struct:_obj_io	typeref:struct:_obj_io::_obj_io
next	extstore.h	/^    struct extstore_conf_file *next;$/;"	m	struct:extstore_conf_file	typeref:struct:extstore_conf_file::extstore_conf_file
next	items.c	/^    struct _lru_bump_buf *next;$/;"	m	struct:_lru_bump_buf	typeref:struct:_lru_bump_buf::_lru_bump_buf	file:
next	logger.h	/^    struct _logger *next;$/;"	m	struct:_logger	typeref:struct:_logger::_logger
next	memcached.h	/^    conn   *next;     \/* Used for generating a list of conn structures *\/$/;"	m	struct:conn
next	memcached.h	/^    struct _mc_resp *next; \/\/ choo choo.$/;"	m	struct:_mc_resp	typeref:struct:_mc_resp::_mc_resp
next	memcached.h	/^    struct _mc_resp_bundle *next;$/;"	m	struct:_mc_resp_bundle	typeref:struct:_mc_resp_bundle::_mc_resp_bundle
next	memcached.h	/^    struct _strchunk *next;     \/* points within its own chain. *\/$/;"	m	struct:_strchunk	typeref:struct:_strchunk::_strchunk
next	memcached.h	/^    struct _stritem *next;$/;"	m	struct:__anon108	typeref:struct:__anon108::_stritem
next	memcached.h	/^    struct _stritem *next;$/;"	m	struct:_stritem	typeref:struct:_stritem::_stritem
next	proxy.h	/^    STAILQ_ENTRY(mcp_pool_s) next; \/\/ stack for deallocator.$/;"	m	struct:mcp_pool_s
next	proxy.h	/^    struct _io_pending_proxy_t *next; \/\/ stack for IO submission$/;"	m	struct:_io_pending_proxy_t	typeref:struct:_io_pending_proxy_t::_io_pending_proxy_t
next	restart.c	/^    struct _restart_data_cb *next; \/\/ callbacks are ordered stack$/;"	m	struct:_restart_data_cb	typeref:struct:_restart_data_cb::_restart_data_cb	file:
next	stats_prefix.h	/^    PREFIX_STATS *next;$/;"	m	struct:_prefix_stats
next	vendor/lua/src/llex.c	32;"	d	file:
next	vendor/lua/src/lobject.h	/^      struct UpVal *next;  \/* linked list *\/$/;"	m	struct:UpVal::__anon53::__anon54	typeref:struct:UpVal::__anon53::__anon54::UpVal
next	vendor/lua/src/lobject.h	/^    int next;  \/* for chaining *\/$/;"	m	struct:Node::NodeKey
next	vendor/lua/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::
next_check	memcached.h	/^    uint8_t next_check; \/\/ next object to check on assignment.$/;"	m	struct:_mc_resp_bundle
next_ci	vendor/lua/src/ldo.c	473;"	d	file:
nextc	vendor/lua/src/liolib.c	/^static int nextc (RN *rn) {$/;"	f	file:
nextline	vendor/lua/src/ldebug.c	/^static int nextline (const Proto *p, int currentline, int pc) {$/;"	f	file:
nextraargs	vendor/lua/src/lstate.h	/^      int nextraargs;  \/* # of extra arguments in vararg functions *\/$/;"	m	struct:CallInfo::__anon29::__anon30
nextrand	vendor/lua/src/lmathlib.c	/^static Rand64 nextrand (Rand64 *state) {$/;"	f	file:
nh	vendor/lua/src/lparser.c	/^  int nh;  \/* total number of 'record' elements *\/$/;"	m	struct:ConsControl	file:
nilK	vendor/lua/src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
nilvalue	vendor/lua/src/lstate.h	/^  TValue nilvalue;  \/* a nil value *\/$/;"	m	struct:global_State
nk	vendor/lua/src/lparser.h	/^  int nk;  \/* number of elements in 'k' *\/$/;"	m	struct:FuncState
nkey	logger.h	/^    uint8_t nkey;$/;"	m	struct:logentry_eviction
nkey	logger.h	/^    uint8_t nkey;$/;"	m	struct:logentry_ext_write
nkey	logger.h	/^    uint8_t nkey;$/;"	m	struct:logentry_item_get
nkey	logger.h	/^    uint8_t nkey;$/;"	m	struct:logentry_item_store
nkey	memcached.h	/^    uint8_t         nkey;       \/* key length, w\/terminating null and padding *\/$/;"	m	struct:__anon108
nkey	memcached.h	/^    uint8_t         nkey;       \/* key length, w\/terminating null and padding *\/$/;"	m	struct:_stritem
noLuaClosure	vendor/lua/src/ldebug.c	34;"	d	file:
no_reply	proto_text.c	/^    unsigned int no_reply :1;$/;"	m	struct:_meta_flags	file:
no_update	proto_text.c	/^    unsigned int no_update :1;$/;"	m	struct:_meta_flags	file:
node	vendor/lua/src/lobject.h	/^  Node *node;$/;"	m	struct:Table
nodefromval	vendor/lua/src/ltable.h	35;"	d
noenv	vendor/lua/src/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
noexp	crawler.h	/^    uint64_t noexp;$/;"	m	struct:__anon99
noinst_PROGRAMS	Makefile	/^noinst_PROGRAMS = memcached-debug$(EXEEXT) sizes$(EXEEXT) \\$/;"	m
noop	t/binary-extstore.t	/^sub noop {$/;"	s
noop	t/binary-sasl.t	/^sub noop {$/;"	s
noop	t/binary.t	/^sub noop {$/;"	s
noreply	memcached.h	/^    bool   noreply;   \/* True if the reply should not be sent. *\/$/;"	m	struct:conn
noreply	proxy.h	/^    bool noreply; \/\/ if quiet\/noreply mode is set.$/;"	m	struct:mcp_parser_s
noreply	storage.c	/^    bool noreply;             \/* whether the response had noreply set *\/$/;"	m	struct:_io_pending_storage_t	file:
nospecials	vendor/lua/src/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
not_found	t/binary-extstore.t	/^sub not_found {$/;"	s
not_found	t/binary-sasl.t	/^sub not_found {$/;"	s
not_found	t/binary.t	/^sub not_found {$/;"	s
notify_event	memcached.h	/^    struct event notify_event;  \/* listen event for notify pipe *\/$/;"	m	struct:__anon110	typeref:struct:__anon110::event
notify_event	proxy.h	/^    struct event notify_event; \/\/ listen event for the notify pipe\/eventfd.$/;"	m	struct:proxy_event_thread_s	typeref:struct:proxy_event_thread_s::event
notify_event_fd	memcached.h	/^    int notify_event_fd;        \/* notify counter *\/$/;"	m	struct:__anon110
notify_receive_fd	memcached.h	/^    int notify_receive_fd;      \/* receiving end of notify pipe *\/$/;"	m	struct:__anon110
notify_receive_fd	proxy.h	/^    int notify_receive_fd;$/;"	m	struct:proxy_event_thread_s
notify_send_fd	memcached.h	/^    int notify_send_fd;         \/* sending end of notify pipe *\/$/;"	m	struct:__anon110
notify_send_fd	proxy.h	/^    int notify_send_fd;$/;"	m	struct:proxy_event_thread_s
notify_worker	thread.c	/^static void notify_worker(LIBEVENT_THREAD *t, CQ_ITEM *item) {$/;"	f	file:
notify_worker_fd	thread.c	/^static void notify_worker_fd(LIBEVENT_THREAD *t, int sfd, enum conn_queue_item_modes mode) {$/;"	f	file:
notm	vendor/lua/src/ltm.h	61;"	d
novariant	vendor/lua/src/lobject.h	78;"	d
np	vendor/lua/src/lparser.h	/^  int np;  \/* number of elements in 'p' *\/$/;"	m	struct:FuncState
nparams	vendor/lua/src/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug
nres	vendor/lua/src/lstate.h	/^    int nres;  \/* number of values returned *\/$/;"	m	union:CallInfo::__anon32
nresults	vendor/lua/src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
nresults	vendor/lua/src/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo
ntohll	util.c	/^uint64_t ntohll(uint64_t val) {$/;"	f
ntokens	proxy.h	/^    uint8_t ntokens;$/;"	m	struct:mcp_parser_s
ntransfer	vendor/lua/src/lstate.h	/^      unsigned short ntransfer;  \/* number of values transferred *\/$/;"	m	struct:CallInfo::__anon32::__anon33
ntransfer	vendor/lua/src/lua.h	/^  unsigned short ntransfer;   \/* (r) number of transferred values *\/$/;"	m	struct:lua_Debug
num2straux	vendor/lua/src/lstrlib.c	/^static int num2straux (char *buff, int sz, lua_Number x) {$/;"	f	file:
num_deletes	stats_prefix.h	/^    uint64_t num_deletes;$/;"	m	struct:_prefix_stats
num_gets	stats_prefix.h	/^    uint64_t num_gets;$/;"	m	struct:_prefix_stats
num_hits	stats_prefix.h	/^    uint64_t num_hits;$/;"	m	struct:_prefix_stats
num_napi_ids	memcached.h	/^    int num_napi_ids;   \/* maximum number of NAPI IDs *\/$/;"	m	struct:settings
num_prefixes	stats_prefix.c	/^static int num_prefixes = 0;$/;"	v	file:
num_sets	stats_prefix.h	/^    uint64_t num_sets;$/;"	m	struct:_prefix_stats
num_stats	proxy.h	/^    size_t num_stats; \/\/ number of stats, for sizing various arrays$/;"	m	struct:proxy_user_stats
num_threads	memcached.h	/^    int num_threads;        \/* number of worker (without dispatcher) libevent threads to run *\/$/;"	m	struct:settings
num_threads_per_udp	memcached.h	/^    int num_threads_per_udp; \/* number of worker threads serving each udp socket *\/$/;"	m	struct:settings
numarith	vendor/lua/src/lobject.c	/^static lua_Number numarith (lua_State *L, int op, lua_Number v1,$/;"	f	file:
numparams	vendor/lua/src/lobject.h	/^  lu_byte numparams;  \/* number of fixed (named) parameters *\/$/;"	m	struct:Proto
numusearray	vendor/lua/src/ltable.c	/^static unsigned int numusearray (const Table *t, unsigned int *nums) {$/;"	f	file:
numusehash	vendor/lua/src/ltable.c	/^static int numusehash (const Table *t, unsigned int *nums, unsigned int *pna) {$/;"	f	file:
nups	vendor/lua/src/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState
nups	vendor/lua/src/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug
nuse	vendor/lua/src/lstate.h	/^  int nuse;  \/* number of elements *\/$/;"	m	struct:stringtable
nuvalue	vendor/lua/src/lobject.h	/^  unsigned short nuvalue;  \/* number of user values *\/$/;"	m	struct:Udata
nuvalue	vendor/lua/src/lobject.h	/^  unsigned short nuvalue;  \/* number of user values *\/$/;"	m	struct:Udata0
nval	vendor/lua/src/lparser.h	/^    lua_Number nval;  \/* for VKFLT *\/$/;"	m	union:expdesc::__anon35
nvalue	vendor/lua/src/lobject.h	317;"	d
nw2black	vendor/lua/src/lgc.h	99;"	d
nyci	vendor/lua/src/lstate.h	112;"	d
nyield	vendor/lua/src/lstate.h	/^    int nyield;  \/* number of values yielded *\/$/;"	m	union:CallInfo::__anon32
nz_strcmp	memcached.c	/^static int nz_strcmp(int nzlength, const char *nz, const char *z) {$/;"	f	file:
obj2gco	vendor/lua/src/lstate.h	385;"	d
obj_count	extstore.c	/^    uint64_t obj_count; \/* _delete can decrease post-closing *\/$/;"	m	struct:_store_page	file:
obj_io	extstore.h	/^typedef struct _obj_io obj_io;$/;"	t	typeref:struct:_obj_io
obj_io_cb	extstore.h	/^typedef void (*obj_io_cb)(void *e, obj_io *io, int ret);$/;"	t
obj_io_mode	extstore.h	/^enum obj_io_mode {$/;"	g
objects_evicted	extstore.h	/^    uint64_t objects_evicted;$/;"	m	struct:extstore_stats
objects_read	extstore.h	/^    uint64_t objects_read;$/;"	m	struct:extstore_stats
objects_used	extstore.h	/^    uint64_t objects_used; \/* total number of objects stored *\/$/;"	m	struct:extstore_stats
objects_written	extstore.h	/^    uint64_t objects_written;$/;"	m	struct:extstore_stats
offset	extstore.c	/^    uint64_t offset; \/* starting address of page within fd *\/$/;"	m	struct:_store_page	file:
offset	extstore.c	/^    unsigned int offset; \/* offset into page this write starts at *\/$/;"	m	struct:__store_wbuf	file:
offset	extstore.h	/^    uint64_t offset; \/\/ internal usage$/;"	m	struct:extstore_conf_file
offset	extstore.h	/^    unsigned int offset;  \/* for read mode *\/$/;"	m	struct:_obj_io
offset	memcached.h	/^        size_t offset;$/;"	m	struct:conn::__anon111
offset	memcached.h	/^    unsigned int offset; \/* from IO header *\/$/;"	m	struct:__anon109
old1	vendor/lua/src/lstate.h	/^  GCObject *old1;  \/* start of old1 objects *\/$/;"	m	struct:global_State
old_base	memcached.c	/^    uint64_t old_base;$/;"	m	struct:_mc_meta_data	file:
old_errfunc	vendor/lua/src/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon29::__anon31
old_hashtable	assoc.c	/^static item** old_hashtable = 0;$/;"	v	file:
oldest_cas	memcached.h	/^    uint64_t oldest_cas; \/* ignore existing items with CAS values lower than this *\/$/;"	m	struct:settings
oldest_live	memcached.h	/^    rel_time_t oldest_live; \/* ignore existing items older than this *\/$/;"	m	struct:settings
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	doc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldpc	vendor/lua/src/lstate.h	/^  int oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State
op_arith	vendor/lua/src/lvm.c	947;"	d	file:
op_arithI	vendor/lua/src/lvm.c	890;"	d	file:
op_arithK	vendor/lua/src/lvm.c	956;"	d	file:
op_arith_aux	vendor/lua/src/lvm.c	936;"	d	file:
op_arithf	vendor/lua/src/lvm.c	918;"	d	file:
op_arithfK	vendor/lua/src/lvm.c	927;"	d	file:
op_arithf_aux	vendor/lua/src/lvm.c	908;"	d	file:
op_bitwise	vendor/lua/src/lvm.c	978;"	d	file:
op_bitwiseK	vendor/lua/src/lvm.c	965;"	d	file:
op_order	vendor/lua/src/lvm.c	992;"	d	file:
op_orderI	vendor/lua/src/lvm.c	1011;"	d	file:
opaque	memcached.h	/^    int opaque;$/;"	m	struct:conn
opaque	protocol_binary.h	/^            uint32_t opaque;$/;"	m	struct:__anon65::__anon66
opaque	protocol_binary.h	/^            uint32_t opaque;$/;"	m	struct:__anon67::__anon68
opcode	protocol_binary.h	/^            uint8_t opcode;$/;"	m	struct:__anon65::__anon66
opcode	protocol_binary.h	/^            uint8_t opcode;$/;"	m	struct:__anon67::__anon68
open	vendor/lua/src/lobject.h	/^    } open;$/;"	m	union:UpVal::__anon53	typeref:struct:UpVal::__anon53::__anon54
open_bundle	memcached.h	/^    mc_resp_bundle *open_bundle;$/;"	m	struct:__anon110
open_func	vendor/lua/src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
opencheck	vendor/lua/src/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
openupval	vendor/lua/src/lstate.h	/^  UpVal *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State
opmode	vendor/lua/src/lopcodes.h	385;"	d
opnames	vendor/lua/src/lopnames.h	/^static const char *const opnames[] = {$/;"	v
orig_clsid	memcached.h	/^    uint8_t          orig_clsid; \/* For obj hdr chunks slabs_clsid is fake. *\/$/;"	m	struct:_strchunk
os_clock	vendor/lua/src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	vendor/lua/src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	vendor/lua/src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	vendor/lua/src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	vendor/lua/src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	vendor/lua/src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	vendor/lua/src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	vendor/lua/src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	vendor/lua/src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	vendor/lua/src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	vendor/lua/src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
other	vendor/lua/doc/readme.html	/^<H3><A NAME="other">Building Lua on other systems<\/A><\/H3>$/;"	a
otherwhite	vendor/lua/src/lgc.h	94;"	d
out1	itoa_ljust.c	/^static inline char* out1(const char in, char* p) {$/;"	f	file:
out2	itoa_ljust.c	/^static inline char* out2(const int d, char* p) {$/;"	f	file:
out_errstring	memcached.c	/^void out_errstring(conn *c, const char *str) {$/;"	f
out_of_memory	memcached.c	/^void out_of_memory(conn *c, char *ascii_error) {$/;"	f
out_string	memcached.c	/^void out_string(conn *c, const char *str) {$/;"	f
outofmemory	items.c	/^    uint64_t outofmemory;$/;"	m	struct:__anon10	file:
outofmemory	items.h	/^    int64_t outofmemory;$/;"	m	struct:__anon19
output	vendor/lua/src/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
p	vendor/lua/src/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto
p	vendor/lua/src/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto
p	vendor/lua/src/lobject.h	/^  void *p;         \/* light userdata *\/$/;"	m	union:Value
p	vendor/lua/src/lstate.h	/^  struct Proto p;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Proto
p	vendor/lua/src/lstrlib.c	/^  const char *p;  \/* pattern *\/$/;"	m	struct:GMatchState	file:
p	vendor/lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon42	file:
p	vendor/lua/src/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio
p_end	vendor/lua/src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
packI	vendor/lua/src/lmathlib.c	/^static Rand64 packI (lu_int32 h, lu_int32 l) {$/;"	f	file:
packint	vendor/lua/src/lstrlib.c	/^static void packint (luaL_Buffer *b, lua_Unsigned n,$/;"	f	file:
pad	logger.h	/^    uint8_t pad;$/;"	m	struct:_logentry
page_allocs	extstore.h	/^    uint64_t page_allocs;$/;"	m	struct:extstore_stats
page_bucketcount	extstore.c	/^    unsigned int page_bucketcount; \/* count of potential page buckets *\/$/;"	m	struct:store_engine	file:
page_buckets	extstore.c	/^    store_page **page_buckets; \/* stack of pages currently allocated to each bucket *\/$/;"	m	struct:store_engine	file:
page_buckets	extstore.h	/^    unsigned int page_buckets; \/\/ number of different writeable pages$/;"	m	struct:extstore_conf
page_count	extstore.c	/^    unsigned int page_count;$/;"	m	struct:store_engine	file:
page_count	extstore.h	/^    uint64_t page_count; \/* total page count *\/$/;"	m	struct:extstore_stats
page_count	extstore.h	/^    unsigned int page_count;$/;"	m	struct:extstore_conf
page_count	extstore.h	/^    unsigned int page_count;$/;"	m	struct:extstore_conf_file
page_data	extstore.h	/^    struct extstore_page_data *page_data;$/;"	m	struct:extstore_stats	typeref:struct:extstore_stats::extstore_page_data
page_evictions	extstore.h	/^    uint64_t page_evictions;$/;"	m	struct:extstore_stats
page_free	extstore.c	/^    unsigned int page_free; \/* unallocated pages *\/$/;"	m	struct:store_engine	file:
page_freelist	extstore.c	/^    store_page *page_freelist;$/;"	m	struct:store_engine	file:
page_id	extstore.h	/^    unsigned short page_id; \/* for read mode *\/$/;"	m	struct:_obj_io
page_id	memcached.h	/^    unsigned short page_id; \/* from IO header *\/$/;"	m	struct:__anon109
page_reclaims	extstore.h	/^    uint64_t page_reclaims;$/;"	m	struct:extstore_stats
page_size	extstore.c	/^    size_t page_size;$/;"	m	struct:store_engine	file:
page_size	extstore.h	/^    uint64_t page_size; \/* size in bytes per page (supplied by caller) *\/$/;"	m	struct:extstore_stats
page_size	extstore.h	/^    unsigned int page_size; \/\/ ideally 64-256M in size$/;"	m	struct:extstore_conf
page_version	extstore.h	/^    unsigned int page_version;     \/* page version for read mode *\/$/;"	m	struct:_obj_io
page_version	memcached.h	/^    unsigned int page_version; \/* from IO header *\/$/;"	m	struct:__anon109
pages	extstore.c	/^    store_page *pages; \/* directly addressable page list *\/$/;"	m	struct:store_engine	file:
pages_free	extstore.h	/^    uint64_t pages_free; \/* currently unallocated\/unused pages *\/$/;"	m	struct:extstore_stats
pages_used	extstore.h	/^    uint64_t pages_used;$/;"	m	struct:extstore_stats
panic	vendor/lua/src/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
panic	vendor/lua/src/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State
parlist	vendor/lua/src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
parse_cb	logger.h	/^    entry_parse_cb parse_cb;$/;"	m	struct:_entry_details
parsed	proxy.h	/^    uint32_t parsed; \/\/ how far into the request we parsed already$/;"	m	struct:mcp_parser_s
partition	vendor/lua/src/ltablib.c	/^static IdxT partition (lua_State *L, IdxT lo, IdxT up) {$/;"	f	file:
pass	authfile.c	/^    char *pass;$/;"	m	struct:auth_entry	file:
patchlistaux	vendor/lua/src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	vendor/lua/src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
pause_thread_types	memcached.h	/^enum pause_thread_types {$/;"	g
pause_threads	thread.c	/^void pause_threads(enum pause_thread_types type) {$/;"	f
pc	vendor/lua/src/lobject.h	/^  int pc;$/;"	m	struct:AbsLineInfo
pc	vendor/lua/src/lparser.h	/^  int pc;  \/* next position to code (equivalent to 'ncode') *\/$/;"	m	struct:FuncState
pc	vendor/lua/src/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc
pcRel	vendor/lua/src/ldebug.h	14;"	d
pdf-LUAL_BUFFERSIZE	vendor/lua/doc/manual.html	/^with the predefined size <a name="pdf-LUAL_BUFFERSIZE"><code>LUAL_BUFFERSIZE<\/code><\/a>.$/;"	a
pdf-LUA_CPATH	vendor/lua/doc/manual.html	/^or the environment variable <a name="pdf-LUA_CPATH"><code>LUA_CPATH<\/code><\/a>,$/;"	a
pdf-LUA_CPATH_5_4	vendor/lua/doc/manual.html	/^using the environment variable <a name="pdf-LUA_CPATH_5_4"><code>LUA_CPATH_5_4<\/code><\/a>,$/;"	a
pdf-LUA_ERRERR	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRERR"><code>LUA_ERRERR<\/code><\/a>: <\/b> error while running the message handler.<\/li>$/;"	a
pdf-LUA_ERRFILE	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRFILE"><code>LUA_ERRFILE<\/code><\/a>: <\/b> a file-related error;$/;"	a
pdf-LUA_ERRMEM	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRMEM"><code>LUA_ERRMEM<\/code><\/a>: <\/b>$/;"	a
pdf-LUA_ERRRUN	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRRUN"><code>LUA_ERRRUN<\/code><\/a>: <\/b> a runtime error.<\/li>$/;"	a
pdf-LUA_ERRSYNTAX	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_ERRSYNTAX"><code>LUA_ERRSYNTAX<\/code><\/a>: <\/b> syntax error during precompilation.<\/li>$/;"	a
pdf-LUA_HOOKCALL	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_HOOKCALL"><code>LUA_HOOKCALL<\/code><\/a>, <a name="pdf-LUA_HOOKRET"><code>LUA_HOOKRET<\/code><\/a>,$/;"	a
pdf-LUA_HOOKCOUNT	vendor/lua/doc/manual.html	/^and <a name="pdf-LUA_HOOKCOUNT"><code>LUA_HOOKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_HOOKTAILCALL	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_HOOKTAILCALL"><code>LUA_HOOKTAILCALL<\/code><\/a>, <a name="pdf-LUA_HOOKLINE"><code>LUA_HOOKLINE<\/code><\/a>,$/;"	a
pdf-LUA_INIT	vendor/lua/doc/manual.html	/^(or <a name="pdf-LUA_INIT"><code>LUA_INIT<\/code><\/a> if the versioned name is not defined)$/;"	a
pdf-LUA_INIT_5_4	vendor/lua/doc/manual.html	/^the interpreter checks for an environment variable <a name="pdf-LUA_INIT_5_4"><code>LUA_INIT_5_4<\/code><\/a>$/;"	a
pdf-LUA_MASKCALL	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_MASKCALL"><code>LUA_MASKCALL<\/code><\/a>,$/;"	a
pdf-LUA_MASKCOUNT	vendor/lua/doc/manual.html	/^and <a name="pdf-LUA_MASKCOUNT"><code>LUA_MASKCOUNT<\/code><\/a>.$/;"	a
pdf-LUA_MASKLINE	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_MASKLINE"><code>LUA_MASKLINE<\/code><\/a>,$/;"	a
pdf-LUA_MASKRET	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_MASKRET"><code>LUA_MASKRET<\/code><\/a>,$/;"	a
pdf-LUA_MININTEGER	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_MININTEGER"><code>LUA_MININTEGER<\/code><\/a> and <a name="pdf-LUA_MAXINTEGER"><code>LUA_MAXINTEGER<\/code><\/a>,$/;"	a
pdf-LUA_MINSTACK	vendor/lua/doc/manual.html	/^at least <a name="pdf-LUA_MINSTACK"><code>LUA_MINSTACK<\/code><\/a> extra elements;$/;"	a
pdf-LUA_MULTRET	vendor/lua/doc/manual.html	/^unless <code>nresults<\/code> is <a name="pdf-LUA_MULTRET"><code>LUA_MULTRET<\/code><\/a>.$/;"	a
pdf-LUA_NOREF	vendor/lua/doc/manual.html	/^The constant <a name="pdf-LUA_NOREF"><code>LUA_NOREF<\/code><\/a> is guaranteed to be different$/;"	a
pdf-LUA_OK	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OK"><code>LUA_OK<\/code><\/a> (0): <\/b> no errors.<\/li>$/;"	a
pdf-LUA_OPADD	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPADD"><code>LUA_OPADD<\/code><\/a>: <\/b> performs addition (<code>+<\/code>)<\/li>$/;"	a
pdf-LUA_OPBAND	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBAND"><code>LUA_OPBAND<\/code><\/a>: <\/b> performs bitwise AND (<code>&amp;<\/code>)<\/li>$/;"	a
pdf-LUA_OPBNOT	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBNOT"><code>LUA_OPBNOT<\/code><\/a>: <\/b> performs bitwise NOT (<code>~<\/code>)<\/li>$/;"	a
pdf-LUA_OPBOR	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBOR"><code>LUA_OPBOR<\/code><\/a>: <\/b> performs bitwise OR (<code>|<\/code>)<\/li>$/;"	a
pdf-LUA_OPBXOR	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPBXOR"><code>LUA_OPBXOR<\/code><\/a>: <\/b> performs bitwise exclusive OR (<code>~<\/code>)<\/li>$/;"	a
pdf-LUA_OPDIV	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPDIV"><code>LUA_OPDIV<\/code><\/a>: <\/b> performs float division (<code>\/<\/code>)<\/li>$/;"	a
pdf-LUA_OPEQ	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPEQ"><code>LUA_OPEQ<\/code><\/a>: <\/b> compares for equality (<code>==<\/code>)<\/li>$/;"	a
pdf-LUA_OPIDIV	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPIDIV"><code>LUA_OPIDIV<\/code><\/a>: <\/b> performs floor division (<code>\/\/<\/code>)<\/li>$/;"	a
pdf-LUA_OPLE	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPLE"><code>LUA_OPLE<\/code><\/a>: <\/b> compares for less or equal (<code>&lt;=<\/code>)<\/li>$/;"	a
pdf-LUA_OPLT	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPLT"><code>LUA_OPLT<\/code><\/a>: <\/b> compares for less than (<code>&lt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPMOD	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPMOD"><code>LUA_OPMOD<\/code><\/a>: <\/b> performs modulo (<code>%<\/code>)<\/li>$/;"	a
pdf-LUA_OPMUL	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPMUL"><code>LUA_OPMUL<\/code><\/a>: <\/b> performs multiplication (<code>*<\/code>)<\/li>$/;"	a
pdf-LUA_OPPOW	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPPOW"><code>LUA_OPPOW<\/code><\/a>: <\/b> performs exponentiation (<code>^<\/code>)<\/li>$/;"	a
pdf-LUA_OPSHL	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPSHL"><code>LUA_OPSHL<\/code><\/a>: <\/b> performs left shift (<code>&lt;&lt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPSHR	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPSHR"><code>LUA_OPSHR<\/code><\/a>: <\/b> performs right shift (<code>&gt;&gt;<\/code>)<\/li>$/;"	a
pdf-LUA_OPSUB	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPSUB"><code>LUA_OPSUB<\/code><\/a>: <\/b> performs subtraction (<code>-<\/code>)<\/li>$/;"	a
pdf-LUA_OPUNM	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_OPUNM"><code>LUA_OPUNM<\/code><\/a>: <\/b> performs mathematical negation (unary <code>-<\/code>)<\/li>$/;"	a
pdf-LUA_PATH	vendor/lua/doc/manual.html	/^the environment variable <a name="pdf-LUA_PATH"><code>LUA_PATH<\/code><\/a> or$/;"	a
pdf-LUA_PATH_5_4	vendor/lua/doc/manual.html	/^the value of the environment variable <a name="pdf-LUA_PATH_5_4"><code>LUA_PATH_5_4<\/code><\/a> or$/;"	a
pdf-LUA_REFNIL	vendor/lua/doc/manual.html	/^<a href="#luaL_ref"><code>luaL_ref<\/code><\/a> returns the constant <a name="pdf-LUA_REFNIL"><code>LUA_REFNIL<\/code><\/a>.$/;"	a
pdf-LUA_REGISTRYINDEX	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_REGISTRYINDEX"><code>LUA_REGISTRYINDEX<\/code><\/a>.$/;"	a
pdf-LUA_RIDX_GLOBALS	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_RIDX_GLOBALS"><code>LUA_RIDX_GLOBALS<\/code><\/a>: <\/b> At this index the registry has$/;"	a
pdf-LUA_RIDX_MAINTHREAD	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_RIDX_MAINTHREAD"><code>LUA_RIDX_MAINTHREAD<\/code><\/a>: <\/b> At this index the registry has$/;"	a
pdf-LUA_TBOOLEAN	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TBOOLEAN"><code>LUA_TBOOLEAN<\/code><\/a>,$/;"	a
pdf-LUA_TFUNCTION	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TFUNCTION"><code>LUA_TFUNCTION<\/code><\/a>,$/;"	a
pdf-LUA_TLIGHTUSERDATA	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TLIGHTUSERDATA"><code>LUA_TLIGHTUSERDATA<\/code><\/a>.$/;"	a
pdf-LUA_TNIL	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TNIL"><code>LUA_TNIL<\/code><\/a>,$/;"	a
pdf-LUA_TNONE	vendor/lua/doc/manual.html	/^contains a value of a virtual type <a name="pdf-LUA_TNONE"><code>LUA_TNONE<\/code><\/a>,$/;"	a
pdf-LUA_TNUMBER	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TNUMBER"><code>LUA_TNUMBER<\/code><\/a>,$/;"	a
pdf-LUA_TSTRING	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TSTRING"><code>LUA_TSTRING<\/code><\/a>,$/;"	a
pdf-LUA_TTABLE	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TTABLE"><code>LUA_TTABLE<\/code><\/a>,$/;"	a
pdf-LUA_TTHREAD	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TTHREAD"><code>LUA_TTHREAD<\/code><\/a>,$/;"	a
pdf-LUA_TUSERDATA	vendor/lua/doc/manual.html	/^<a name="pdf-LUA_TUSERDATA"><code>LUA_TUSERDATA<\/code><\/a>,$/;"	a
pdf-LUA_USE_APICHECK	vendor/lua/doc/manual.html	/^with the macro <a name="pdf-LUA_USE_APICHECK"><code>LUA_USE_APICHECK<\/code><\/a> defined.$/;"	a
pdf-LUA_YIELD	vendor/lua/doc/manual.html	/^<li><b><a name="pdf-LUA_YIELD"><code>LUA_YIELD<\/code><\/a>: <\/b> the thread (coroutine) yields.<\/li>$/;"	a
pdf-_G	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-_G"><code>_G<\/code><\/a><\/h3>$/;"	a
pdf-_PROMPT	vendor/lua/doc/manual.html	/^If the global variable <a name="pdf-_PROMPT"><code>_PROMPT<\/code><\/a> contains a string,$/;"	a
pdf-_PROMPT2	vendor/lua/doc/manual.html	/^Similarly, if the global variable <a name="pdf-_PROMPT2"><code>_PROMPT2<\/code><\/a> contains a string,$/;"	a
pdf-_VERSION	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-_VERSION"><code>_VERSION<\/code><\/a><\/h3>$/;"	a
pdf-assert	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-assert"><code>assert (v [, message])<\/code><\/a><\/h3>$/;"	a
pdf-collectgarbage	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-collectgarbage"><code>collectgarbage ([opt [, arg]])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine	vendor/lua/doc/manual.html	/^which come inside the table <a name="pdf-coroutine"><code>coroutine<\/code><\/a>.$/;"	a
pdf-coroutine.close	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.close"><code>coroutine.close (co)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.create	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.create"><code>coroutine.create (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.isyieldable	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.isyieldable"><code>coroutine.isyieldable ([co])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.resume	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.resume"><code>coroutine.resume (co [, val1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.running	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.running"><code>coroutine.running ()<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.status	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.status"><code>coroutine.status (co)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.wrap	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.wrap"><code>coroutine.wrap (f)<\/code><\/a><\/h3>$/;"	a
pdf-coroutine.yield	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-coroutine.yield"><code>coroutine.yield (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-debug	vendor/lua/doc/manual.html	/^inside the <a name="pdf-debug"><code>debug<\/code><\/a> table.$/;"	a
pdf-debug.debug	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.debug"><code>debug.debug ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.gethook	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.gethook"><code>debug.gethook ([thread])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getinfo	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getinfo"><code>debug.getinfo ([thread,] f [, what])<\/code><\/a><\/h3>$/;"	a
pdf-debug.getlocal	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getlocal"><code>debug.getlocal ([thread,] f, local)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getmetatable"><code>debug.getmetatable (value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getregistry	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getregistry"><code>debug.getregistry ()<\/code><\/a><\/h3>$/;"	a
pdf-debug.getupvalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getupvalue"><code>debug.getupvalue (f, up)<\/code><\/a><\/h3>$/;"	a
pdf-debug.getuservalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.getuservalue"><code>debug.getuservalue (u, n)<\/code><\/a><\/h3>$/;"	a
pdf-debug.sethook	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.sethook"><code>debug.sethook ([thread,] hook, mask [, count])<\/code><\/a><\/h3>$/;"	a
pdf-debug.setlocal	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setlocal"><code>debug.setlocal ([thread,] level, local, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setmetatable"><code>debug.setmetatable (value, table)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setupvalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setupvalue"><code>debug.setupvalue (f, up, value)<\/code><\/a><\/h3>$/;"	a
pdf-debug.setuservalue	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.setuservalue"><code>debug.setuservalue (udata, value, n)<\/code><\/a><\/h3>$/;"	a
pdf-debug.traceback	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.traceback"><code>debug.traceback ([thread,] [message [, level]])<\/code><\/a><\/h3>$/;"	a
pdf-debug.upvalueid	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.upvalueid"><code>debug.upvalueid (f, n)<\/code><\/a><\/h3>$/;"	a
pdf-debug.upvaluejoin	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-debug.upvaluejoin"><code>debug.upvaluejoin (f1, n1, f2, n2)<\/code><\/a><\/h3>$/;"	a
pdf-dofile	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-dofile"><code>dofile ([filename])<\/code><\/a><\/h3>$/;"	a
pdf-error	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-error"><code>error (message [, level])<\/code><\/a><\/h3>$/;"	a
pdf-file:close	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:close"><code>file:close ()<\/code><\/a><\/h3>$/;"	a
pdf-file:flush	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:flush"><code>file:flush ()<\/code><\/a><\/h3>$/;"	a
pdf-file:lines	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:lines"><code>file:lines (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:read	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:read"><code>file:read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-file:seek	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:seek"><code>file:seek ([whence [, offset]])<\/code><\/a><\/h3>$/;"	a
pdf-file:setvbuf	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:setvbuf"><code>file:setvbuf (mode [, size])<\/code><\/a><\/h3>$/;"	a
pdf-file:write	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-file:write"><code>file:write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-getmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-getmetatable"><code>getmetatable (object)<\/code><\/a><\/h3>$/;"	a
pdf-io	vendor/lua/doc/manual.html	/^all operations are supplied by table <a name="pdf-io"><code>io<\/code><\/a>.$/;"	a
pdf-io.close	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.close"><code>io.close ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.flush	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.flush"><code>io.flush ()<\/code><\/a><\/h3>$/;"	a
pdf-io.input	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.input"><code>io.input ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.lines	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.lines"><code>io.lines ([filename, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-io.open	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.open"><code>io.open (filename [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.output	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.output"><code>io.output ([file])<\/code><\/a><\/h3>$/;"	a
pdf-io.popen	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.popen"><code>io.popen (prog [, mode])<\/code><\/a><\/h3>$/;"	a
pdf-io.read	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.read"><code>io.read (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-io.stdin	vendor/lua/doc/manual.html	/^<a name="pdf-io.stdin"><code>io.stdin<\/code><\/a>, <a name="pdf-io.stdout"><code>io.stdout<\/code><\/a>, and <a name="pdf-io.stderr"><code>io.stderr<\/code><\/a>.$/;"	a
pdf-io.tmpfile	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.tmpfile"><code>io.tmpfile ()<\/code><\/a><\/h3>$/;"	a
pdf-io.type	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.type"><code>io.type (obj)<\/code><\/a><\/h3>$/;"	a
pdf-io.write	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-io.write"><code>io.write (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-ipairs	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-ipairs"><code>ipairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-load	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-load"><code>load (chunk [, chunkname [, mode [, env]]])<\/code><\/a><\/h3>$/;"	a
pdf-loadfile	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-loadfile"><code>loadfile ([filename [, mode [, env]]])<\/code><\/a><\/h3>$/;"	a
pdf-lua.h	vendor/lua/doc/manual.html	/^are declared in the header file <a name="pdf-lua.h"><code>lua.h<\/code><\/a>.$/;"	a
pdf-lualib.h	vendor/lua/doc/manual.html	/^These functions are declared in <a name="pdf-lualib.h"><code>lualib.h<\/code><\/a>.$/;"	a
pdf-luaopen_base	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_base"><code>luaopen_base<\/code><\/a> (for the basic library),$/;"	a
pdf-luaopen_coroutine	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_coroutine"><code>luaopen_coroutine<\/code><\/a> (for the coroutine library),$/;"	a
pdf-luaopen_debug	vendor/lua/doc/manual.html	/^and <a name="pdf-luaopen_debug"><code>luaopen_debug<\/code><\/a> (for the debug library).$/;"	a
pdf-luaopen_io	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_io"><code>luaopen_io<\/code><\/a> (for the I\/O library),$/;"	a
pdf-luaopen_math	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_math"><code>luaopen_math<\/code><\/a> (for the mathematical library),$/;"	a
pdf-luaopen_os	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_os"><code>luaopen_os<\/code><\/a> (for the operating system library),$/;"	a
pdf-luaopen_package	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_package"><code>luaopen_package<\/code><\/a> (for the package library),$/;"	a
pdf-luaopen_string	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_string"><code>luaopen_string<\/code><\/a> (for the string library),$/;"	a
pdf-luaopen_table	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_table"><code>luaopen_table<\/code><\/a> (for the table library),$/;"	a
pdf-luaopen_utf8	vendor/lua/doc/manual.html	/^<a name="pdf-luaopen_utf8"><code>luaopen_utf8<\/code><\/a> (for the UTF-8 library),$/;"	a
pdf-math	vendor/lua/doc/manual.html	/^It provides all its functions and constants inside the table <a name="pdf-math"><code>math<\/code><\/a>.$/;"	a
pdf-math.abs	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.abs"><code>math.abs (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.acos	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.acos"><code>math.acos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.asin	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.asin"><code>math.asin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.atan	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.atan"><code>math.atan (y [, x])<\/code><\/a><\/h3>$/;"	a
pdf-math.ceil	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ceil"><code>math.ceil (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.cos	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.cos"><code>math.cos (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.deg	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.deg"><code>math.deg (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.exp	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.exp"><code>math.exp (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.floor	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.floor"><code>math.floor (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.fmod	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.fmod"><code>math.fmod (x, y)<\/code><\/a><\/h3>$/;"	a
pdf-math.huge	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.huge"><code>math.huge<\/code><\/a><\/h3>$/;"	a
pdf-math.log	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.log"><code>math.log (x [, base])<\/code><\/a><\/h3>$/;"	a
pdf-math.max	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.max"><code>math.max (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.maxinteger	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.maxinteger"><code>math.maxinteger<\/code><\/a><\/h3>$/;"	a
pdf-math.min	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.min"><code>math.min (x, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-math.mininteger	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.mininteger"><code>math.mininteger<\/code><\/a><\/h3>$/;"	a
pdf-math.modf	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.modf"><code>math.modf (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.pi	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.pi"><code>math.pi<\/code><\/a><\/h3>$/;"	a
pdf-math.rad	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.rad"><code>math.rad (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.random	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.random"><code>math.random ([m [, n]])<\/code><\/a><\/h3>$/;"	a
pdf-math.randomseed	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.randomseed"><code>math.randomseed ([x [, y]])<\/code><\/a><\/h3>$/;"	a
pdf-math.sin	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sin"><code>math.sin (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.sqrt	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.sqrt"><code>math.sqrt (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tan	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tan"><code>math.tan (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.tointeger	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.tointeger"><code>math.tointeger (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.type	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.type"><code>math.type (x)<\/code><\/a><\/h3>$/;"	a
pdf-math.ult	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-math.ult"><code>math.ult (m, n)<\/code><\/a><\/h3>$/;"	a
pdf-next	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-next"><code>next (table [, index])<\/code><\/a><\/h3>$/;"	a
pdf-os	vendor/lua/doc/manual.html	/^This library is implemented through table <a name="pdf-os"><code>os<\/code><\/a>.$/;"	a
pdf-os.clock	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.clock"><code>os.clock ()<\/code><\/a><\/h3>$/;"	a
pdf-os.date	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.date"><code>os.date ([format [, time]])<\/code><\/a><\/h3>$/;"	a
pdf-os.difftime	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.difftime"><code>os.difftime (t2, t1)<\/code><\/a><\/h3>$/;"	a
pdf-os.execute	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.execute"><code>os.execute ([command])<\/code><\/a><\/h3>$/;"	a
pdf-os.exit	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.exit"><code>os.exit ([code [, close]])<\/code><\/a><\/h3>$/;"	a
pdf-os.getenv	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.getenv"><code>os.getenv (varname)<\/code><\/a><\/h3>$/;"	a
pdf-os.remove	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.remove"><code>os.remove (filename)<\/code><\/a><\/h3>$/;"	a
pdf-os.rename	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.rename"><code>os.rename (oldname, newname)<\/code><\/a><\/h3>$/;"	a
pdf-os.setlocale	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.setlocale"><code>os.setlocale (locale [, category])<\/code><\/a><\/h3>$/;"	a
pdf-os.time	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.time"><code>os.time ([table])<\/code><\/a><\/h3>$/;"	a
pdf-os.tmpname	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-os.tmpname"><code>os.tmpname ()<\/code><\/a><\/h3>$/;"	a
pdf-package	vendor/lua/doc/manual.html	/^Everything else is exported in the table <a name="pdf-package"><code>package<\/code><\/a>.$/;"	a
pdf-package.config	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.config"><code>package.config<\/code><\/a><\/h3>$/;"	a
pdf-package.cpath	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.cpath"><code>package.cpath<\/code><\/a><\/h3>$/;"	a
pdf-package.loaded	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loaded"><code>package.loaded<\/code><\/a><\/h3>$/;"	a
pdf-package.loadlib	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.loadlib"><code>package.loadlib (libname, funcname)<\/code><\/a><\/h3>$/;"	a
pdf-package.path	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.path"><code>package.path<\/code><\/a><\/h3>$/;"	a
pdf-package.preload	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.preload"><code>package.preload<\/code><\/a><\/h3>$/;"	a
pdf-package.searchers	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.searchers"><code>package.searchers<\/code><\/a><\/h3>$/;"	a
pdf-package.searchpath	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-package.searchpath"><code>package.searchpath (name, path [, sep [, rep]])<\/code><\/a><\/h3>$/;"	a
pdf-pairs	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-pairs"><code>pairs (t)<\/code><\/a><\/h3>$/;"	a
pdf-pcall	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-pcall"><code>pcall (f [, arg1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdf-print	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-print"><code>print (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-rawequal	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawequal"><code>rawequal (v1, v2)<\/code><\/a><\/h3>$/;"	a
pdf-rawget	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawget"><code>rawget (table, index)<\/code><\/a><\/h3>$/;"	a
pdf-rawlen	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawlen"><code>rawlen (v)<\/code><\/a><\/h3>$/;"	a
pdf-rawset	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-rawset"><code>rawset (table, index, value)<\/code><\/a><\/h3>$/;"	a
pdf-require	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-require"><code>require (modname)<\/code><\/a><\/h3>$/;"	a
pdf-select	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-select"><code>select (index, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-setmetatable	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-setmetatable"><code>setmetatable (table, metatable)<\/code><\/a><\/h3>$/;"	a
pdf-string	vendor/lua/doc/manual.html	/^<a name="pdf-string"><code>string<\/code><\/a>.$/;"	a
pdf-string.byte	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.byte"><code>string.byte (s [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-string.char	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.char"><code>string.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.dump	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.dump"><code>string.dump (function [, strip])<\/code><\/a><\/h3>$/;"	a
pdf-string.find	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.find"><code>string.find (s, pattern [, init [, plain]])<\/code><\/a><\/h3>$/;"	a
pdf-string.format	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.format"><code>string.format (formatstring, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.gmatch	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gmatch"><code>string.gmatch (s, pattern [, init])<\/code><\/a><\/h3>$/;"	a
pdf-string.gsub	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.gsub"><code>string.gsub (s, pattern, repl [, n])<\/code><\/a><\/h3>$/;"	a
pdf-string.len	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.len"><code>string.len (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.lower	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.lower"><code>string.lower (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.match	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.match"><code>string.match (s, pattern [, init])<\/code><\/a><\/h3>$/;"	a
pdf-string.pack	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.pack"><code>string.pack (fmt, v1, v2, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-string.packsize	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.packsize"><code>string.packsize (fmt)<\/code><\/a><\/h3>$/;"	a
pdf-string.rep	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.rep"><code>string.rep (s, n [, sep])<\/code><\/a><\/h3>$/;"	a
pdf-string.reverse	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.reverse"><code>string.reverse (s)<\/code><\/a><\/h3>$/;"	a
pdf-string.sub	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.sub"><code>string.sub (s, i [, j])<\/code><\/a><\/h3>$/;"	a
pdf-string.unpack	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.unpack"><code>string.unpack (fmt, s [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-string.upper	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-string.upper"><code>string.upper (s)<\/code><\/a><\/h3>$/;"	a
pdf-table	vendor/lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-table"><code>table<\/code><\/a>.$/;"	a
pdf-table.concat	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.concat"><code>table.concat (list [, sep [, i [, j]]])<\/code><\/a><\/h3>$/;"	a
pdf-table.insert	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.insert"><code>table.insert (list, [pos,] value)<\/code><\/a><\/h3>$/;"	a
pdf-table.move	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.move"><code>table.move (a1, f, e, t [,a2])<\/code><\/a><\/h3>$/;"	a
pdf-table.pack	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.pack"><code>table.pack (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-table.remove	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.remove"><code>table.remove (list [, pos])<\/code><\/a><\/h3>$/;"	a
pdf-table.sort	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.sort"><code>table.sort (list [, comp])<\/code><\/a><\/h3>$/;"	a
pdf-table.unpack	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-table.unpack"><code>table.unpack (list [, i [, j]])<\/code><\/a><\/h3>$/;"	a
pdf-tonumber	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-tonumber"><code>tonumber (e [, base])<\/code><\/a><\/h3>$/;"	a
pdf-tostring	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-tostring"><code>tostring (v)<\/code><\/a><\/h3>$/;"	a
pdf-type	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-type"><code>type (v)<\/code><\/a><\/h3>$/;"	a
pdf-utf8	vendor/lua/doc/manual.html	/^It provides all its functions inside the table <a name="pdf-utf8"><code>utf8<\/code><\/a>.$/;"	a
pdf-utf8.char	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.char"><code>utf8.char (&middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-utf8.charpattern	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.charpattern"><code>utf8.charpattern<\/code><\/a><\/h3>$/;"	a
pdf-utf8.codepoint	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.codepoint"><code>utf8.codepoint (s [, i [, j [, lax]]])<\/code><\/a><\/h3>$/;"	a
pdf-utf8.codes	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.codes"><code>utf8.codes (s [, lax])<\/code><\/a><\/h3>$/;"	a
pdf-utf8.len	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.len"><code>utf8.len (s [, i [, j [, lax]]])<\/code><\/a><\/h3>$/;"	a
pdf-utf8.offset	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-utf8.offset"><code>utf8.offset (s, n [, i])<\/code><\/a><\/h3>$/;"	a
pdf-warn	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-warn"><code>warn (msg1, &middot;&middot;&middot;)<\/code><\/a><\/h3>$/;"	a
pdf-xpcall	vendor/lua/doc/manual.html	/^<hr><h3><a name="pdf-xpcall"><code>xpcall (f, msgh [, arg1, &middot;&middot;&middot;])<\/code><\/a><\/h3>$/;"	a
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	doc/Makefile	/^pdfdir = ${docdir}$/;"	m
pending	proxy_await.c	/^    int pending;$/;"	m	struct:mcp_await_s	file:
perslab	slabs.c	/^    unsigned int perslab;   \/* how many items per slab *\/$/;"	m	struct:__anon100	file:
phc	proxy.h	/^    struct proxy_hash_caller phc;$/;"	m	struct:mcp_pool_s	typeref:struct:mcp_pool_s::proxy_hash_caller
phc	proxy_jump_hash.c	/^    struct proxy_hash_caller phc; \/\/ passed back to proxy API$/;"	m	struct:__anon12	typeref:struct:__anon12::proxy_hash_caller	file:
phc	proxy_ring_hash.c	/^    struct proxy_hash_caller phc; \/\/ passed back to the proxy API.$/;"	m	struct:__anon98	typeref:struct:__anon98::proxy_hash_caller	file:
phc_ref	proxy.h	/^    int phc_ref;$/;"	m	struct:mcp_pool_s
pidx	vendor/lua/src/lparser.h	/^    short pidx;  \/* index of the variable in the Proto's 'locvars' array *\/$/;"	m	struct:Vardesc::__anon38
pk_funcs	vendor/lua/src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/memcached$/;"	m
pkgdatadir	doc/Makefile	/^pkgdatadir = $(datadir)\/memcached$/;"	m
pkginclude_HEADERS	Makefile	/^pkginclude_HEADERS = protocol_binary.h xxhash.h$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/memcached$/;"	m
pkgincludedir	doc/Makefile	/^pkgincludedir = $(includedir)\/memcached$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/memcached$/;"	m
pkglibdir	doc/Makefile	/^pkglibdir = $(libdir)\/memcached$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/memcached$/;"	m
pkglibexecdir	doc/Makefile	/^pkglibexecdir = $(libexecdir)\/memcached$/;"	m
plen	authfile.c	/^    size_t plen;$/;"	m	struct:auth_entry	file:
pmain	vendor/lua/src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
pmain	vendor/lua/src/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:
point	proxy_ring_hash.c	/^    unsigned int point; \/\/ continuum point.$/;"	m	struct:__anon97	file:
point2uint	vendor/lua/src/llimits.h	78;"	d
pool	proxy.h	/^    mcp_pool_be_t pool[];$/;"	m	struct:mcp_pool_s
pool_filled_once	slab_automove_extstore.c	/^    bool pool_filled_once;$/;"	m	struct:__anon15	file:
pool_head_t	proxy.h	/^typedef STAILQ_HEAD(pool_head_s, mcp_pool_s) pool_head_t;$/;"	t
pool_size	proxy.h	/^    int pool_size;$/;"	m	struct:mcp_pool_s
poptbclist	vendor/lua/src/lfunc.c	/^static void poptbclist (lua_State *L) {$/;"	f	file:
port	memcached.h	/^    int port;$/;"	m	struct:settings
port	proxy.h	/^    char port[MAX_PORTLEN+1];$/;"	m	struct:mcp_backend_s
port	t/lib/MemcachedTest.pm	/^sub port { $_[0]{port} }$/;"	s
port	testapp.c	/^static in_port_t port;$/;"	v	file:
posrelatI	vendor/lua/src/lstrlib.c	/^static size_t posrelatI (lua_Integer pos, size_t len) {$/;"	f	file:
power_largest	slabs.c	/^static int power_largest;$/;"	v	file:
pr	proxy.h	/^    mcp_parser_t pr; \/\/ non-lua-specific parser handling.$/;"	m	struct:mcp_request_s
precover	vendor/lua/src/ldo.c	/^static int precover (lua_State *L, int status) {$/;"	f	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	doc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	stats_prefix.h	/^    char *prefix;$/;"	m	struct:_prefix_stats
prefix_delimiter	memcached.h	/^    char prefix_delimiter;  \/* character that marks a key prefix (for stats) *\/$/;"	m	struct:settings
prefix_delimiter	stats_prefix.c	/^static char prefix_delimiter;$/;"	v	file:
prefix_factory	t/startfile.lua	/^function prefix_factory(pattern, list, default)$/;"	f
prefix_len	stats_prefix.h	/^    size_t prefix_len;$/;"	m	struct:_prefix_stats
prefix_stats	stats_prefix.c	/^static PREFIX_STATS *prefix_stats[PREFIX_HASH_SIZE];$/;"	v	file:
prefixtrim_factory	t/startfile.lua	/^function prefixtrim_factory(pattern, list, default)$/;"	f
preinit_thread	vendor/lua/src/lstate.c	/^static void preinit_thread (lua_State *L, global_State *g) {$/;"	f	file:
prepbuffsize	vendor/lua/src/lauxlib.c	/^static char *prepbuffsize (luaL_Buffer *B, size_t sz, int boxidx) {$/;"	f	file:
prepcallclosemth	vendor/lua/src/lfunc.c	/^static void prepcallclosemth (lua_State *L, StkId level, int status, int yy) {$/;"	f	file:
prepstate	vendor/lua/src/lstrlib.c	/^static void prepstate (MatchState *ms, lua_State *L,$/;"	f	file:
prev	items.c	/^    struct _lru_bump_buf *prev;$/;"	m	struct:_lru_bump_buf	typeref:struct:_lru_bump_buf::_lru_bump_buf	file:
prev	logger.h	/^    struct _logger *prev;$/;"	m	struct:_logger	typeref:struct:_logger::_logger
prev	memcached.h	/^    struct _mc_resp_bundle *prev;$/;"	m	struct:_mc_resp_bundle	typeref:struct:_mc_resp_bundle::_mc_resp_bundle
prev	memcached.h	/^    struct _strchunk *prev;     \/* can potentially point to the head. *\/$/;"	m	struct:_strchunk	typeref:struct:_strchunk::_strchunk
prev	memcached.h	/^    struct _stritem *prev;$/;"	m	struct:__anon108	typeref:struct:__anon108::_stritem
prev	memcached.h	/^    struct _stritem *prev;$/;"	m	struct:_stritem	typeref:struct:_stritem::_stritem
prev	vendor/lua/src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
prev	vendor/lua/src/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState
prevfile	queue.h	/^	const char	*prevfile;$/;"	m	struct:qm_trace
previous	vendor/lua/src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	vendor/lua/src/lobject.h	/^      struct UpVal **previous;$/;"	m	struct:UpVal::__anon53::__anon54	typeref:struct:UpVal::__anon53::__anon54::UpVal
previous	vendor/lua/src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
previous	vendor/lua/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo
previousinstruction	vendor/lua/src/lcode.c	/^static Instruction *previousinstruction (FuncState *fs) {$/;"	f	file:
previousline	vendor/lua/src/lparser.h	/^  int previousline;  \/* last line that was saved in 'lineinfo' *\/$/;"	m	struct:FuncState
prevline	queue.h	/^	unsigned long	 prevline;$/;"	m	struct:qm_trace
primary_hashtable	assoc.c	/^static item** primary_hashtable = 0;$/;"	v	file:
primaryexp	vendor/lua/src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print_help	t/lib/MemcachedTest.pm	/^sub print_help {$/;"	s
print_ssl_error	tls.c	/^static void print_ssl_error(char *buff, size_t len) {$/;"	f	file:
print_usage	vendor/lua/src/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	vendor/lua/src/lua.c	/^static void print_version (void) {$/;"	f	file:
priority	vendor/lua/src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon48	file:
process_arithmetic_command	proto_text.c	/^static void process_arithmetic_command(conn *c, token_t *tokens, const size_t ntokens, const bool incr) {$/;"	f	file:
process_bin_append_prepend	proto_bin.c	/^static void process_bin_append_prepend(conn *c) {$/;"	f	file:
process_bin_complete_sasl_auth	proto_bin.c	/^static void process_bin_complete_sasl_auth(conn *c) {$/;"	f	file:
process_bin_delete	proto_bin.c	/^static void process_bin_delete(conn *c) {$/;"	f	file:
process_bin_flush	proto_bin.c	/^static void process_bin_flush(conn *c, char *extbuf) {$/;"	f	file:
process_bin_get_or_touch	proto_bin.c	/^static void process_bin_get_or_touch(conn *c, char *extbuf) {$/;"	f	file:
process_bin_sasl_auth	proto_bin.c	/^static void process_bin_sasl_auth(conn *c) {$/;"	f	file:
process_bin_stat	proto_bin.c	/^static void process_bin_stat(conn *c) {$/;"	f	file:
process_bin_update	proto_bin.c	/^static void process_bin_update(conn *c, char *extbuf) {$/;"	f	file:
process_command_ascii	proto_text.c	/^void process_command_ascii(conn *c, char *command) {$/;"	f
process_debugtime_command	proto_text.c	/^static void process_debugtime_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_delete_command	proto_text.c	/^static void process_delete_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_divmul_command	proto_text.c	/^static void process_divmul_command(conn *c, token_t *tokens, const size_t ntokens, const bool mul) {$/;"	f	file:
process_extstore_command	proto_text.c	/^static void process_extstore_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_extstore_stats	storage.c	/^void process_extstore_stats(ADD_STAT add_stats, conn *c) {$/;"	f
process_flush_all_command	proto_text.c	/^static void process_flush_all_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_get_command	proto_text.c	/^static inline void process_get_command(conn *c, token_t *tokens, size_t ntokens, bool return_cas, bool should_touch) {$/;"	f	file:
process_lru_command	proto_text.c	/^static void process_lru_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_lru_crawler_command	proto_text.c	/^static void process_lru_crawler_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_marithmetic_command	proto_text.c	/^static void process_marithmetic_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_mdelete_command	proto_text.c	/^static void process_mdelete_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_memlimit_command	proto_text.c	/^static void process_memlimit_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_meta_command	proto_text.c	/^static void process_meta_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_mget_command	proto_text.c	/^static void process_mget_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_misbehave_command	proto_text.c	/^static void process_misbehave_command(conn *c) {$/;"	f	file:
process_mset_command	proto_text.c	/^static void process_mset_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_proxy_stats	proto_proxy.c	/^void process_proxy_stats(ADD_STAT add_stats, conn *c) {$/;"	f
process_quit_command	proto_text.c	/^static void process_quit_command(conn *c) {$/;"	f	file:
process_refresh_certs_command	proto_text.c	/^static void process_refresh_certs_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_request	proxy_request.c	/^int process_request(mcp_parser_t *pr, const char *command, size_t cmdlen) {$/;"	f
process_shutdown_command	proto_text.c	/^static void process_shutdown_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_slabs_automove_command	proto_text.c	/^static void process_slabs_automove_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_slabs_command	proto_text.c	/^static void process_slabs_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_started	memcached.c	/^    uint64_t process_started;$/;"	m	struct:_mc_meta_data	file:
process_started	memcached.c	/^time_t process_started;     \/* when the process was started *\/$/;"	v
process_stat	proto_text.c	/^static void process_stat(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_stat_settings	memcached.c	/^void process_stat_settings(ADD_STAT add_stats, void *c) {$/;"	f
process_stats_conns	memcached.c	/^void process_stats_conns(ADD_STAT add_stats, void *c) {$/;"	f
process_stats_detail	proto_text.c	/^inline static void process_stats_detail(conn *c, const char *command) {$/;"	f	file:
process_touch_command	proto_text.c	/^static void process_touch_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_update_command	proto_text.c	/^static void process_update_command(conn *c, token_t *tokens, const size_t ntokens, int comm, bool handle_cas) {$/;"	f	file:
process_verbosity_command	proto_text.c	/^static void process_verbosity_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
process_version_command	proto_text.c	/^static void process_version_command(conn *c) {$/;"	f	file:
process_watch_command	proto_text.c	/^static void process_watch_command(conn *c, token_t *tokens, const size_t ntokens) {$/;"	f	file:
progname	vendor/lua/src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	vendor/lua/src/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
program_details	missing	/^program_details ()$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	doc/Makefile	/^program_transform_name = s,x,x,$/;"	m
project	vendor/lua/src/lmathlib.c	/^static lua_Unsigned project (lua_Unsigned ran, lua_Unsigned n,$/;"	f	file:
propagateall	vendor/lua/src/lgc.c	/^static lu_mem propagateall (global_State *g) {$/;"	f	file:
propagatemark	vendor/lua/src/lgc.c	/^static lu_mem propagatemark (global_State *g) {$/;"	f	file:
prot_text	memcached.c	/^static const char *prot_text(enum protocol prot) {$/;"	f	file:
protocol	memcached.h	/^    enum protocol protocol;   \/* which protocol this connection speaks *\/$/;"	m	struct:conn	typeref:enum:conn::protocol
protocol	memcached.h	/^enum protocol {$/;"	g
protocol_binary_command	protocol_binary.h	/^    } protocol_binary_command;$/;"	t	typeref:enum:__anon63
protocol_binary_datatypes	protocol_binary.h	/^    } protocol_binary_datatypes;$/;"	t	typeref:enum:__anon64
protocol_binary_magic	protocol_binary.h	/^    } protocol_binary_magic;$/;"	t	typeref:enum:__anon61
protocol_binary_request_add	protocol_binary.h	/^    typedef protocol_binary_request_set protocol_binary_request_add;$/;"	t
protocol_binary_request_append	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_append;$/;"	t
protocol_binary_request_decr	protocol_binary.h	/^    typedef protocol_binary_request_incr protocol_binary_request_decr;$/;"	t
protocol_binary_request_delete	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_delete;$/;"	t
protocol_binary_request_flush	protocol_binary.h	/^    } protocol_binary_request_flush;$/;"	t	typeref:union:__anon76
protocol_binary_request_gat	protocol_binary.h	/^    } protocol_binary_request_gat;$/;"	t	typeref:union:__anon91
protocol_binary_request_gatk	protocol_binary.h	/^    typedef protocol_binary_request_gat protocol_binary_request_gatk;$/;"	t
protocol_binary_request_gatkq	protocol_binary.h	/^    typedef protocol_binary_request_gat protocol_binary_request_gatkq;$/;"	t
protocol_binary_request_gatq	protocol_binary.h	/^    typedef protocol_binary_request_gat protocol_binary_request_gatq;$/;"	t
protocol_binary_request_get	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_get;$/;"	t
protocol_binary_request_getk	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_getk;$/;"	t
protocol_binary_request_getkq	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_getkq;$/;"	t
protocol_binary_request_getq	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_getq;$/;"	t
protocol_binary_request_header	protocol_binary.h	/^    } protocol_binary_request_header;$/;"	t	typeref:union:__anon65
protocol_binary_request_incr	protocol_binary.h	/^    } protocol_binary_request_incr;$/;"	t	typeref:union:__anon82
protocol_binary_request_no_extras	protocol_binary.h	/^    } protocol_binary_request_no_extras;$/;"	t	typeref:union:__anon69
protocol_binary_request_noop	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_noop;$/;"	t
protocol_binary_request_prepend	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_prepend;$/;"	t
protocol_binary_request_quit	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_quit;$/;"	t
protocol_binary_request_rangeop	protocol_binary.h	/^    } protocol_binary_request_rangeop;$/;"	t	typeref:union:__anon94
protocol_binary_request_rappend	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rappend;$/;"	t
protocol_binary_request_rappendq	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rappendq;$/;"	t
protocol_binary_request_rdecr	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rdecr;$/;"	t
protocol_binary_request_rdecrq	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rdecrq;$/;"	t
protocol_binary_request_rdelete	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rdelete;$/;"	t
protocol_binary_request_rdeleteq	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rdeleteq;$/;"	t
protocol_binary_request_replace	protocol_binary.h	/^    typedef protocol_binary_request_set protocol_binary_request_replace;$/;"	t
protocol_binary_request_rget	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rget;$/;"	t
protocol_binary_request_rincr	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rincr;$/;"	t
protocol_binary_request_rincrq	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rincrq;$/;"	t
protocol_binary_request_rprepend	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rprepend;$/;"	t
protocol_binary_request_rprependq	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rprependq;$/;"	t
protocol_binary_request_rset	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rset;$/;"	t
protocol_binary_request_rsetq	protocol_binary.h	/^    typedef protocol_binary_request_rangeop protocol_binary_request_rsetq;$/;"	t
protocol_binary_request_set	protocol_binary.h	/^    } protocol_binary_request_set;$/;"	t	typeref:union:__anon79
protocol_binary_request_stats	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_stats;$/;"	t
protocol_binary_request_touch	protocol_binary.h	/^    } protocol_binary_request_touch;$/;"	t	typeref:union:__anon88
protocol_binary_request_version	protocol_binary.h	/^    typedef protocol_binary_request_no_extras protocol_binary_request_version;$/;"	t
protocol_binary_response_add	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_add;$/;"	t
protocol_binary_response_append	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_append;$/;"	t
protocol_binary_response_decr	protocol_binary.h	/^    typedef protocol_binary_response_incr protocol_binary_response_decr;$/;"	t
protocol_binary_response_delete	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_delete;$/;"	t
protocol_binary_response_flush	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_flush;$/;"	t
protocol_binary_response_gat	protocol_binary.h	/^    typedef protocol_binary_response_get protocol_binary_response_gat;$/;"	t
protocol_binary_response_gatk	protocol_binary.h	/^    typedef protocol_binary_response_get protocol_binary_response_gatk;$/;"	t
protocol_binary_response_gatkq	protocol_binary.h	/^    typedef protocol_binary_response_get protocol_binary_response_gatkq;$/;"	t
protocol_binary_response_gatq	protocol_binary.h	/^    typedef protocol_binary_response_get protocol_binary_response_gatq;$/;"	t
protocol_binary_response_get	protocol_binary.h	/^    } protocol_binary_response_get;$/;"	t	typeref:union:__anon73
protocol_binary_response_getk	protocol_binary.h	/^    typedef protocol_binary_response_get protocol_binary_response_getk;$/;"	t
protocol_binary_response_getkq	protocol_binary.h	/^    typedef protocol_binary_response_get protocol_binary_response_getkq;$/;"	t
protocol_binary_response_getq	protocol_binary.h	/^    typedef protocol_binary_response_get protocol_binary_response_getq;$/;"	t
protocol_binary_response_header	protocol_binary.h	/^    } protocol_binary_response_header;$/;"	t	typeref:union:__anon67
protocol_binary_response_incr	protocol_binary.h	/^    } protocol_binary_response_incr;$/;"	t	typeref:union:__anon85
protocol_binary_response_no_extras	protocol_binary.h	/^    } protocol_binary_response_no_extras;$/;"	t	typeref:union:__anon71
protocol_binary_response_noop	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_noop;$/;"	t
protocol_binary_response_prepend	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_prepend;$/;"	t
protocol_binary_response_quit	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_quit;$/;"	t
protocol_binary_response_replace	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_replace;$/;"	t
protocol_binary_response_set	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_set;$/;"	t
protocol_binary_response_stats	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_stats;$/;"	t
protocol_binary_response_status	protocol_binary.h	/^    } protocol_binary_response_status;$/;"	t	typeref:enum:__anon62
protocol_binary_response_touch	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_touch;$/;"	t
protocol_binary_response_version	protocol_binary.h	/^    typedef protocol_binary_response_no_extras protocol_binary_response_version;$/;"	t
prototypes	configure	/^   function prototypes and stuff, but not \\xHH hex character constants.$/;"	f
proxy_backend_drive_machine	proxy_network.c	/^static int proxy_backend_drive_machine(mcp_backend_t *be) {$/;"	f	file:
proxy_backend_handler	proxy_network.c	/^static void proxy_backend_handler(const int fd, const short which, void *arg) {$/;"	f	file:
proxy_backend_handler_ur	proxy_network.c	/^static void proxy_backend_handler_ur(void *udata, struct io_uring_cqe *cqe) {$/;"	f	file:
proxy_backend_retry_handler	proxy_network.c	/^static void proxy_backend_retry_handler(const int fd, const short which, void *arg) {$/;"	f	file:
proxy_backend_retry_handler_ur	proxy_network.c	/^static void proxy_backend_retry_handler_ur(void *udata, struct io_uring_cqe *cqe) {$/;"	f	file:
proxy_backend_timeout_handler_ur	proxy_network.c	/^static void proxy_backend_timeout_handler_ur(void *udata, struct io_uring_cqe *cqe) {$/;"	f	file:
proxy_backend_wrhandler_ur	proxy_network.c	/^static void proxy_backend_wrhandler_ur(void *udata, struct io_uring_cqe *cqe) {$/;"	f	file:
proxy_be_failure_text	proxy_network.c	/^const char *proxy_be_failure_text[] = {$/;"	v
proxy_be_failures	proxy.h	/^enum proxy_be_failures {$/;"	g
proxy_cleanup_conn	proto_proxy.c	/^void proxy_cleanup_conn(conn *c) {$/;"	f
proxy_cmd_types	proxy.h	/^enum proxy_cmd_types {$/;"	g
proxy_code	proxy.h	/^    void *proxy_code;$/;"	m	struct:__anon102
proxy_complete_cb	proto_proxy.c	/^void proxy_complete_cb(io_queue_t *q) {$/;"	f
proxy_coro_ref	memcached.h	/^    unsigned int proxy_coro_ref; \/* lua reference for active coroutine *\/$/;"	m	struct:conn
proxy_ctx	memcached.h	/^    void *proxy_ctx; \/* proxy's state context *\/$/;"	m	struct:settings
proxy_ctx_t	proxy.h	/^} proxy_ctx_t;$/;"	t	typeref:struct:__anon102
proxy_defines	proxy.h	/^enum proxy_defines {$/;"	g
proxy_enabled	memcached.h	/^    bool proxy_enabled;$/;"	m	struct:settings
proxy_event_cb	proxy.h	/^typedef void (*proxy_event_cb)(void *udata, struct io_uring_cqe *cqe);$/;"	t
proxy_event_handler	proxy_network.c	/^static void proxy_event_handler(evutil_socket_t fd, short which, void *arg) {$/;"	f	file:
proxy_event_handler_ur	proxy_network.c	/^static void proxy_event_handler_ur(void *udata, struct io_uring_cqe *cqe) {$/;"	f	file:
proxy_event_t	proxy.h	/^} proxy_event_t;$/;"	t	typeref:struct:__anon101
proxy_event_thread	proxy_network.c	/^void *proxy_event_thread(void *arg) {$/;"	f
proxy_event_thread_s	proxy.h	/^struct proxy_event_thread_s {$/;"	s
proxy_event_thread_t	proxy.h	/^typedef struct proxy_event_thread_s proxy_event_thread_t;$/;"	t	typeref:struct:proxy_event_thread_s
proxy_event_thread_ur	proxy_network.c	/^void *proxy_event_thread_ur(void *arg) {$/;"	f
proxy_event_updater	proxy_network.c	/^static void proxy_event_updater(evutil_socket_t fd, short which, void *arg) {$/;"	f	file:
proxy_event_updater_ur	proxy_network.c	/^static void proxy_event_updater_ur(void *udata, struct io_uring_cqe *cqe) {$/;"	f	file:
proxy_finalize_cb	proto_proxy.c	/^void proxy_finalize_cb(io_pending_t *pending) {$/;"	f
proxy_global_stats	proxy.h	/^struct proxy_global_stats {$/;"	s
proxy_hash_caller	proxy.h	/^struct proxy_hash_caller {$/;"	s
proxy_hash_func	proxy.h	/^struct proxy_hash_func {$/;"	s
proxy_hook	proxy.h	/^struct proxy_hook {$/;"	s
proxy_hook_tagged	proxy.h	/^struct proxy_hook_tagged {$/;"	s
proxy_hooks	memcached.h	/^    void *proxy_hooks;$/;"	m	struct:__anon110
proxy_init	proto_proxy.c	/^void proxy_init(bool use_uring) {$/;"	f
proxy_init_evthread_events	proxy_network.c	/^void proxy_init_evthread_events(proxy_event_thread_t *t) {$/;"	f
proxy_int_stats	memcached.h	/^    void *proxy_int_stats;$/;"	m	struct:__anon110
proxy_int_stats	proxy.h	/^struct proxy_int_stats {$/;"	s
proxy_load_config	proxy_config.c	/^int proxy_load_config(void *arg) {$/;"	f
proxy_lua_error	proto_proxy.c	/^void proxy_lua_error(lua_State *L, const char *s) {$/;"	f
proxy_lua_ferror	proto_proxy.c	/^void proxy_lua_ferror(lua_State *L, const char *fmt, ...) {$/;"	f
proxy_out_errstring	proto_proxy.c	/^static void proxy_out_errstring(mc_resp *resp, const char *str) {$/;"	f	file:
proxy_process_command	proto_proxy.c	/^static void proxy_process_command(conn *c, char *command, size_t cmdlen, bool multiget) {$/;"	f	file:
proxy_prot	memcached.h	/^    proxy_prot,$/;"	e	enum:protocol
proxy_register_defines	proxy_lua.c	/^static void proxy_register_defines(lua_State *L) {$/;"	f	file:
proxy_register_libs	proxy_lua.c	/^int proxy_register_libs(LIBEVENT_THREAD *t, void *ctx) {$/;"	f
proxy_reload_notify	thread.c	/^void proxy_reload_notify(LIBEVENT_THREAD *t) {$/;"	f
proxy_return_cb	proto_proxy.c	/^void proxy_return_cb(io_pending_t *pending) {$/;"	f
proxy_rng	memcached.h	/^    uint32_t proxy_rng[4]; \/\/ fast per-thread rng for lua.$/;"	m	struct:__anon110
proxy_run_coroutine	proto_proxy.c	/^int proxy_run_coroutine(lua_State *Lc, mc_resp *resp, io_pending_proxy_t *p, conn *c) {$/;"	f
proxy_start_reload	proxy_config.c	/^void proxy_start_reload(void *arg) {$/;"	f
proxy_startfile	memcached.h	/^    char *proxy_startfile; \/* lua file to run when workers start *\/$/;"	m	struct:settings
proxy_state	proxy.h	/^    lua_State *proxy_state;$/;"	m	struct:__anon102
proxy_stats	proto_proxy.c	/^void proxy_stats(ADD_STAT add_stats, conn *c) {$/;"	f
proxy_submit_cb	proto_proxy.c	/^void proxy_submit_cb(io_queue_t *q) {$/;"	f
proxy_thread_init	proto_proxy.c	/^void proxy_thread_init(LIBEVENT_THREAD *thr) {$/;"	f
proxy_thread_loadconf	proxy_config.c	/^int proxy_thread_loadconf(LIBEVENT_THREAD *thr) {$/;"	f
proxy_threads	proxy.h	/^    proxy_event_thread_t *proxy_threads;$/;"	m	struct:__anon102
proxy_tunables	proxy.h	/^struct proxy_tunables {$/;"	s
proxy_uring	memcached.h	/^    bool proxy_uring; \/* if the proxy should use io_uring *\/$/;"	m	struct:settings
proxy_user_stats	memcached.h	/^    void *proxy_user_stats;$/;"	m	struct:__anon110
proxy_user_stats	proxy.h	/^struct proxy_user_stats {$/;"	s
proxy_worker_reload	proxy_config.c	/^void proxy_worker_reload(void *arg, LIBEVENT_THREAD *thr) {$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	doc/Makefile	/^psdir = ${docdir}$/;"	m
push_captures	vendor/lua/src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	vendor/lua/src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
pushargs	vendor/lua/src/lua.c	/^static int pushargs (lua_State *L) {$/;"	f	file:
pushclosure	vendor/lua/src/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pushed	vendor/lua/src/lobject.c	/^  int pushed;  \/* number of string pieces already on the stack *\/$/;"	m	struct:BuffFS	file:
pusherror	vendor/lua/src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pusherrornotfound	vendor/lua/src/loadlib.c	/^static void pusherrornotfound (lua_State *L, const char *path) {$/;"	f	file:
pushfuncname	vendor/lua/src/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushglobalfuncname	vendor/lua/src/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushline	vendor/lua/src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushmode	vendor/lua/src/lbaselib.c	/^static int pushmode (lua_State *L, int oldmode) {$/;"	f	file:
pushnumint	vendor/lua/src/lmathlib.c	/^static void pushnumint (lua_State *L, lua_Number d) {$/;"	f	file:
pushstr	vendor/lua/src/lobject.c	/^static void pushstr (BuffFS *buff, const char *str, size_t l) {$/;"	f	file:
pushutfchar	vendor/lua/src/lutf8lib.c	/^static void pushutfchar (lua_State *L, int arg) {$/;"	f	file:
pvalue	vendor/lua/src/lobject.h	423;"	d
pvalueraw	vendor/lua/src/lobject.h	426;"	d
qm_trace	queue.h	/^struct qm_trace {$/;"	s
queue	extstore.c	/^    obj_io *queue;$/;"	m	struct:__anon13	file:
queue_new_conn	thread.c	/^    queue_new_conn,   \/* brand new connection. *\/$/;"	e	enum:conn_queue_item_modes	file:
queue_pause	thread.c	/^    queue_pause,      \/* pause thread *\/$/;"	e	enum:conn_queue_item_modes	file:
queue_proxy_reload	thread.c	/^    queue_proxy_reload, \/* signal proxy to reload worker VM *\/$/;"	e	enum:conn_queue_item_modes	file:
queue_redispatch	thread.c	/^    queue_redispatch, \/* return conn from side thread *\/$/;"	e	enum:conn_queue_item_modes	file:
queue_return_io	thread.c	/^    queue_return_io,  \/* returning a pending IO object immediately *\/$/;"	e	enum:conn_queue_item_modes	file:
queue_stop	thread.c	/^    queue_stop,       \/* exit thread *\/$/;"	e	enum:conn_queue_item_modes	file:
queue_tail	extstore.c	/^    obj_io *queue_tail;$/;"	m	struct:__anon13	file:
queue_timeout	thread.c	/^    queue_timeout,    \/* socket sfd timed out *\/$/;"	e	enum:conn_queue_item_modes	file:
quotefloat	vendor/lua/src/lstrlib.c	/^static int quotefloat (lua_State *L, char *buff, lua_Number n) {$/;"	f	file:
r	memcached.h	/^    mc_resp r[];$/;"	m	struct:_mc_resp_bundle
r	vendor/lua/doc/manual.html	/^     function r() return 1,2,3 end$/;"	f
r	vendor/lua/src/llex.h	/^  lua_Number r;$/;"	m	union:__anon46
randfuncs	vendor/lua/src/lmathlib.c	/^static const luaL_Reg randfuncs[] = {$/;"	v	file:
randseed	vendor/lua/src/lmathlib.c	/^static void randseed (lua_State *L, RanState *state) {$/;"	f	file:
raw_command	testapp.c	/^static off_t raw_command(char* buf,$/;"	f	file:
rawtt	vendor/lua/src/lobject.h	75;"	d
rbuf	memcached.h	/^    char   *rbuf;   \/** buffer to read commands into *\/$/;"	m	struct:conn
rbuf	proxy.h	/^    char *rbuf; \/\/ statically allocated read buffer.$/;"	m	struct:mcp_backend_s
rbuf_alloc	memcached.c	/^static bool rbuf_alloc(conn *c) {$/;"	f	file:
rbuf_cache	memcached.h	/^    cache_t *rbuf_cache;        \/* static-sized read buffers *\/$/;"	m	struct:__anon110
rbuf_malloced	memcached.h	/^    bool rbuf_malloced; \/** read buffer was malloc'ed for ascii mget, needs free() *\/$/;"	m	struct:conn
rbuf_release	memcached.c	/^static void rbuf_release(conn *c) {$/;"	f	file:
rbuf_switch_to_malloc	memcached.c	/^bool rbuf_switch_to_malloc(conn *c) {$/;"	f
rbufused	proxy.h	/^    size_t rbufused; \/\/ currently active bytes in the buffer$/;"	m	struct:mcp_backend_s
rbytes	memcached.h	/^    int    rbytes;  \/** how much data, starting from rcur, do we have unparsed *\/$/;"	m	struct:conn
rcurr	memcached.h	/^    char   *rcurr;  \/** but if we parsed some already, this is where we stopped *\/$/;"	m	struct:conn
read	memcached.h	/^    ssize_t (*read)(conn  *c, void *buf, size_t count);$/;"	m	struct:conn
read	proxy.h	/^    struct timeval read;$/;"	m	struct:proxy_tunables	typeref:struct:proxy_tunables::timeval
read	testapp.c	/^    ssize_t (*read)(struct conn  *c, void *buf, size_t count);$/;"	m	struct:conn	file:
read_all	vendor/lua/src/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_ascii_response	testapp.c	/^static void read_ascii_response(char *buffer, size_t size) {$/;"	f	file:
read_buf_bytes	memcached.h	/^    uint64_t read_buf_bytes;$/;"	m	struct:thread_stats
read_buf_bytes_free	memcached.h	/^    uint64_t read_buf_bytes_free;$/;"	m	struct:thread_stats
read_buf_count	memcached.h	/^    uint64_t read_buf_count;$/;"	m	struct:thread_stats
read_buf_mem_limit	memcached.h	/^    unsigned int read_buf_mem_limit; \/* total megabytes allowable for net buffers *\/$/;"	m	struct:settings
read_buffer_size	thread.c	/^    int               read_buffer_size;$/;"	m	struct:conn_queue_item	file:
read_chars	vendor/lua/src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_into_chunked_item	memcached.c	/^static int read_into_chunked_item(conn *c) {$/;"	f	file:
read_line	vendor/lua/src/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	vendor/lua/src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, size_t sep) {$/;"	f	file:
read_number	vendor/lua/src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	vendor/lua/src/llex.c	/^static int read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_string	vendor/lua/src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
read_ur	proxy.h	/^    struct __kernel_timespec read_ur;$/;"	m	struct:proxy_tunables	typeref:struct:proxy_tunables::__kernel_timespec
readable	vendor/lua/src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readdecesc	vendor/lua/src/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
readdigits	vendor/lua/src/liolib.c	/^static int readdigits (RN *rn, int hex) {$/;"	f	file:
reader	vendor/lua/src/luac.c	/^static const char* reader(lua_State* L, void* ud, size_t* size)$/;"	f	file:
reader	vendor/lua/src/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio
readhexaesc	vendor/lua/src/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
readutf8esc	vendor/lua/src/llex.c	/^static unsigned long readutf8esc (LexState *ls) {$/;"	f	file:
reallymarkobject	vendor/lua/src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
reallyold	vendor/lua/src/lstate.h	/^  GCObject *reallyold;  \/* objects more than one cycle old ("really old") *\/$/;"	m	struct:global_State
realtime	memcached.c	/^rel_time_t realtime(const time_t exptime) {$/;"	f
reason	logger.h	/^    int reason;$/;"	m	struct:logentry_conn_event
reassign_result_type	slabs.h	/^enum reassign_result_type {$/;"	g
rebalance_tid	slabs.c	/^static pthread_t rebalance_tid;$/;"	v	file:
recache_counter	memcached.h	/^    unsigned int recache_counter;$/;"	m	struct:conn
recache_or_free	storage.c	/^static void recache_or_free(io_pending_t *pending) {$/;"	f	file:
recache_time	proto_text.c	/^    rel_time_t recache_time;$/;"	m	struct:_meta_flags	file:
recfield	vendor/lua/src/lparser.c	/^static void recfield (LexState *ls, ConsControl *cc) {$/;"	f	file:
reclaimed	crawler.h	/^    uint64_t reclaimed;$/;"	m	struct:__anon99
reclaimed	items.c	/^    uint64_t reclaimed;$/;"	m	struct:__anon10	file:
reclaimed	memcached.h	/^    uint64_t        reclaimed;  \/* items reclaimed during this crawl. *\/$/;"	m	struct:__anon108
redispatch_conn	thread.c	/^void redispatch_conn(conn *c) {$/;"	f
redzone_pattern	cache.c	/^const uint64_t redzone_pattern = 0xdeadbeefcafedeed;$/;"	v
ref	proxy.h	/^    int ref; \/\/ luaL_ref reference.$/;"	m	struct:__anon105
refcount	extstore.c	/^    unsigned int refcount;$/;"	m	struct:_store_page	file:
refcount	memcached.h	/^    uint8_t refcount;$/;"	m	struct:_mc_resp_bundle
refcount	memcached.h	/^    unsigned short   refcount;  \/* used? *\/$/;"	m	struct:_strchunk
refcount	memcached.h	/^    unsigned short  refcount;$/;"	m	struct:__anon108
refcount	memcached.h	/^    unsigned short  refcount;$/;"	m	struct:_stritem
refcount	proxy.h	/^    int refcount;$/;"	m	struct:mcp_pool_s
refcount_decr	memcached.h	1000;"	d
refcount_incr	memcached.h	999;"	d
refresh_certs	tls.c	/^bool refresh_certs(char **errmsg) {$/;"	f
register_thread_initialized	thread.c	/^static void register_thread_initialized(void) {$/;"	f	file:
registerlocalvar	vendor/lua/src/lparser.c	/^static int registerlocalvar (LexState *ls, FuncState *fs, TString *varname) {$/;"	f	file:
reglevel	vendor/lua/src/lparser.c	/^static int reglevel (FuncState *fs, int nvar) {$/;"	f	file:
rehash	vendor/lua/src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
reinsert	vendor/lua/src/ltable.c	/^static void reinsert (lua_State *L, Table *ot, Table *t) {$/;"	f	file:
rejected_conns	memcached.h	/^    uint64_t      rejected_conns;$/;"	m	struct:stats
rel_time_t	logger.h	/^typedef unsigned int rel_time_t;$/;"	t
relaxed	slab_automove_extstore.c	/^    unsigned int relaxed;$/;"	m	struct:window_data	file:
relaxed_privileges	memcached.h	/^    bool relaxed_privileges;   \/* Relax process restrictions when running testapp *\/$/;"	m	struct:settings
remaining	memcached.h	/^    uint32_t        remaining;  \/* Max keys to crawl per slab per invocation *\/$/;"	m	struct:__anon108
remarkupvals	vendor/lua/src/lgc.c	/^static int remarkupvals (global_State *g) {$/;"	f	file:
remove_pidfile	memcached.c	/^static void remove_pidfile(const char *pid_file) {$/;"	f	file:
removelastinstruction	vendor/lua/src/lcode.c	/^static void removelastinstruction (FuncState *fs) {$/;"	f	file:
removelastlineinfo	vendor/lua/src/lcode.c	/^static void removelastlineinfo (FuncState *fs) {$/;"	f	file:
removevalues	vendor/lua/src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	vendor/lua/src/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
reopen_logfile	scripts/start-memcached	/^sub reopen_logfile$/;"	s
repeatstat	vendor/lua/src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
replace	t/binary-extstore.t	/^sub replace {$/;"	s
replace	t/binary-sasl.t	/^sub replace {$/;"	s
replace	t/binary.t	/^sub replace {$/;"	s
report	vendor/lua/src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
reprepstate	vendor/lua/src/lstrlib.c	/^static void reprepstate (MatchState *ms) {$/;"	f	file:
req_cas_id	proto_text.c	/^    uint64_t req_cas_id;$/;"	m	struct:_meta_flags	file:
req_ref	proxy_await.c	/^    int req_ref;$/;"	m	struct:mcp_await_s	file:
reqlen	logger.h	/^    int reqlen;$/;"	m	struct:_entry_details
reqlen	logger.h	/^    uint32_t reqlen;$/;"	m	struct:logentry_proxy_req
reqlen	proxy.h	/^    uint32_t reqlen; \/\/ full length of request buffer.$/;"	m	struct:mcp_parser_s
reqlog_factory	t/startfile.lua	/^function reqlog_factory(route)$/;"	f
reqs_per_event	memcached.h	/^    int reqs_per_event;     \/* Maximum number of io to process on each$/;"	m	struct:settings
request	protocol_binary.h	/^        } request;$/;"	m	union:__anon65	typeref:struct:__anon65::__anon66
request	proxy.h	/^    char request[];$/;"	m	struct:mcp_request_s
request	proxy.h	/^    const char *request;$/;"	m	struct:mcp_parser_s
request_addr	memcached.h	/^    struct sockaddr_in6 request_addr; \/* udp: Who sent the most recent request *\/$/;"	m	struct:conn	typeref:struct:conn::sockaddr_in6
request_addr	memcached.h	/^    struct sockaddr_in6 request_addr; \/* udp: Who sent this request *\/$/;"	m	struct:_mc_resp	typeref:struct:_mc_resp::sockaddr_in6
request_addr_size	memcached.h	/^    socklen_t request_addr_size;$/;"	m	struct:_mc_resp
request_addr_size	memcached.h	/^    socklen_t request_addr_size;$/;"	m	struct:conn
request_id	memcached.h	/^    int    request_id; \/* Incoming UDP request ID, if this is a UDP "connection" *\/$/;"	m	struct:conn
request_id	memcached.h	/^    uint16_t    request_id; \/* Incoming UDP request ID, if this is a UDP "connection" *\/$/;"	m	struct:_mc_resp
rescues	memcached.h	/^    uint32_t rescues;$/;"	m	struct:slab_rebalance
reserved	protocol_binary.h	/^                uint8_t  reserved;$/;"	m	struct:__anon94::__anon95::__anon96
reserved	protocol_binary.h	/^            uint16_t reserved;$/;"	m	struct:__anon65::__anon66
reserved	xxhash.h	/^   XXH32_hash_t reserved;     \/*!< Reserved field. Do not read or write to it, it may be removed. *\/$/;"	m	struct:XXH32_state_s
reserved32	xxhash.h	/^   XXH32_hash_t reserved32;   \/*!< Reserved field, needed for padding anyways*\/$/;"	m	struct:XXH64_state_s
reserved32	xxhash.h	/^   XXH32_hash_t reserved32;$/;"	m	struct:XXH3_state_s
reserved64	xxhash.h	/^   XXH64_hash_t reserved64;   \/*!< Reserved field. Do not read or write to it, it may be removed. *\/$/;"	m	struct:XXH64_state_s
reserved64	xxhash.h	/^   XXH64_hash_t reserved64;$/;"	m	struct:XXH3_state_s
reserved_fds	memcached.h	/^    unsigned int  reserved_fds;$/;"	m	struct:stats_state
reset_cmd_handler	memcached.c	/^static void reset_cmd_handler(conn *c) {$/;"	f	file:
reset_threads_napi_id	thread.c	/^static void reset_threads_napi_id(void)$/;"	f	file:
resetbit	vendor/lua/src/lgc.h	66;"	d
resetbits	vendor/lua/src/lgc.h	60;"	d
resethookcount	vendor/lua/src/ldebug.h	21;"	d
resizebox	vendor/lua/src/lauxlib.c	/^static void *resizebox (lua_State *L, int idx, size_t newsize) {$/;"	f	file:
reslen	vendor/mcmc/mcmc.h	/^    size_t reslen; \/\/ full length of the response line$/;"	m	struct:__anon21
resp	memcached.h	/^    mc_resp *resp; \/\/ associated response object$/;"	m	struct:_io_pending_t
resp	memcached.h	/^    mc_resp *resp; \/\/ tail response.$/;"	m	struct:conn
resp	proxy.h	/^    mc_resp *resp;  \/\/ original struct ends here$/;"	m	struct:_io_pending_proxy_t
resp	proxy.h	/^    mcmc_resp_t resp;$/;"	m	struct:__anon104
resp	proxy_await.c	/^    mc_resp *resp; \/\/ the top level mc_resp to fill in (as if we were an iop)$/;"	m	struct:mcp_await_s	file:
resp	storage.c	/^    mc_resp *resp;            \/* original struct ends here *\/$/;"	m	struct:_io_pending_storage_t	file:
resp_add_chunked_iov	memcached.c	/^void resp_add_chunked_iov(mc_resp *resp, const void *buf, int len) {$/;"	f
resp_add_iov	memcached.c	/^void resp_add_iov(mc_resp *resp, const void *buf, int len) {$/;"	f
resp_allocate	memcached.c	/^static mc_resp* resp_allocate(conn *c) {$/;"	f	file:
resp_finish	memcached.c	/^mc_resp* resp_finish(conn *c, mc_resp *resp) {$/;"	f
resp_free	memcached.c	/^static void resp_free(conn *c, mc_resp *resp) {$/;"	f	file:
resp_has_stack	memcached.c	/^bool resp_has_stack(conn *c) {$/;"	f
resp_head	memcached.h	/^    mc_resp *resp_head; \/\/ first response in current stack.$/;"	m	struct:conn
resp_reset	memcached.c	/^void resp_reset(mc_resp *resp) {$/;"	f
resp_start	memcached.c	/^bool resp_start(conn *c) {$/;"	f
response	protocol_binary.h	/^        } response;$/;"	m	union:__anon67	typeref:struct:__anon67::__anon68
restable_ref	proxy_await.c	/^    int restable_ref; \/\/ table of result objects$/;"	m	struct:mcp_await_s	file:
restart	scripts/memcached.sysv	/^restart () {$/;"	f
restart_cb_ctx	restart.c	/^} restart_cb_ctx;$/;"	t	typeref:struct:__anon17	file:
restart_check	restart.c	/^static int restart_check(const char *file) {$/;"	f	file:
restart_check_cb	restart.h	/^typedef int (*restart_check_cb)(const char *tag, void *ctx, void *data);$/;"	t
restart_data_cb	restart.c	/^typedef struct _restart_data_cb restart_data_cb;$/;"	t	typeref:struct:_restart_data_cb	file:
restart_fixup	restart.c	/^unsigned int restart_fixup(void *orig_addr) {$/;"	f
restart_get_kv	restart.c	/^enum restart_get_kv_ret restart_get_kv(void *ctx, char **key, char **val) {$/;"	f
restart_get_kv_ret	restart.h	/^enum restart_get_kv_ret {$/;"	g
restart_mmap_close	restart.c	/^void restart_mmap_close(void) {$/;"	f
restart_mmap_open	restart.c	/^bool restart_mmap_open(const size_t limit, const char *file, void **mem_base) {$/;"	f
restart_register	restart.c	/^void restart_register(const char *tag, restart_check_cb ccb, restart_save_cb scb, void *data) {$/;"	f
restart_save	restart.c	/^static int restart_save(const char *file) {$/;"	f	file:
restart_save_cb	restart.h	/^typedef int (*restart_save_cb)(const char *tag, void *ctx, void *data);$/;"	t
restart_set_kv	restart.c	/^void restart_set_kv(void *ctx, const char *key, const char *fmt, ...) {$/;"	f
restartcollection	vendor/lua/src/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
restassign	vendor/lua/src/lparser.c	/^static void restassign (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
restorestack	vendor/lua/src/ldo.h	36;"	d
resume	vendor/lua/src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	vendor/lua/src/ldo.c	/^static int resume_error (lua_State *L, const char *msg, int narg) {$/;"	f	file:
rethook	vendor/lua/src/ldo.c	/^static void rethook (lua_State *L, CallInfo *ci, int nres) {$/;"	f	file:
retry	proxy.h	/^    struct timeval retry; \/\/ wait time before retrying a dead backend$/;"	m	struct:proxy_tunables	typeref:struct:proxy_tunables::timeval
retry_ur	proxy.h	/^    struct __kernel_timespec retry_ur;$/;"	m	struct:proxy_tunables	typeref:struct:proxy_tunables::__kernel_timespec
retstat	vendor/lua/src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
return_cb	memcached.h	/^    io_queue_cb return_cb; \/\/ called on worker thread.$/;"	m	struct:io_queue_cb_s
return_io_pending	thread.c	/^void return_io_pending(io_pending_t *io) {$/;"	f
reverse	vendor/lua/src/lapi.c	/^static void reverse (lua_State *L, StkId from, StkId to) {$/;"	f	file:
ridx	vendor/lua/src/lparser.h	/^      lu_byte ridx;  \/* register holding the variable *\/$/;"	m	struct:expdesc::__anon35::__anon37
ridx	vendor/lua/src/lparser.h	/^    lu_byte ridx;  \/* register holding the variable *\/$/;"	m	struct:Vardesc::__anon38
right	vendor/lua/src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon48	file:
righttt	vendor/lua/src/lobject.h	96;"	d
ring	proxy.h	/^    struct io_uring ring;$/;"	m	struct:proxy_event_thread_s	typeref:struct:proxy_event_thread_s::io_uring
ritem	memcached.h	/^    char   *ritem;  \/** when we read in an item's value, it goes here *\/$/;"	m	struct:conn
rkname	vendor/lua/src/ldebug.c	/^static void rkname (const Proto *p, int pc, Instruction i, const char **name) {$/;"	f	file:
rlbytes	memcached.h	/^    int    rlbytes;$/;"	m	struct:conn
rlen	vendor/mcmc/mcmc.h	/^            size_t rlen;$/;"	m	struct:__anon21::__anon22::__anon23
rline	vendor/mcmc/mcmc.h	/^            char *rline; \/\/ start of meta response line.$/;"	m	struct:__anon21::__anon22::__anon23
rname	vendor/lua/src/ldebug.c	/^static void rname (const Proto *p, int pc, int c, const char **name) {$/;"	f	file:
rot	jenkins_hash.c	33;"	d	file:
rotl	vendor/lua/src/lmathlib.c	/^static Rand64 rotl (Rand64 i, int n) {$/;"	f	file:
rotl	vendor/lua/src/lmathlib.c	/^static Rand64 rotl (Rand64 x, int n) {$/;"	f	file:
rotl1	vendor/lua/src/lmathlib.c	/^static Rand64 rotl1 (Rand64 i, int n) {$/;"	f	file:
rotl32	murmur3_hash.c	/^static inline uint32_t rotl32 ( uint32_t x, int8_t r )$/;"	f	file:
round_robin_fallback	memcached.h	/^    uint64_t      round_robin_fallback; \/* see doc\/napi_ids.txt *\/$/;"	m	struct:stats
rq	proxy_await.c	/^    mcp_request_t *rq;$/;"	m	struct:mcp_await_s	file:
rsize	memcached.h	/^    int    rsize;   \/** total allocated size of rbuf *\/$/;"	m	struct:conn
run	slab_automove.h	/^    slab_automove_run_func run;$/;"	m	struct:__anon16
run_complete	crawler.h	/^    bool run_complete;$/;"	m	struct:__anon99
run_help	t/lib/MemcachedTest.pm	/^sub run_help {$/;"	s
runafewfinalizers	vendor/lua/src/lgc.c	/^static int runafewfinalizers (lua_State *L, int n) {$/;"	f	file:
runargs	vendor/lua/src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
runstatedir	Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	doc/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
s	vendor/lua/src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s	vendor/lua/src/lmathlib.c	/^  Rand64 s[4];$/;"	m	struct:__anon27	file:
s2v	vendor/lua/src/lobject.h	159;"	d
sC2int	vendor/lua/src/lopcodes.h	101;"	d
s_clsid	memcached.h	/^    int s_clsid;$/;"	m	struct:slab_rebalance
safe_memcmp	util.c	/^bool safe_memcmp(const void *a, const void *b, size_t len) {$/;"	f
safe_recv	testapp.c	/^static bool safe_recv(void *buf, size_t len) {$/;"	f	file:
safe_recv_packet	testapp.c	/^static bool safe_recv_packet(void *buf, size_t size) {$/;"	f	file:
safe_send	testapp.c	/^static void safe_send(const void* buf, size_t len, bool hickup)$/;"	f	file:
safe_strcpy	util.c	/^bool safe_strcpy(char *dst, const char *src, const size_t dstmax) {$/;"	f
safe_strtod	util.c	/^bool safe_strtod(const char *str, double *out) {$/;"	f
safe_strtol	util.c	/^bool safe_strtol(const char *str, int32_t *out) {$/;"	f
safe_strtoll	util.c	/^bool safe_strtoll(const char *str, int64_t *out) {$/;"	f
safe_strtoul	util.c	/^bool safe_strtoul(const char *str, uint32_t *out) {$/;"	f
safe_strtoull	util.c	/^bool safe_strtoull(const char *str, uint64_t *out) {$/;"	f
safe_strtoull_hex	util.c	/^bool safe_strtoull_hex(const char *str, uint64_t *out) {$/;"	f
sam_after	slab_automove.c	/^    slab_stats_automove sam_after[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon57	file:
sam_after	slab_automove_extstore.c	/^    slab_stats_automove sam_after[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon15	file:
sam_before	slab_automove.c	/^    slab_stats_automove sam_before[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon57	file:
sam_before	slab_automove_extstore.c	/^    slab_stats_automove sam_before[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:__anon15	file:
sanitycheck	memcached.c	/^static bool sanitycheck(void) {$/;"	f	file:
sasl	memcached.h	/^    bool sasl;              \/* SASL on\/off *\/$/;"	m	struct:settings
sasl_callback_ft	sasl_defs.c	/^typedef int (*sasl_callback_ft)(void);$/;"	t	file:
sasl_callbacks	sasl_defs.c	/^static sasl_callback_t sasl_callbacks[] = {$/;"	v	file:
sasl_conn	memcached.h	/^    sasl_conn_t *sasl_conn;$/;"	m	struct:conn
sasl_conn_t	sasl_defs.h	/^typedef void* sasl_conn_t;$/;"	t
sasl_dispose	sasl_defs.h	19;"	d
sasl_getconf	sasl_defs.c	/^static int sasl_getconf(void *context, const char **path)$/;"	f	file:
sasl_getprop	sasl_defs.h	24;"	d
sasl_listmech	sasl_defs.h	21;"	d
sasl_log	sasl_defs.c	/^static int sasl_log(void *context, int level, const char *message)$/;"	f	file:
sasl_server_new	sasl_defs.h	20;"	d
sasl_server_start	sasl_defs.h	22;"	d
sasl_server_step	sasl_defs.h	23;"	d
sasl_server_userdb_checkpass	sasl_defs.c	/^static int sasl_server_userdb_checkpass(sasl_conn_t *conn,$/;"	f	file:
sasl_started	memcached.h	/^    bool sasl_started;$/;"	m	struct:conn
sasl_step	t/binary-sasl.t	/^sub sasl_step {$/;"	s
save	vendor/lua/src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save_and_next	vendor/lua/src/llex.c	51;"	d	file:
save_pid	memcached.c	/^static void save_pid(const char *pid_file) {$/;"	f	file:
savedpc	vendor/lua/src/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon29::__anon30
savelineinfo	vendor/lua/src/lcode.c	/^static void savelineinfo (FuncState *fs, Proto *f, int line) {$/;"	f	file:
savepc	vendor/lua/src/lvm.c	1082;"	d	file:
savestack	vendor/lua/src/ldo.h	35;"	d
savestate	vendor/lua/src/lvm.c	1089;"	d	file:
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	doc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbytes	memcached.h	/^    int    sbytes;    \/* how many bytes to swallow *\/$/;"	m	struct:conn
scaleFIG	vendor/lua/src/lmathlib.c	335;"	d	file:
scaleFIG	vendor/lua/src/lmathlib.c	461;"	d	file:
scaleFIG	vendor/lua/src/lmathlib.c	477;"	d	file:
scanformat	vendor/lua/src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
scb	restart.c	/^    restart_save_cb scb;$/;"	m	struct:_restart_data_cb	file:
searcher_C	vendor/lua/src/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	vendor/lua/src/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	vendor/lua/src/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	vendor/lua/src/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	vendor/lua/src/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	vendor/lua/src/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	vendor/lua/src/lparser.c	/^static int searchvar (FuncState *fs, TString *n, expdesc *var) {$/;"	f	file:
secretLimit	xxhash.h	/^   size_t secretLimit;$/;"	m	struct:XXH3_state_s
seed	vendor/lua/src/lstate.h	/^  unsigned int seed;  \/* randomized seed for hashes *\/$/;"	m	struct:global_State
seed	xxhash.h	/^   XXH64_hash_t seed;$/;"	m	struct:XXH3_state_s
seen	crawler.h	/^    uint64_t seen;$/;"	m	struct:__anon99
select_thread_by_napi_id	thread.c	/^static LIBEVENT_THREAD *select_thread_by_napi_id(int sfd)$/;"	f	file:
select_thread_round_robin	thread.c	/^static LIBEVENT_THREAD *select_thread_round_robin(void)$/;"	f	file:
selector_func	proxy.h	/^    hash_selector_func selector_func;$/;"	m	struct:proxy_hash_caller
self_ref	proxy.h	/^    int self_ref; \/\/ TODO (v2): double check that this is needed.$/;"	m	struct:mcp_pool_s
seminfo	vendor/lua/src/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token
send_ascii_command	testapp.c	/^static void send_ascii_command(const char *buf) {$/;"	f	file:
send_command	t/binary-extstore.t	/^sub send_command {$/;"	s
send_command	t/binary-sasl.t	/^sub send_command {$/;"	s
send_command	t/binary.t	/^sub send_command {$/;"	s
send_silent	t/binary-extstore.t	/^sub send_silent {$/;"	s
send_silent	t/binary-sasl.t	/^sub send_silent {$/;"	s
send_silent	t/binary.t	/^sub send_silent {$/;"	s
send_udp_request	t/udp.t	/^sub send_udp_request {$/;"	s
sendmsg	memcached.h	/^    ssize_t (*sendmsg)(conn *c, struct msghdr *msg, int flags);$/;"	m	struct:conn
sent_bytes_partial	vendor/mcmc/mcmc.c	/^    int sent_bytes_partial; \/\/ note for partially sent buffers.$/;"	m	struct:mcmc_ctx	file:
separatetobefnz	vendor/lua/src/lgc.c	/^static void separatetobefnz (global_State *g, int all) {$/;"	f	file:
server_connect	scripts/memcached-tool	/^sub server_connect {$/;"	s
server_pid	testapp.c	/^static pid_t server_pid;$/;"	v	file:
server_socket	memcached.c	/^static int server_socket(const char *interface,$/;"	f	file:
server_socket_unix	memcached.c	/^static int server_socket_unix(const char *path, int access_mask) {$/;"	f	file:
server_socket_unix	memcached.c	4021;"	d	file:
server_sockets	memcached.c	/^static int server_sockets(int port, enum network_transport transport,$/;"	f	file:
server_stats	memcached.c	/^void server_stats(ADD_STAT add_stats, conn *c) {$/;"	f
set	proxy.h	/^    bool set; \/\/ NOTE: not sure if necessary if code structured properly$/;"	m	struct:__anon101
set	t/binary-extstore.t	/^sub set {$/;"	s
set	t/binary-sasl.t	/^sub set {$/;"	s
set	t/binary.t	/^sub set {$/;"	s
set2	vendor/lua/src/ltablib.c	/^static void set2 (lua_State *L, IdxT i, IdxT j) {$/;"	f	file:
set2black	vendor/lua/src/lgc.c	79;"	d	file:
set2gray	vendor/lua/src/lgc.c	75;"	d	file:
set_base_from	depcomp	/^set_base_from ()$/;"	f
set_cas_id	items.c	/^void set_cas_id(uint64_t new_cas) {$/;"	f
set_cc_for_build	config.guess	/^set_cc_for_build() {$/;"	f
set_dir_from	depcomp	/^set_dir_from ()$/;"	f
set_noreply_maybe	proto_text.c	/^static inline bool set_noreply_maybe(conn *c, token_t *tokens, size_t ntokens)$/;"	f	file:
set_stale	memcached.h	/^    bool set_stale;$/;"	m	struct:conn
set_stale	proto_text.c	/^    unsigned int set_stale :1;$/;"	m	struct:_meta_flags	file:
setage	vendor/lua/src/lgc.h	117;"	d
setallfields	vendor/lua/src/loslib.c	/^static void setallfields (lua_State *L, struct tm *stm) {$/;"	f	file:
setarg	vendor/lua/src/lopcodes.h	122;"	d
setbfvalue	vendor/lua/src/lobject.h	237;"	d
setbits	vendor/lua/src/lgc.h	61;"	d
setboolfield	vendor/lua/src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
setbtvalue	vendor/lua/src/lobject.h	238;"	d
setcistrecst	vendor/lua/src/lstate.h	229;"	d
setclCvalue	vendor/lua/src/lobject.h	607;"	d
setclLvalue	vendor/lua/src/lobject.h	597;"	d
setclLvalue2s	vendor/lua/src/lobject.h	602;"	d
setdeadkey	vendor/lua/src/lobject.h	763;"	d
setempty	vendor/lua/src/lobject.h	212;"	d
setfield	vendor/lua/src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value, int delta) {$/;"	f	file:
setfltvalue	vendor/lua/src/lobject.h	325;"	d
setfvalue	vendor/lua/src/lobject.h	604;"	d
setgcovalue	vendor/lua/src/lobject.h	296;"	d
setgcparam	vendor/lua/src/lgc.h	136;"	d
sethvalue	vendor/lua/src/lobject.h	671;"	d
sethvalue2s	vendor/lua/src/lobject.h	676;"	d
setinvalidate_factory	t/startfile.lua	/^function setinvalidate_factory(zones, local_zone)$/;"	f
setivalue	vendor/lua/src/lobject.h	331;"	d
setlimittosize	vendor/lua/src/ltable.c	/^static unsigned int setlimittosize (Table *t) {$/;"	f	file:
setminordebt	vendor/lua/src/lgc.c	/^static void setminordebt (global_State *g) {$/;"	f	file:
setnilkey	vendor/lua/src/lobject.h	749;"	d
setnilvalue	vendor/lua/src/lobject.h	187;"	d
setnodekey	vendor/lua/src/lobject.h	698;"	d
setnodevector	vendor/lua/src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:
setnorealasize	vendor/lua/src/lobject.h	721;"	d
setoah	vendor/lua/src/lstate.h	242;"	d
setobj	vendor/lua/src/lobject.h	116;"	d
setobj2n	vendor/lua/src/lobject.h	133;"	d
setobj2s	vendor/lua/src/lobject.h	129;"	d
setobj2t	vendor/lua/src/lobject.h	135;"	d
setobjs2s	vendor/lua/src/lobject.h	127;"	d
setobjt2t	vendor/lua/src/lobject.h	131;"	d
setpath	vendor/lua/src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname,$/;"	f	file:
setpause	vendor/lua/src/lgc.c	/^static void setpause (global_State *g) {$/;"	f	file:
setprogdir	vendor/lua/src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	vendor/lua/src/loadlib.c	170;"	d	file:
setprogdir	vendor/lua/src/loadlib.c	67;"	d	file:
setpvalue	vendor/lua/src/lobject.h	428;"	d
setrandfunc	vendor/lua/src/lmathlib.c	/^static void setrandfunc (lua_State *L) {$/;"	f	file:
setrealasize	vendor/lua/src/lobject.h	720;"	d
setseed	vendor/lua/src/lmathlib.c	/^static void setseed (lua_State *L, Rand64 *state,$/;"	f	file:
setsignal	vendor/lua/src/lua.c	/^static void setsignal (int sig, void (*handler)(int)) {$/;"	f	file:
setsignal	vendor/lua/src/lua.c	55;"	d	file:
setsvalue	vendor/lua/src/lobject.h	358;"	d
setsvalue2n	vendor/lua/src/lobject.h	367;"	d
setsvalue2s	vendor/lua/src/lobject.h	364;"	d
settabsb	vendor/lua/src/ldblib.c	/^static void settabsb (lua_State *L, const char *k, int v) {$/;"	f	file:
settabsi	vendor/lua/src/ldblib.c	/^static void settabsi (lua_State *L, const char *k, int v) {$/;"	f	file:
settabss	vendor/lua/src/ldblib.c	/^static void settabss (lua_State *L, const char *k, const char *v) {$/;"	f	file:
setthvalue	vendor/lua/src/lobject.h	255;"	d
setthvalue2s	vendor/lua/src/lobject.h	260;"	d
settings	memcached.c	/^struct settings settings;$/;"	v	typeref:struct:settings
settings	memcached.h	/^struct settings {$/;"	s
settings	slab_automove_extstore.c	/^    struct settings *settings;$/;"	m	struct:__anon15	typeref:struct:__anon15::settings	file:
settings_init	memcached.c	/^static void settings_init(void) {$/;"	f	file:
settraps	vendor/lua/src/ldebug.c	/^static void settraps (CallInfo *ci) {$/;"	f	file:
settt_	vendor/lua/src/lobject.h	112;"	d
setup_privilege_violations_handler	darwin_priv.c	/^void setup_privilege_violations_handler(void) {$/;"	f
setup_privilege_violations_handler	freebsd_priv.c	/^void setup_privilege_violations_handler(void) {$/;"	f
setup_privilege_violations_handler	linux_priv.c	/^void setup_privilege_violations_handler(void) {$/;"	f
setup_privilege_violations_handler	memcached.h	1054;"	d
setup_privilege_violations_handler	openbsd_priv.c	/^void setup_privilege_violations_handler(void) {$/;"	f
setup_privilege_violations_handler	solaris_priv.c	/^void setup_privilege_violations_handler(void) {$/;"	f
setup_thread	thread.c	/^static void setup_thread(LIBEVENT_THREAD *me) {$/;"	f	file:
setuvalue	vendor/lua/src/lobject.h	431;"	d
setvararg	vendor/lua/src/lparser.c	/^static void setvararg (FuncState *fs, int nparams) {$/;"	f	file:
sfd	crawler.c	/^    int sfd; \/* client fd. *\/$/;"	m	struct:__anon55	file:
sfd	logger.h	/^    int sfd; \/* client fd *\/$/;"	m	struct:__anon60
sfd	logger.h	/^    int sfd;$/;"	m	struct:logentry_conn_event
sfd	logger.h	/^    int sfd;$/;"	m	struct:logentry_item_get
sfd	logger.h	/^    int sfd;$/;"	m	struct:logentry_item_store
sfd	memcached.h	/^    int    sfd;$/;"	m	struct:conn
sfd	thread.c	/^    int               sfd;$/;"	m	struct:conn_queue_item	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	doc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shift64_FIG	vendor/lua/src/lmathlib.c	332;"	d	file:
shiftHI	vendor/lua/src/lmathlib.c	489;"	d	file:
shiftLOW	vendor/lua/src/lmathlib.c	484;"	d	file:
short_src	vendor/lua/src/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug
show_help	scripts/damemtop	/^sub show_help {$/;"	s
show_response_buffer	vendor/mcmc/example.c	/^static void show_response_buffer(void *c, char *rbuf, size_t bufsize) {$/;"	f	file:
shrlen	vendor/lua/src/lobject.h	/^  lu_byte shrlen;  \/* length for short strings *\/$/;"	m	struct:TString
shutdown_command	memcached.h	/^    bool shutdown_command; \/* allow shutdown command *\/$/;"	m	struct:settings
shutdown_memcached_server	testapp.c	/^static enum test_return shutdown_memcached_server(void) {$/;"	f	file:
sidethread_conn_close	thread.c	/^void sidethread_conn_close(conn *c) {$/;"	f
sig_handler	memcached.c	/^static void sig_handler(const int sig) {$/;"	f	file:
sig_hup	memcached.h	/^    volatile sig_atomic_t sig_hup;  \/* a HUP signal was received but not yet handled *\/$/;"	m	struct:settings
sig_usrhandler	memcached.c	/^static void sig_usrhandler(const int sig) {$/;"	f	file:
sighup_handler	memcached.c	/^static void sighup_handler(const int sig) {$/;"	f	file:
signal_handler	timedrun.c	/^static void signal_handler(int which)$/;"	f	file:
silent_incrdecr	t/binary-extstore.t	/^sub silent_incrdecr {$/;"	s
silent_incrdecr	t/binary-sasl.t	/^sub silent_incrdecr {$/;"	s
silent_incrdecr	t/binary.t	/^sub silent_incrdecr {$/;"	s
silent_mutation	t/binary-extstore.t	/^sub silent_mutation {$/;"	s
silent_mutation	t/binary-sasl.t	/^sub silent_mutation {$/;"	s
silent_mutation	t/binary.t	/^sub silent_mutation {$/;"	s
simpleexp	vendor/lua/src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
singlematch	vendor/lua/src/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	vendor/lua/src/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	vendor/lua/src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	vendor/lua/src/lparser.c	/^static void singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
size	bipbuffer.h	/^    unsigned long int size;$/;"	m	struct:__anon58
size	extstore.c	/^    unsigned int size;$/;"	m	struct:__store_wbuf	file:
size	logger.h	/^    int size;$/;"	m	struct:_logentry
size	memcached.h	/^        size_t size;$/;"	m	struct:conn::__anon111
size	memcached.h	/^    int              size;      \/* available chunk space in bytes *\/$/;"	m	struct:_strchunk
size	protocol_binary.h	/^                uint16_t size;$/;"	m	struct:__anon94::__anon95::__anon96
size	proxy_config.c	/^    size_t size;$/;"	m	struct:_dumpbuf	file:
size	slabs.c	/^    unsigned int size;      \/* sizes of items *\/$/;"	m	struct:__anon100	file:
size	vendor/lua/src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	vendor/lua/src/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer
size	vendor/lua/src/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon39
size	vendor/lua/src/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist
size	vendor/lua/src/lstate.h	/^  int size;$/;"	m	struct:stringtable
sizeCclosure	vendor/lua/src/lfunc.h	14;"	d
sizeLclosure	vendor/lua/src/lfunc.h	17;"	d
sizeabslineinfo	vendor/lua/src/lobject.h	/^  int sizeabslineinfo;  \/* size of 'abslineinfo' *\/$/;"	m	struct:Proto
sizecode	vendor/lua/src/lobject.h	/^  int sizecode;$/;"	m	struct:Proto
sizek	vendor/lua/src/lobject.h	/^  int sizek;  \/* size of 'k' *\/$/;"	m	struct:Proto
sizelineinfo	vendor/lua/src/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto
sizelocvars	vendor/lua/src/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto
sizelstring	vendor/lua/src/lstring.h	26;"	d
sizenode	vendor/lua/src/lobject.h	778;"	d
sizep	vendor/lua/src/lobject.h	/^  int sizep;  \/* size of 'p' *\/$/;"	m	struct:Proto
sizes	items.c	/^static unsigned int sizes[LARGEST_ID];$/;"	v	file:
sizes_LDADD	Makefile	/^sizes_LDADD = $(LDADD)$/;"	m
sizes_OBJECTS	Makefile	/^sizes_OBJECTS = sizes.$(OBJEXT)$/;"	m
sizes_SOURCES	Makefile	/^sizes_SOURCES = sizes.c$/;"	m
sizes_bytes	items.c	/^static uint64_t sizes_bytes[LARGEST_ID];$/;"	v	file:
sizeudata	vendor/lua/src/lobject.h	485;"	d
sizeupvalues	vendor/lua/src/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto
skip	memcached.h	/^    bool skip;$/;"	m	struct:_mc_resp
skipBOM	vendor/lua/src/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:
skip_sep	vendor/lua/src/llex.c	/^static size_t skip_sep (LexState *ls) {$/;"	f	file:
skipcomment	vendor/lua/src/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:
skipped	logger.h	/^    uint64_t skipped; \/* lines skipped since last successful print *\/$/;"	m	struct:__anon60
sl_curr	slabs.c	/^    unsigned int sl_curr;   \/* total free items in list *\/$/;"	m	struct:__anon100	file:
slab_automove	memcached.h	/^    int slab_automove;     \/* Whether or not to automatically move slabs *\/$/;"	m	struct:settings
slab_automove	slab_automove.c	/^} slab_automove;$/;"	t	typeref:struct:__anon57	file:
slab_automove	slab_automove_extstore.c	/^} slab_automove;$/;"	t	typeref:struct:__anon15	file:
slab_automove_default	items.c	/^slab_automove_reg_t slab_automove_default = {$/;"	v
slab_automove_extstore	items.c	/^slab_automove_reg_t slab_automove_extstore = {$/;"	v
slab_automove_extstore_free	slab_automove_extstore.c	/^void slab_automove_extstore_free(void *arg) {$/;"	f
slab_automove_extstore_init	slab_automove_extstore.c	/^void *slab_automove_extstore_init(struct settings *settings) {$/;"	f
slab_automove_extstore_run	slab_automove_extstore.c	/^void slab_automove_extstore_run(void *arg, int *src, int *dst) {$/;"	f
slab_automove_free	slab_automove.c	/^void slab_automove_free(void *arg) {$/;"	f
slab_automove_free_func	slab_automove.h	/^typedef void (*slab_automove_free_func)(void *arg);$/;"	t
slab_automove_freeratio	memcached.h	/^    double slab_automove_freeratio; \/* % of memory to hold free as buffer *\/$/;"	m	struct:settings
slab_automove_init	slab_automove.c	/^void *slab_automove_init(struct settings *settings) {$/;"	f
slab_automove_init_func	slab_automove.h	/^typedef void *(*slab_automove_init_func)(struct settings *settings);$/;"	t
slab_automove_ratio	memcached.h	/^    double slab_automove_ratio; \/* youngest must be within pct of oldest *\/$/;"	m	struct:settings
slab_automove_reg_t	slab_automove.h	/^} slab_automove_reg_t;$/;"	t	typeref:struct:__anon16
slab_automove_run	slab_automove.c	/^void slab_automove_run(void *arg, int *src, int *dst) {$/;"	f
slab_automove_run_func	slab_automove.h	/^typedef void (*slab_automove_run_func)(void *arg, int *src, int *dst);$/;"	t
slab_automove_window	memcached.h	/^    unsigned int slab_automove_window; \/* window mover for algorithm *\/$/;"	m	struct:settings
slab_chunk_size_max	memcached.h	/^    int slab_chunk_size_max;  \/* Upper end for chunks within slab pages. *\/$/;"	m	struct:settings
slab_config	memcached.c	/^    char *slab_config; \/\/ string containing either factor or custom slab list.$/;"	m	struct:_mc_meta_data	file:
slab_end	memcached.h	/^    void *slab_end;$/;"	m	struct:slab_rebalance
slab_list	slabs.c	/^    void **slab_list;       \/* array of slab pointers *\/$/;"	m	struct:__anon100	file:
slab_page_size	memcached.h	/^    int slab_page_size;     \/* Slab's page units. *\/$/;"	m	struct:settings
slab_pos	memcached.h	/^    void *slab_pos;$/;"	m	struct:slab_rebalance
slab_reassign	memcached.h	/^    bool slab_reassign;     \/* Whether or not slab reassignment is allowed *\/$/;"	m	struct:settings
slab_reassign_busy_deletes	memcached.h	/^    uint64_t      slab_reassign_busy_deletes; \/* refcounted items killed *\/$/;"	m	struct:stats
slab_reassign_busy_items	memcached.h	/^    uint64_t      slab_reassign_busy_items; \/* valid temporarily unmovable *\/$/;"	m	struct:stats
slab_reassign_chunk_rescues	memcached.h	/^    uint64_t      slab_reassign_chunk_rescues; \/* chunked-item chunks recovered *\/$/;"	m	struct:stats
slab_reassign_evictions_nomem	memcached.h	/^    uint64_t      slab_reassign_evictions_nomem; \/* valid items lost during slab move *\/$/;"	m	struct:stats
slab_reassign_inline_reclaim	memcached.h	/^    uint64_t      slab_reassign_inline_reclaim; \/* valid items lost during slab move *\/$/;"	m	struct:stats
slab_reassign_rescues	memcached.h	/^    uint64_t      slab_reassign_rescues; \/* items rescued during slab move *\/$/;"	m	struct:stats
slab_reassign_running	memcached.h	/^    bool          slab_reassign_running; \/* slab reassign in progress *\/$/;"	m	struct:stats_state
slab_rebal	memcached.c	/^struct slab_rebalance slab_rebal;$/;"	v	typeref:struct:slab_rebalance
slab_rebalance	memcached.h	/^struct slab_rebalance {$/;"	s
slab_rebalance_alloc	slabs.c	/^static void *slab_rebalance_alloc(const size_t size, unsigned int id) {$/;"	f	file:
slab_rebalance_cond	slabs.c	/^static pthread_cond_t slab_rebalance_cond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
slab_rebalance_cut_free	slabs.c	/^static void slab_rebalance_cut_free(slabclass_t *s_cls, item *it) {$/;"	f	file:
slab_rebalance_finish	slabs.c	/^static void slab_rebalance_finish(void) {$/;"	f	file:
slab_rebalance_move	slabs.c	/^static int slab_rebalance_move(void) {$/;"	f	file:
slab_rebalance_signal	memcached.c	/^volatile int slab_rebalance_signal;$/;"	v
slab_rebalance_start	slabs.c	/^static int slab_rebalance_start(void) {$/;"	f	file:
slab_rebalance_thread	slabs.c	/^static void *slab_rebalance_thread(void *arg) {$/;"	f	file:
slab_start	memcached.h	/^    void *slab_start;$/;"	m	struct:slab_rebalance
slab_stats	memcached.h	/^    struct slab_stats slab_stats[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	m	struct:thread_stats	typeref:struct:thread_stats::slab_stats
slab_stats	memcached.h	/^struct slab_stats {$/;"	s
slab_stats_aggregate	thread.c	/^void slab_stats_aggregate(struct thread_stats *stats, struct slab_stats *out) {$/;"	f
slab_stats_automove	slabs.h	/^} slab_stats_automove;$/;"	t	typeref:struct:__anon18
slabclass	slabs.c	/^static slabclass_t slabclass[MAX_NUMBER_OF_SLAB_CLASSES];$/;"	v	file:
slabclass_t	slabs.c	/^} slabclass_t;$/;"	t	typeref:struct:__anon100	file:
slabmem_limit	restart.c	/^static size_t slabmem_limit = 0;$/;"	v	file:
slabs	slabs.c	/^    unsigned int slabs;     \/* how many slabs were allocated for this class *\/$/;"	m	struct:__anon100	file:
slabs_adjust_mem_limit	slabs.c	/^bool slabs_adjust_mem_limit(size_t new_mem_limit) {$/;"	f
slabs_alloc	slabs.c	/^void *slabs_alloc(size_t size, unsigned int id,$/;"	f
slabs_available_chunks	slabs.c	/^unsigned int slabs_available_chunks(const unsigned int id, bool *mem_flag,$/;"	f
slabs_clsid	memcached.h	/^    uint8_t          slabs_clsid; \/* Same as above. *\/$/;"	m	struct:_strchunk
slabs_clsid	memcached.h	/^    uint8_t         slabs_clsid;\/* which slab class we're in *\/$/;"	m	struct:__anon108
slabs_clsid	memcached.h	/^    uint8_t         slabs_clsid;\/* which slab class we're in *\/$/;"	m	struct:_stritem
slabs_clsid	slabs.c	/^unsigned int slabs_clsid(const size_t size) {$/;"	f
slabs_fixup	slabs.c	/^unsigned int slabs_fixup(char *chunk, const int border) {$/;"	f
slabs_free	slabs.c	/^void slabs_free(void *ptr, size_t size, unsigned int id) {$/;"	f
slabs_init	slabs.c	/^void slabs_init(const size_t limit, const double factor, const bool prealloc, const uint32_t *slab_sizes, void *mem_base_external, bool reuse_mem) {$/;"	f
slabs_lock	slabs.c	/^static pthread_mutex_t slabs_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
slabs_mlock	slabs.c	/^void slabs_mlock(void) {$/;"	f
slabs_moved	memcached.h	/^    uint64_t      slabs_moved;       \/* times slabs were moved around *\/$/;"	m	struct:stats
slabs_munlock	slabs.c	/^void slabs_munlock(void) {$/;"	f
slabs_preallocate	slabs.c	/^static void slabs_preallocate (const unsigned int maxslabs) {$/;"	f	file:
slabs_prefill_global	slabs.c	/^void slabs_prefill_global(void) {$/;"	f
slabs_reassign	slabs.c	/^enum reassign_result_type slabs_reassign(int src, int dst) {$/;"	f
slabs_reassign_pick_any	slabs.c	/^static int slabs_reassign_pick_any(int dst) {$/;"	f	file:
slabs_rebalance_lock	slabs.c	/^static pthread_mutex_t slabs_rebalance_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
slabs_rebalancer_pause	slabs.c	/^void slabs_rebalancer_pause(void) {$/;"	f
slabs_rebalancer_resume	slabs.c	/^void slabs_rebalancer_resume(void) {$/;"	f
slabs_set_storage	slabs.c	/^void slabs_set_storage(void *arg) {$/;"	f
slabs_size	slabs.c	/^unsigned int slabs_size(const int clsid) {$/;"	f
slabs_stats	slabs.c	/^void slabs_stats(ADD_STAT add_stats, void *c) {$/;"	f
sleep	t/lib/MemcachedTest.pm	/^sub sleep {$/;"	s
slen	vendor/mcmc/mcmc.h	/^            size_t slen;$/;"	m	struct:__anon21::__anon22::__anon25
slots	slabs.c	/^    void *slots;           \/* list of item ptrs *\/$/;"	m	struct:__anon100	file:
sock	t/lib/MemcachedTest.pm	/^sub sock {$/;"	s
sock	testapp.c	/^    int sock;$/;"	m	struct:conn	file:
sock_cookie_id	memcached.h	/^    uint32_t sock_cookie_id;$/;"	m	struct:settings
socketpath	memcached.h	/^    char *socketpath;   \/* path to unix socket if using local socket *\/$/;"	m	struct:settings
sof	vendor/lua/src/ltablib.c	237;"	d	file:
solvegoto	vendor/lua/src/lparser.c	/^static void solvegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
solvegotos	vendor/lua/src/lparser.c	/^static int solvegotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
sort	vendor/lua/src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	vendor/lua/src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
source	vendor/lua/src/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState
source	vendor/lua/src/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto
source	vendor/lua/src/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug
space	vendor/lua/src/lobject.c	/^  char space[BUFVFS];  \/* holds last part of the result *\/$/;"	m	struct:BuffFS	file:
spawn_and_wait	timedrun.c	/^static int spawn_and_wait(char **argv)$/;"	f	file:
split_slab_page_into_freelist	slabs.c	/^static void split_slab_page_into_freelist(char *ptr, const unsigned int id) {$/;"	f	file:
src	vendor/lua/src/lstrlib.c	/^  const char *src;  \/* current position *\/$/;"	m	struct:GMatchState	file:
src_end	vendor/lua/src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	vendor/lua/src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	doc/Makefile	/^srcdir = .$/;"	m
srclen	vendor/lua/src/lua.h	/^  size_t srclen;	\/* (S) *\/$/;"	m	struct:lua_Debug
ssl	memcached.h	/^    SSL    *ssl;$/;"	m	struct:conn
ssl	testapp.c	/^    SSL    *ssl;$/;"	m	struct:conn	file:
ssl	thread.c	/^    void    *ssl;$/;"	m	struct:conn_queue_item	file:
ssl_ca_cert	memcached.h	/^    char *ssl_ca_cert; \/* certificate with CAs. *\/$/;"	m	struct:settings
ssl_callback	tls.c	/^void ssl_callback(const SSL *s, int where, int ret) {$/;"	f
ssl_chain_cert	memcached.h	/^    char *ssl_chain_cert; \/* path to the server SSL chain certificate *\/$/;"	m	struct:settings
ssl_ciphers	memcached.h	/^    char *ssl_ciphers; \/* list of SSL ciphers *\/$/;"	m	struct:settings
ssl_ctx	memcached.h	/^    SSL_CTX *ssl_ctx; \/* holds the SSL server context which has the server certificate *\/$/;"	m	struct:settings
ssl_ctx	testapp.c	/^    SSL_CTX   *ssl_ctx;$/;"	m	struct:conn	file:
ssl_ctx_lock	tls.c	/^static pthread_mutex_t ssl_ctx_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
ssl_enabled	memcached.h	/^    bool ssl_enabled; \/* indicates whether SSL is enabled *\/$/;"	m	struct:settings
ssl_enabled	memcached.h	/^    bool ssl_enabled;$/;"	m	struct:conn
ssl_handshake_errors	memcached.h	/^    uint64_t      ssl_handshake_errors; \/* TLS failures at accept\/handshake time *\/$/;"	m	struct:stats
ssl_init	tls.c	/^int ssl_init(void) {$/;"	f
ssl_kernel_tls	memcached.h	/^    bool ssl_kernel_tls; \/* enable server kTLS *\/$/;"	m	struct:settings
ssl_key	memcached.h	/^    char *ssl_key; \/* path to the server key *\/$/;"	m	struct:settings
ssl_keyformat	memcached.h	/^    int ssl_keyformat; \/* key format , default is PEM *\/$/;"	m	struct:settings
ssl_last_cert_refresh_time	memcached.h	/^    rel_time_t ssl_last_cert_refresh_time; \/* time of the last server certificate refresh *\/$/;"	m	struct:settings
ssl_min_version	memcached.h	/^    int ssl_min_version; \/* minimum SSL protocol version to accept *\/$/;"	m	struct:settings
ssl_new_session_callback	tls.c	/^int ssl_new_session_callback(SSL *s, SSL_SESSION *sess) {$/;"	f
ssl_new_sessions	memcached.h	/^    uint64_t      ssl_new_sessions; \/* successfully negotiated new (non-reused) TLS sessions *\/$/;"	m	struct:stats
ssl_proto_text	tls.c	/^const char *ssl_proto_text(int version) {$/;"	f
ssl_read	testapp.c	/^ssize_t ssl_read(struct conn *c, void *buf, size_t count) {$/;"	f
ssl_read	tls.c	/^ssize_t ssl_read(conn *c, void *buf, size_t count) {$/;"	f
ssl_sendmsg	tls.c	/^ssize_t ssl_sendmsg(conn *c, struct msghdr *msg, int flags) {$/;"	f
ssl_session_cache	memcached.h	/^    bool ssl_session_cache; \/* enable SSL server session caching *\/$/;"	m	struct:settings
ssl_verify_mode	memcached.h	/^    int ssl_verify_mode; \/* client certificate verify mode *\/$/;"	m	struct:settings
ssl_wbuf	memcached.h	/^    char   *ssl_wbuf;$/;"	m	struct:__anon110
ssl_wbuf	memcached.h	/^    char   *ssl_wbuf;$/;"	m	struct:conn
ssl_wbuf_size	memcached.h	/^    unsigned int ssl_wbuf_size; \/* size of the write buffer used by ssl_sendmsg method *\/$/;"	m	struct:settings
ssl_write	testapp.c	/^ssize_t ssl_write(struct conn *c, const void *buf, size_t count) {$/;"	f
ssl_write	tls.c	/^ssize_t ssl_write(conn *c, void *buf, size_t count) {$/;"	f
stack	vendor/lua/src/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State
stack_ctx	memcached.h	/^    void *stack_ctx; \/\/ module-specific context to be batch-submitted$/;"	m	struct:io_queue_s
stack_init	vendor/lua/src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stack_last	vendor/lua/src/lstate.h	/^  StkId stack_last;  \/* end of stack (last element + 1) *\/$/;"	m	struct:lua_State
stacked	proxy.h	/^    bool stacked; \/\/ if backend already queued for syscalls.$/;"	m	struct:mcp_backend_s
stackinuse	vendor/lua/src/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
stacksize	vendor/lua/src/lstate.h	142;"	d
start	proxy.h	/^    struct timeval start; \/\/ time this object was created.$/;"	m	struct:mcp_request_s	typeref:struct:mcp_request_s::timeval
start	scripts/memcached.sysv	/^start () {$/;"	f
start_assoc_maintenance_thread	assoc.c	/^int start_assoc_maintenance_thread() {$/;"	f
start_capture	vendor/lua/src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
start_conn_timeout_thread	memcached.c	/^static int start_conn_timeout_thread() {$/;"	f	file:
start_item_crawler_thread	crawler.c	/^int start_item_crawler_thread(void) {$/;"	f
start_logger_thread	logger.c	/^static int start_logger_thread(void) {$/;"	f	file:
start_lru_maintainer_thread	items.c	/^int start_lru_maintainer_thread(void *arg) {$/;"	f
start_memcached_server	testapp.c	/^static enum test_return start_memcached_server(void) {$/;"	f	file:
start_server	testapp.c	/^static pid_t start_server(in_port_t *port_out, bool daemon, int timeout) {$/;"	f	file:
start_slab_maintenance_thread	slabs.c	/^int start_slab_maintenance_thread(void) {$/;"	f
start_storage_compact_thread	storage.c	/^int start_storage_compact_thread(void *arg) {$/;"	f
start_storage_write_thread	storage.c	/^int start_storage_write_thread(void *arg) {$/;"	f
start_time	crawler.h	/^    rel_time_t start_time;$/;"	m	struct:__anon99
start_time	crawler.h	/^    rel_time_t start_time;$/;"	m	struct:crawler_expired_data
startpc	vendor/lua/src/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar
stat	vendor/mcmc/mcmc.h	/^            char *stat;$/;"	m	struct:__anon21::__anon22::__anon25
state	memcached.h	/^    enum conn_states  state;$/;"	m	struct:conn	typeref:enum:conn::conn_states
state	proxy.h	/^    enum mcp_backend_states state; \/\/ readback state machine$/;"	m	struct:mcp_backend_s	typeref:enum:mcp_backend_s::mcp_backend_states
state	vendor/mcmc/mcmc.c	/^    int state;$/;"	m	struct:mcmc_ctx	file:
state_text	memcached.c	/^static const char *state_text(enum conn_states state) {$/;"	f	file:
statement	vendor/lua/src/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
statlist	vendor/lua/src/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
statname	vendor/lua/src/lcorolib.c	/^static const char *const statname[] =$/;"	v	file:
stats	extstore.c	/^    struct extstore_stats stats;$/;"	m	struct:store_engine	typeref:struct:store_engine::extstore_stats	file:
stats	memcached.c	/^struct stats stats;$/;"	v	typeref:struct:stats
stats	memcached.h	/^    struct thread_stats stats;  \/* Stats generated by this thread *\/$/;"	m	struct:__anon110	typeref:struct:__anon110::thread_stats
stats	memcached.h	/^    } stats;$/;"	m	struct:conn	typeref:struct:conn::__anon111
stats	memcached.h	/^struct stats {$/;"	s
stats	t/binary-extstore.t	/^sub stats {$/;"	s
stats	t/binary-sasl.t	/^sub stats {$/;"	s
stats	t/binary.t	/^sub stats {$/;"	s
stats_init	memcached.c	/^static void stats_init(void) {$/;"	f	file:
stats_lock	proxy.h	/^    pthread_mutex_t stats_lock; \/\/ used for rare global counters$/;"	m	struct:__anon102
stats_lock	thread.c	/^static pthread_mutex_t stats_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
stats_mutex	extstore.c	/^    pthread_mutex_t stats_mutex;$/;"	m	struct:store_engine	file:
stats_prefix_clear	stats_prefix.c	/^void stats_prefix_clear(void) {$/;"	f
stats_prefix_dump	stats_prefix.c	/^char *stats_prefix_dump(int *length) {$/;"	f
stats_prefix_find	stats_prefix.c	/^PREFIX_STATS *stats_prefix_find(const char *key, const size_t nkey) {$/;"	f
stats_prefix_init	stats_prefix.c	/^void stats_prefix_init(char delimiter) {$/;"	f
stats_prefix_record_delete	stats_prefix.c	/^void stats_prefix_record_delete(const char *key, const size_t nkey) {$/;"	f
stats_prefix_record_get	stats_prefix.c	/^void stats_prefix_record_get(const char *key, const size_t nkey, const bool is_hit) {$/;"	f
stats_prefix_record_set	stats_prefix.c	/^void stats_prefix_record_set(const char *key, const size_t nkey) {$/;"	f
stats_reset	memcached.c	/^void stats_reset(void) {$/;"	f
stats_sizes_buckets	items.c	/^static int stats_sizes_buckets = 0;$/;"	v	file:
stats_sizes_cas_min	items.c	/^static uint64_t stats_sizes_cas_min = 0;$/;"	v	file:
stats_sizes_hist	items.c	/^static unsigned int *stats_sizes_hist = NULL;$/;"	v	file:
stats_sizes_lock	items.c	/^static pthread_mutex_t stats_sizes_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
stats_state	memcached.c	/^struct stats_state stats_state;$/;"	v	typeref:struct:stats_state
stats_state	memcached.h	/^struct stats_state {$/;"	s
status	logger.h	/^    int status;$/;"	m	struct:logentry_item_store
status	logger.h	/^    int status;$/;"	m	struct:logentry_proxy_req
status	protocol_binary.h	/^            uint16_t status;$/;"	m	struct:__anon67::__anon68
status	proxy.h	/^    int status; \/\/ status code from mcmc_read()$/;"	m	struct:__anon104
status	vendor/lua/src/ldo.c	/^  int status;$/;"	m	struct:CloseP	file:
status	vendor/lua/src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	vendor/lua/src/ldump.c	/^  int status;$/;"	m	struct:__anon26	file:
status	vendor/lua/src/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State
status_flags	vendor/mcmc/mcmc.c	/^    uint32_t status_flags; \/\/ internal only flags.$/;"	m	struct:mcmc_ctx	file:
stepgenfull	vendor/lua/src/lgc.c	/^static void stepgenfull (lua_State *L, global_State *g) {$/;"	f	file:
stop	scripts/memcached.sysv	/^stop () {$/;"	f
stop	t/lib/MemcachedTest.pm	/^sub stop {$/;"	s
stop_assoc_maintenance_thread	assoc.c	/^void stop_assoc_maintenance_thread() {$/;"	f
stop_conn_timeout_thread	memcached.c	/^int stop_conn_timeout_thread(void) {$/;"	f
stop_item_crawler_thread	crawler.c	/^int stop_item_crawler_thread(bool wait) {$/;"	f
stop_logger_thread	logger.c	/^static int stop_logger_thread(void) {$/;"	f	file:
stop_lru_maintainer_thread	items.c	/^int stop_lru_maintainer_thread(void) {$/;"	f
stop_main_loop	memcached.c	/^static int stop_main_loop = NOT_STOP;$/;"	v	file:
stop_memcached_server	testapp.c	/^static enum test_return stop_memcached_server(void) {$/;"	f	file:
stop_reasons	memcached.h	/^enum stop_reasons {$/;"	g
stop_slab_maintenance_thread	slabs.c	/^void stop_slab_maintenance_thread(void) {$/;"	f
stop_threads	thread.c	/^void stop_threads(void) {$/;"	f
storage	crawler.c	/^static void *storage;$/;"	v	file:
storage	memcached.h	/^    void *storage;              \/* data object for storage system *\/$/;"	m	struct:__anon110
storage	slabs.c	/^static void *storage  = NULL;$/;"	v	file:
storage_check_config	storage.c	/^int storage_check_config(void *conf) {$/;"	f
storage_command	testapp.c	/^static off_t storage_command(char*buf,$/;"	f	file:
storage_compact_check	storage.c	/^static int storage_compact_check(void *storage, logger *l,$/;"	f	file:
storage_compact_pause	storage.c	/^void storage_compact_pause(void) {$/;"	f
storage_compact_plock	storage.c	/^static pthread_mutex_t storage_compact_plock;$/;"	v	file:
storage_compact_readback	storage.c	/^static void storage_compact_readback(void *storage, logger *l,$/;"	f	file:
storage_compact_resume	storage.c	/^void storage_compact_resume(void) {$/;"	f
storage_compact_thread	storage.c	/^static void *storage_compact_thread(void *arg) {$/;"	f	file:
storage_compact_tid	storage.c	/^static pthread_t storage_compact_tid;$/;"	v	file:
storage_compact_wrap	storage.c	/^struct storage_compact_wrap {$/;"	s	file:
storage_complete_cb	storage.c	/^void storage_complete_cb(io_queue_t *q) {$/;"	f
storage_conf_parse	storage.c	/^struct extstore_conf_file *storage_conf_parse(char *arg, unsigned int page_size) {$/;"	f
storage_delete	storage.c	/^void storage_delete(void *e, item *it) {$/;"	f
storage_file	storage.c	/^    struct extstore_conf_file *storage_file;$/;"	m	struct:storage_settings	typeref:struct:storage_settings::extstore_conf_file	file:
storage_finalize_cb	storage.c	/^void storage_finalize_cb(io_pending_t *pending) {$/;"	f
storage_get_item	storage.c	/^int storage_get_item(conn *c, item *it, mc_resp *resp) {$/;"	f
storage_init	storage.c	/^void *storage_init(void *conf) {$/;"	f
storage_init_config	storage.c	/^void *storage_init_config(struct settings *s) {$/;"	f
storage_read_config	storage.c	/^int storage_read_config(void *conf, char **subopt) {$/;"	f
storage_settings	storage.c	/^struct storage_settings {$/;"	s	file:
storage_stats	storage.c	/^void storage_stats(ADD_STAT add_stats, conn *c) {$/;"	f
storage_submit_cb	storage.c	/^void storage_submit_cb(io_queue_t *q) {$/;"	f
storage_validate_item	storage.c	/^bool storage_validate_item(void *e, item *it) {$/;"	f
storage_write	storage.c	/^static int storage_write(void *storage, const int clsid, const int item_age) {$/;"	f	file:
storage_write_pause	storage.c	/^void storage_write_pause(void) {$/;"	f
storage_write_plock	storage.c	/^static pthread_mutex_t storage_write_plock;$/;"	v	file:
storage_write_resume	storage.c	/^void storage_write_resume(void) {$/;"	f
storage_write_thread	storage.c	/^static void *storage_write_thread(void *arg) {$/;"	f	file:
storage_write_tid	storage.c	/^static pthread_t storage_write_tid;$/;"	v	file:
store_engine	extstore.c	/^struct store_engine {$/;"	s	file:
store_engine	extstore.c	/^typedef struct store_engine store_engine;$/;"	t	typeref:struct:store_engine	file:
store_io_thread	extstore.c	/^} store_io_thread;$/;"	t	typeref:struct:__anon13	file:
store_item	thread.c	/^enum store_item_type store_item(item *item, int comm, conn* c) {$/;"	f
store_item_type	memcached.h	/^enum store_item_type {$/;"	g
store_maint_thread	extstore.c	/^} store_maint_thread;$/;"	t	typeref:struct:__anon14	file:
store_page	extstore.c	/^} store_page;$/;"	t	typeref:struct:_store_page	file:
str2K	vendor/lua/src/lcode.c	/^static void str2K (FuncState *fs, expdesc *e) {$/;"	f	file:
str_Writer	vendor/lua/src/lstrlib.c	/^struct str_Writer {$/;"	s	file:
str_byte	vendor/lua/src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	vendor/lua/src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	vendor/lua/src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	vendor/lua/src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	vendor/lua/src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	vendor/lua/src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	vendor/lua/src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	vendor/lua/src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	vendor/lua/src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	vendor/lua/src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	vendor/lua/src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_pack	vendor/lua/src/lstrlib.c	/^static int str_pack (lua_State *L) {$/;"	f	file:
str_packsize	vendor/lua/src/lstrlib.c	/^static int str_packsize (lua_State *L) {$/;"	f	file:
str_rep	vendor/lua/src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	vendor/lua/src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	vendor/lua/src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_unpack	vendor/lua/src/lstrlib.c	/^static int str_unpack (lua_State *L) {$/;"	f	file:
str_upper	vendor/lua/src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
strcache	vendor/lua/src/lstate.h	/^  TString *strcache[STRCACHE_N][STRCACHE_M];  \/* cache for strings in API *\/$/;"	m	struct:global_State
stress	t/stress-memcached.pl	/^sub stress {$/;"	s
stringK	vendor/lua/src/lcode.c	/^static int stringK (FuncState *fs, TString *s) {$/;"	f	file:
stringmetamethods	vendor/lua/src/lstrlib.c	/^static const luaL_Reg stringmetamethods[] = {$/;"	v	file:
stringtable	vendor/lua/src/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	vendor/lua/src/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	vendor/lua/src/ldump.c	/^  int strip;$/;"	m	struct:__anon26	file:
stripping	vendor/lua/src/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlib	vendor/lua/src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strt	vendor/lua/src/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State
strval	vendor/lua/src/lparser.h	/^    TString *strval;  \/* for VKSTR *\/$/;"	m	union:expdesc::__anon35
subdir	Makefile	/^subdir = .$/;"	m
subdir	doc/Makefile	/^subdir = doc$/;"	m
subexpr	vendor/lua/src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
submit_cb	memcached.h	/^    io_queue_stack_cb submit_cb; \/\/ callback given a full stack of pending IO's at once.$/;"	m	struct:io_queue_cb_s
submitted	storage.c	/^    bool submitted;$/;"	m	struct:storage_compact_wrap	file:
substate	memcached.h	/^    enum bin_substates substate;$/;"	m	struct:conn	typeref:enum:conn::bin_substates
suffixedexp	vendor/lua/src/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
supports_drop_priv	t/lib/MemcachedTest.pm	/^sub supports_drop_priv {$/;"	s
supports_extstore	t/lib/MemcachedTest.pm	/^sub supports_extstore {$/;"	s
supports_proxy	t/lib/MemcachedTest.pm	/^sub supports_proxy {$/;"	s
supports_sasl	t/lib/MemcachedTest.pm	/^sub supports_sasl {$/;"	s
supports_tls	t/lib/MemcachedTest.pm	/^sub supports_tls {$/;"	s
supports_udp	t/lib/MemcachedTest.pm	/^sub supports_udp {$/;"	s
supports_unix_socket	t/lib/MemcachedTest.pm	/^sub supports_unix_socket {$/;"	s
survival	vendor/lua/src/lstate.h	/^  GCObject *survival;  \/* start of objects that survived one GC cycle *\/$/;"	m	struct:global_State
svalue	vendor/lua/src/lobject.h	394;"	d
swap	crc32c.c	/^static inline uint64_t swap(uint64_t x) {$/;"	f	file:
swap	crc32c.c	428;"	d	file:
swapexps	vendor/lua/src/lcode.c	/^static void swapexps (expdesc *e1, expdesc *e2) {$/;"	f	file:
sweep2old	vendor/lua/src/lgc.c	/^static void sweep2old (lua_State *L, GCObject **p) {$/;"	f	file:
sweepgc	vendor/lua/src/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list *\/$/;"	m	struct:global_State
sweepgen	vendor/lua/src/lgc.c	/^static GCObject **sweepgen (lua_State *L, global_State *g, GCObject **p,$/;"	f	file:
sweeplist	vendor/lua/src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, int countin,$/;"	f	file:
sweepstep	vendor/lua/src/lgc.c	/^static int sweepstep (lua_State *L, global_State *g,$/;"	f	file:
sweeptolive	vendor/lua/src/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p) {$/;"	f	file:
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	doc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
syslib	vendor/lua/src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
t	logger.h	/^    enum logger_watcher_type t; \/* stderr, client, syslog, etc *\/$/;"	m	struct:__anon60	typeref:enum:__anon60::logger_watcher_type
t	proxy.h	/^    } t;$/;"	m	struct:mcp_parser_s	typeref:union:mcp_parser_s::__anon103
t	vendor/lua/src/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState
t	vendor/lua/src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
t	vendor/lua/src/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon35::__anon36
t	vendor/lua/src/lparser.h	/^  int t;  \/* patch list of 'exit when true' *\/$/;"	m	struct:expdesc
tab_funcs	vendor/lua/src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
tablerehash	vendor/lua/src/lstring.c	/^static void tablerehash (TString **vect, int osize, int nsize) {$/;"	f	file:
tag	memcached.h	/^    uint64_t tag; \/* listener stocket tag *\/$/;"	m	struct:conn
tag	proxy.h	/^    uint64_t tag;$/;"	m	struct:proxy_hook_tagged
tag	restart.c	/^    char tag[RESTART_TAG_MAXLEN];$/;"	m	struct:_restart_data_cb	file:
tag_error	vendor/lua/src/lauxlib.c	/^static void tag_error (lua_State *L, int arg, int tag) {$/;"	f	file:
tagcount	proxy.h	/^    int tagcount;$/;"	m	struct:proxy_hook
tagged	proxy.h	/^    struct proxy_hook_tagged *tagged; \/\/ array of possible tagged hooks.$/;"	m	struct:proxy_hook	typeref:struct:proxy_hook::proxy_hook_tagged
tail_repair_time	memcached.h	/^    int tail_repair_time;   \/* LRU tail refcount leak repair time *\/$/;"	m	struct:settings
tailrepairs	items.c	/^    uint64_t tailrepairs;$/;"	m	struct:__anon10	file:
tails	items.c	/^static item *tails[LARGEST_ID];$/;"	v	file:
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | zstd -c $${ZSTD_CLEVEL-$${ZSTD_OPT--19}} >$(distdir).tar.zst$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	doc/Makefile	/^target_alias = $/;"	m
tbc	vendor/lua/src/lobject.h	/^  lu_byte tbc;  \/* true if it represents a to-be-closed variable *\/$/;"	m	struct:UpVal
tbclist	vendor/lua/src/lobject.h	/^  } tbclist;$/;"	m	union:StackValue	typeref:struct:StackValue::__anon50
tbclist	vendor/lua/src/lstate.h	/^  StkId tbclist;  \/* list of to-be-closed variables *\/$/;"	m	struct:lua_State
tconcat	vendor/lua/src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
tcp_keepalive	proxy.h	/^    bool tcp_keepalive;$/;"	m	struct:proxy_tunables
tcp_read	memcached.c	/^ssize_t tcp_read(conn *c, void *buf, size_t count) {$/;"	f
tcp_read	testapp.c	/^ssize_t tcp_read(struct conn *c, void *buf, size_t count) {$/;"	f
tcp_sendmsg	memcached.c	/^ssize_t tcp_sendmsg(conn *c, struct msghdr *msg, int flags) {$/;"	f
tcp_transport	memcached.h	/^    tcp_transport,$/;"	e	enum:network_transport
tcp_write	memcached.c	/^ssize_t tcp_write(conn *c, void *buf, size_t count) {$/;"	f
tcp_write	testapp.c	/^ssize_t tcp_write(struct conn *c, const void *buf, size_t count) {$/;"	f
temp_lru	memcached.h	/^    bool temp_lru; \/* TTL < temporary_ttl uses TEMP_LRU *\/$/;"	m	struct:settings
temporary_ttl	memcached.h	/^    uint32_t temporary_ttl; \/* temporary LRU threshold *\/$/;"	m	struct:settings
test2	vendor/lua/src/liolib.c	/^static int test2 (RN *rn, const char *set) {$/;"	f	file:
testAMode	vendor/lua/src/lopcodes.h	371;"	d
testITMode	vendor/lua/src/lopcodes.h	373;"	d
testMMMode	vendor/lua/src/lopcodes.h	375;"	d
testOTMode	vendor/lua/src/lopcodes.h	374;"	d
testTMode	vendor/lua/src/lopcodes.h	372;"	d
test_binary_add	testapp.c	/^static enum test_return test_binary_add(void) {$/;"	f	file:
test_binary_add_impl	testapp.c	/^static enum test_return test_binary_add_impl(const char *key, uint8_t cmd) {$/;"	f	file:
test_binary_addq	testapp.c	/^static enum test_return test_binary_addq(void) {$/;"	f	file:
test_binary_append	testapp.c	/^static enum test_return test_binary_append(void) {$/;"	f	file:
test_binary_appendq	testapp.c	/^static enum test_return test_binary_appendq(void) {$/;"	f	file:
test_binary_concat_impl	testapp.c	/^static enum test_return test_binary_concat_impl(const char *key, uint8_t cmd) {$/;"	f	file:
test_binary_decr	testapp.c	/^static enum test_return test_binary_decr(void) {$/;"	f	file:
test_binary_decr_impl	testapp.c	/^static enum test_return test_binary_decr_impl(const char* key, uint8_t cmd) {$/;"	f	file:
test_binary_decrq	testapp.c	/^static enum test_return test_binary_decrq(void) {$/;"	f	file:
test_binary_delete	testapp.c	/^static enum test_return test_binary_delete(void) {$/;"	f	file:
test_binary_delete_impl	testapp.c	/^static enum test_return test_binary_delete_impl(const char *key, uint8_t cmd) {$/;"	f	file:
test_binary_deleteq	testapp.c	/^static enum test_return test_binary_deleteq(void) {$/;"	f	file:
test_binary_flush	testapp.c	/^static enum test_return test_binary_flush(void) {$/;"	f	file:
test_binary_flush_impl	testapp.c	/^static enum test_return test_binary_flush_impl(const char *key, uint8_t cmd) {$/;"	f	file:
test_binary_flushq	testapp.c	/^static enum test_return test_binary_flushq(void) {$/;"	f	file:
test_binary_gat	testapp.c	/^static enum test_return test_binary_gat(void) {$/;"	f	file:
test_binary_gatk	testapp.c	/^static enum test_return test_binary_gatk(void) {$/;"	f	file:
test_binary_gatkq	testapp.c	/^static enum test_return test_binary_gatkq(void) {$/;"	f	file:
test_binary_gatq	testapp.c	/^static enum test_return test_binary_gatq(void) {$/;"	f	file:
test_binary_get	testapp.c	/^static enum test_return test_binary_get(void) {$/;"	f	file:
test_binary_get_impl	testapp.c	/^static enum test_return test_binary_get_impl(const char *key, uint8_t cmd) {$/;"	f	file:
test_binary_getk	testapp.c	/^static enum test_return test_binary_getk(void) {$/;"	f	file:
test_binary_getkq	testapp.c	/^static enum test_return test_binary_getkq(void) {$/;"	f	file:
test_binary_getq	testapp.c	/^static enum test_return test_binary_getq(void) {$/;"	f	file:
test_binary_getq_impl	testapp.c	/^static enum test_return test_binary_getq_impl(const char *key, uint8_t cmd) {$/;"	f	file:
test_binary_illegal	testapp.c	/^static enum test_return test_binary_illegal(void) {$/;"	f	file:
test_binary_incr	testapp.c	/^static enum test_return test_binary_incr(void) {$/;"	f	file:
test_binary_incr_impl	testapp.c	/^static enum test_return test_binary_incr_impl(const char* key, uint8_t cmd) {$/;"	f	file:
test_binary_incrq	testapp.c	/^static enum test_return test_binary_incrq(void) {$/;"	f	file:
test_binary_noop	testapp.c	/^static enum test_return test_binary_noop(void) {$/;"	f	file:
test_binary_pipeline_hickup	testapp.c	/^static enum test_return test_binary_pipeline_hickup(void)$/;"	f	file:
test_binary_pipeline_hickup_chunk	testapp.c	/^static enum test_return test_binary_pipeline_hickup_chunk(void *buffer, size_t buffersize) {$/;"	f	file:
test_binary_prepend	testapp.c	/^static enum test_return test_binary_prepend(void) {$/;"	f	file:
test_binary_prependq	testapp.c	/^static enum test_return test_binary_prependq(void) {$/;"	f	file:
test_binary_quit	testapp.c	/^static enum test_return test_binary_quit(void) {$/;"	f	file:
test_binary_quit_impl	testapp.c	/^static enum test_return test_binary_quit_impl(uint8_t cmd) {$/;"	f	file:
test_binary_quitq	testapp.c	/^static enum test_return test_binary_quitq(void) {$/;"	f	file:
test_binary_replace	testapp.c	/^static enum test_return test_binary_replace(void) {$/;"	f	file:
test_binary_replace_impl	testapp.c	/^static enum test_return test_binary_replace_impl(const char* key, uint8_t cmd) {$/;"	f	file:
test_binary_replaceq	testapp.c	/^static enum test_return test_binary_replaceq(void) {$/;"	f	file:
test_binary_set	testapp.c	/^static enum test_return test_binary_set(void) {$/;"	f	file:
test_binary_set_impl	testapp.c	/^static enum test_return test_binary_set_impl(const char *key, uint8_t cmd) {$/;"	f	file:
test_binary_setq	testapp.c	/^static enum test_return test_binary_setq(void) {$/;"	f	file:
test_binary_stat	testapp.c	/^static enum test_return test_binary_stat(void) {$/;"	f	file:
test_binary_version	testapp.c	/^static enum test_return test_binary_version(void) {$/;"	f	file:
test_crc32c	testapp.c	/^static enum test_return test_crc32c(void) {$/;"	f	file:
test_eof	vendor/lua/src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_issue_101	testapp.c	/^static enum test_return test_issue_101(void) {$/;"	f	file:
test_issue_102	testapp.c	/^static enum test_return test_issue_102(void) {$/;"	f	file:
test_issue_161	testapp.c	/^static enum test_return test_issue_161(void)$/;"	f	file:
test_issue_44	testapp.c	/^static enum test_return test_issue_44(void) {$/;"	f	file:
test_issue_92	testapp.c	/^static enum test_return test_issue_92(void) {$/;"	f	file:
test_maxconns	t/maxconns.t	/^sub test_maxconns {$/;"	s
test_return	testapp.c	/^enum test_return { TEST_SKIP, TEST_PASS, TEST_FAIL };$/;"	g	file:
test_safe_strtol	testapp.c	/^static enum test_return test_safe_strtol(void) {$/;"	f	file:
test_safe_strtoll	testapp.c	/^static enum test_return test_safe_strtoll(void) {$/;"	f	file:
test_safe_strtoul	testapp.c	/^static enum test_return test_safe_strtoul(void) {$/;"	f	file:
test_safe_strtoull	testapp.c	/^static enum test_return test_safe_strtoull(void) {$/;"	f	file:
test_stats_prefix_dump	testapp.c	/^static enum test_return test_stats_prefix_dump(void) {$/;"	f	file:
test_stats_prefix_find	testapp.c	/^static enum test_return test_stats_prefix_find(void) {$/;"	f	file:
test_stats_prefix_record_delete	testapp.c	/^static enum test_return test_stats_prefix_record_delete(void) {$/;"	f	file:
test_stats_prefix_record_get	testapp.c	/^static enum test_return test_stats_prefix_record_get(void) {$/;"	f	file:
test_stats_prefix_record_set	testapp.c	/^static enum test_return test_stats_prefix_record_set(void) {$/;"	f	file:
test_then_block	vendor/lua/src/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
test_varargs_macros	configure	/^  test_varargs_macros ();$/;"	f
test_vperror	testapp.c	/^static enum test_return test_vperror(void) {$/;"	f	file:
testapp_LDADD	Makefile	/^testapp_LDADD = $(LDADD)$/;"	m
testapp_OBJECTS	Makefile	/^testapp_OBJECTS = $(am_testapp_OBJECTS)$/;"	m
testapp_SOURCES	Makefile	/^testapp_SOURCES = testapp.c util.c util.h stats_prefix.c stats_prefix.h jenkins_hash.c murmur3_hash.c hash.h cache.c crc32c.c$/;"	m
testbit	vendor/lua/src/lgc.h	67;"	d
testbits	vendor/lua/src/lgc.h	62;"	d
testcase	testapp.c	/^struct testcase {$/;"	s	file:
testcases	testapp.c	/^struct testcase testcases[] = {$/;"	v	typeref:struct:testcase
testnext	vendor/lua/src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testprop	vendor/lua/src/lctype.h	52;"	d
th	vendor/lua/src/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCUnion	typeref:struct:GCUnion::lua_State
thread	memcached.h	/^    LIBEVENT_THREAD *thread; \/* Pointer to the thread object serving this connection *\/$/;"	m	struct:conn
thread	memcached.h	/^    LIBEVENT_THREAD *thread;$/;"	m	struct:_io_pending_t
thread	proxy.h	/^    LIBEVENT_THREAD *thread;$/;"	m	struct:_io_pending_proxy_t
thread	storage.c	/^    LIBEVENT_THREAD *thread;$/;"	m	struct:_io_pending_storage_t	file:
thread_id	memcached.h	/^    pthread_t thread_id;        \/* unique ID of this thread *\/$/;"	m	struct:__anon110
thread_id	proxy.h	/^    pthread_t thread_id;$/;"	m	struct:proxy_event_thread_s
thread_io_queue_add	memcached.c	/^void thread_io_queue_add(LIBEVENT_THREAD *t, int type, void *ctx, io_queue_stack_cb cb, io_queue_stack_cb com_cb, io_queue_cb ret_cb, io_queue_cb fin_cb) {$/;"	f
thread_io_queue_get	memcached.c	/^io_queue_cb_t *thread_io_queue_get(LIBEVENT_THREAD *t, int type) {$/;"	f
thread_libevent_process	thread.c	/^static void thread_libevent_process(evutil_socket_t fd, short which, void *arg) {$/;"	f	file:
thread_stats	memcached.h	/^struct thread_stats {$/;"	s
threadlocal_stats_aggregate	thread.c	/^void threadlocal_stats_aggregate(struct thread_stats *stats) {$/;"	f
threadlocal_stats_reset	thread.c	/^void threadlocal_stats_reset(void) {$/;"	f
threads	thread.c	/^static LIBEVENT_THREAD *threads;$/;"	v	file:
thvalue	vendor/lua/src/lobject.h	253;"	d
time	memcached.h	/^    rel_time_t      time;       \/* least recent access *\/$/;"	m	struct:__anon108
time	memcached.h	/^    rel_time_t      time;       \/* least recent access *\/$/;"	m	struct:_stritem
time_delta	memcached.c	/^    int64_t time_delta;$/;"	m	struct:_mc_meta_data	file:
time_in_listen_disabled_us	memcached.h	/^    uint64_t      time_in_listen_disabled_us;  \/* elapsed time in microseconds while server unable to process new connections *\/$/;"	m	struct:stats
timedrun_LDADD	Makefile	/^timedrun_LDADD = $(LDADD)$/;"	m
timedrun_OBJECTS	Makefile	/^timedrun_OBJECTS = $(am_timedrun_OBJECTS)$/;"	m
timedrun_SOURCES	Makefile	/^timedrun_SOURCES = timedrun.c$/;"	m
timeout_conn	thread.c	/^void timeout_conn(conn *c) {$/;"	f
times5	vendor/lua/src/lmathlib.c	/^static Rand64 times5 (Rand64 i) {$/;"	f	file:
times9	vendor/lua/src/lmathlib.c	/^static Rand64 times9 (Rand64 i) {$/;"	f	file:
tinsert	vendor/lua/src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tmname	vendor/lua/src/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State
tmname	vendor/lua/src/luac.c	/^static TString **tmname;$/;"	v	file:
tmove	vendor/lua/src/ltablib.c	/^static int tmove (lua_State *L) {$/;"	f	file:
tobefnz	vendor/lua/src/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State
tofile	vendor/lua/src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tofinalize	vendor/lua/src/lgc.h	92;"	d
tointeger	vendor/lua/src/lvm.h	62;"	d
tointegerns	vendor/lua/src/lvm.h	68;"	d
token	vendor/lua/src/llex.h	/^  int token;$/;"	m	struct:Token
token_s	proto_text.c	/^typedef struct token_s {$/;"	s	file:
token_t	proto_text.c	/^} token_t;$/;"	t	typeref:struct:token_s	file:
tokenize_command	proto_text.c	/^static size_t tokenize_command(char *command, token_t *tokens, const size_t max_tokens) {$/;"	f	file:
tokens	proxy.h	/^    uint16_t tokens[PARSER_MAX_TOKENS]; \/\/ offsets for start of each token$/;"	m	struct:mcp_parser_s
tokent_ref	proxy.h	/^    int tokent_ref; \/\/ reference to token table if modified.$/;"	m	struct:mcp_request_s
tolstream	vendor/lua/src/liolib.c	158;"	d	file:
tonum	vendor/lua/src/lstrlib.c	/^static int tonum (lua_State *L, int arg) {$/;"	f	file:
tonumber	vendor/lua/src/lvm.h	51;"	d
tonumberns	vendor/lua/src/lvm.h	56;"	d
tonumeral	vendor/lua/src/lcode.c	/^static int tonumeral (const expdesc *e, TValue *v) {$/;"	f	file:
too_big	t/binary-extstore.t	/^sub too_big {$/;"	s
too_big	t/binary-sasl.t	/^sub too_big {$/;"	s
too_big	t/binary.t	/^sub too_big {$/;"	s
top	vendor/lua/src/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo
top	vendor/lua/src/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	doc/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	doc/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	doc/Makefile	/^top_srcdir = ..$/;"	m
toproto	vendor/lua/src/luac.c	141;"	d	file:
tosend	memcached.h	/^    int tosend; \/\/ total bytes to send for this response$/;"	m	struct:_mc_resp
tostore	vendor/lua/src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tostring	vendor/lua/src/lvm.c	618;"	d	file:
tostringbuff	vendor/lua/src/lobject.c	/^static int tostringbuff (TValue *obj, char *buff) {$/;"	f	file:
total	cache.h	/^    int total;$/;"	m	struct:__anon20
totalLen	xxhash.h	/^   XXH64_hash_t totalLen;$/;"	m	struct:XXH3_state_s
total_buckets	proxy_ring_hash.c	/^    unsigned int total_buckets;$/;"	m	struct:__anon98	file:
total_conns	memcached.h	/^    uint64_t      total_conns;$/;"	m	struct:stats
total_items	memcached.h	/^    uint64_t      total_items;$/;"	m	struct:stats
total_len	xxhash.h	/^   XXH64_hash_t total_len;    \/*!< Total length hashed. This is always 64-bit. *\/$/;"	m	struct:XXH64_state_s
total_len_32	xxhash.h	/^   XXH32_hash_t total_len_32; \/*!< Total length hashed, modulo 2^32 *\/$/;"	m	struct:XXH32_state_s
total_pages	slabs.h	/^    long int total_pages;$/;"	m	struct:__anon18
total_prefix_size	stats_prefix.c	/^static int total_prefix_size = 0;$/;"	v	file:
totalbytes	vendor/lua/src/lstate.h	/^  l_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State
touch	t/binary-extstore.t	/^sub touch {$/;"	s
touch	t/binary.t	/^sub touch {$/;"	s
touch_command	testapp.c	/^static off_t touch_command(char* buf,$/;"	f	file:
touserdata	vendor/lua/src/lapi.c	/^static void *touserdata (const TValue *o) {$/;"	f	file:
tpack	vendor/lua/src/ltablib.c	/^static int tpack (lua_State *L) {$/;"	f	file:
transferinfo	vendor/lua/src/lstate.h	/^    } transferinfo;$/;"	m	union:CallInfo::__anon32	typeref:struct:CallInfo::__anon32::__anon33
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	doc/Makefile	/^transform = $(program_transform_name)$/;"	m
transmit	memcached.c	/^static enum transmit_result transmit(conn *c) {$/;"	f	file:
transmit_result	memcached.c	/^enum transmit_result {$/;"	g	file:
transmit_udp	memcached.c	/^static enum transmit_result transmit_udp(conn *c) {$/;"	f	file:
transport	logger.h	/^    int transport;$/;"	m	struct:logentry_conn_event
transport	memcached.h	/^    enum network_transport transport; \/* what transport is used by this connection *\/$/;"	m	struct:conn	typeref:enum:conn::network_transport
transport	thread.c	/^    enum network_transport     transport;$/;"	m	struct:conn_queue_item	typeref:enum:conn_queue_item::network_transport	file:
trap	vendor/lua/src/lstate.h	/^      volatile l_signalT trap;$/;"	m	struct:CallInfo::__anon29::__anon30
traverseCclosure	vendor/lua/src/lgc.c	/^static int traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	vendor/lua/src/lgc.c	/^static int traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverseephemeron	vendor/lua/src/lgc.c	/^static int traverseephemeron (global_State *g, Table *h, int inv) {$/;"	f	file:
traverseproto	vendor/lua/src/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestrongtable	vendor/lua/src/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	vendor/lua/src/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traversethread	vendor/lua/src/lgc.c	/^static int traversethread (global_State *g, lua_State *th) {$/;"	f	file:
traverseudata	vendor/lua/src/lgc.c	/^static int traverseudata (global_State *g, Udata *u) {$/;"	f	file:
traverseweakvalue	vendor/lua/src/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	vendor/lua/src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tremove	vendor/lua/src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trim32	vendor/lua/src/lmathlib.c	374;"	d	file:
trim64	vendor/lua/src/lmathlib.c	300;"	d	file:
true	config.h	209;"	d
try_read_command	memcached.h	/^    int (*try_read_command)(conn *c); \/* pointer for top level input parser *\/$/;"	m	struct:conn
try_read_command_ascii	proto_text.c	/^int try_read_command_ascii(conn *c) {$/;"	f
try_read_command_asciiauth	proto_text.c	/^int try_read_command_asciiauth(conn *c) {$/;"	f
try_read_command_binary	proto_bin.c	/^int try_read_command_binary(conn *c) {$/;"	f
try_read_command_negotiate	memcached.c	/^static int try_read_command_negotiate(conn *c) {$/;"	f	file:
try_read_command_proxy	proto_proxy.c	/^int try_read_command_proxy(conn *c) {$/;"	f
try_read_command_udp	memcached.c	/^static int try_read_command_udp(conn *c) {$/;"	f	file:
try_read_network	memcached.c	/^static enum try_read_result try_read_network(conn *c) {$/;"	f	file:
try_read_result	memcached.c	/^enum try_read_result {$/;"	g	file:
try_read_udp	memcached.c	/^static enum try_read_result try_read_udp(conn *c) {$/;"	f	file:
tryagain	vendor/lua/src/lmem.c	/^static void *tryagain (lua_State *L, void *block,$/;"	f	file:
trymt	vendor/lua/src/lstrlib.c	/^static void trymt (lua_State *L, const char *mtname) {$/;"	f	file:
ts	vendor/lua/src/llex.h	/^  TString *ts;$/;"	m	union:__anon46
ts	vendor/lua/src/lstate.h	/^  struct TString ts;$/;"	m	union:GCUnion	typeref:struct:GCUnion::TString
tsslen	vendor/lua/src/lobject.h	397;"	d
tsvalue	vendor/lua/src/lobject.h	356;"	d
tsvalueraw	vendor/lua/src/lobject.h	354;"	d
ttisCclosure	vendor/lua/src/lobject.h	584;"	d
ttisLclosure	vendor/lua/src/lobject.h	582;"	d
ttisboolean	vendor/lua/src/lobject.h	229;"	d
ttisclosure	vendor/lua/src/lobject.h	585;"	d
ttisfalse	vendor/lua/src/lobject.h	230;"	d
ttisfloat	vendor/lua/src/lobject.h	314;"	d
ttisfulluserdata	vendor/lua/src/lobject.h	421;"	d
ttisfunction	vendor/lua/src/lobject.h	581;"	d
ttisinteger	vendor/lua/src/lobject.h	315;"	d
ttislcf	vendor/lua/src/lobject.h	583;"	d
ttislightuserdata	vendor/lua/src/lobject.h	420;"	d
ttislngstring	vendor/lua/src/lobject.h	352;"	d
ttisnil	vendor/lua/src/lobject.h	180;"	d
ttisnumber	vendor/lua/src/lobject.h	313;"	d
ttisshrstring	vendor/lua/src/lobject.h	351;"	d
ttisstrictnil	vendor/lua/src/lobject.h	184;"	d
ttisstring	vendor/lua/src/lobject.h	350;"	d
ttistable	vendor/lua/src/lobject.h	667;"	d
ttisthread	vendor/lua/src/lobject.h	251;"	d
ttistrue	vendor/lua/src/lobject.h	231;"	d
ttl	logger.h	/^    rel_time_t ttl;$/;"	m	struct:logentry_item_store
ttl_hourplus	crawler.h	/^    uint64_t ttl_hourplus;$/;"	m	struct:__anon99
ttype	vendor/lua/src/lobject.h	85;"	d
ttypename	vendor/lua/src/ltm.h	69;"	d
ttypetag	vendor/lua/src/lobject.h	82;"	d
tunables	proxy.h	/^    struct proxy_tunables tunables; \/\/ NOTE: updates covered by stats_lock$/;"	m	struct:__anon102	typeref:struct:__anon102::proxy_tunables
tunables	proxy.h	/^    struct proxy_tunables tunables; \/\/ periodically copied from main ctx$/;"	m	struct:proxy_event_thread_s	typeref:struct:proxy_event_thread_s::proxy_tunables
tunpack	vendor/lua/src/ltablib.c	/^static int tunpack (lua_State *L) {$/;"	f	file:
tv	logger.h	/^    struct timeval tv; \/* not monotonic! *\/$/;"	m	struct:_logentry	typeref:struct:_logentry::timeval
twoto	vendor/lua/src/lobject.h	777;"	d
twups	vendor/lua/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:global_State	typeref:struct:global_State::lua_State
twups	vendor/lua/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_State
txtToken	vendor/lua/src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	logger.h	/^    unsigned short type;$/;"	m	struct:logentry_proxy_req
type	memcached.h	/^    int type; \/\/ duplicated from io_queue_cb_t$/;"	m	struct:io_queue_s
type	memcached.h	/^    int type;$/;"	m	struct:io_queue_cb_s
type	proxy_await.c	/^    enum mcp_await_e type;$/;"	m	struct:mcp_await_s	typeref:enum:mcp_await_s::mcp_await_e	file:
type	vendor/mcmc/mcmc.h	/^    unsigned short type;$/;"	m	struct:__anon21
u	vendor/lua/src/lobject.h	/^  } u;$/;"	m	struct:TString	typeref:union:TString::__anon51
u	vendor/lua/src/lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon53
u	vendor/lua/src/lobject.h	/^  } u;$/;"	m	union:Node	typeref:struct:Node::NodeKey
u	vendor/lua/src/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon35
u	vendor/lua/src/lstate.h	/^  struct Udata u;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Udata
u	vendor/lua/src/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon29
u	vendor/lua/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	struct:cD	typeref:union:cD::__anon42	file:
u2	vendor/lua/src/lstate.h	/^  } u2;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon32
u32	xxhash.h	/^typedef union { xxh_u32 u32; xxh_u64 u64; } __attribute__((packed)) unalign64;$/;"	m	union:__anon9
u32	xxhash.h	/^typedef union { xxh_u32 u32; } __attribute__((packed)) unalign;$/;"	m	union:__anon6
u64	xxhash.h	/^typedef union { xxh_u32 u32; xxh_u64 u64; } __attribute__((packed)) unalign64;$/;"	m	union:__anon9
u_posrelat	vendor/lua/src/lutf8lib.c	/^static lua_Integer u_posrelat (lua_Integer pos, size_t len) {$/;"	f	file:
uchar	vendor/lua/src/lstrlib.c	40;"	d	file:
ud	vendor/lua/src/lstate.h	/^  void *ud;         \/* auxiliary data to 'frealloc' *\/$/;"	m	struct:global_State
ud_warn	vendor/lua/src/lstate.h	/^  void *ud_warn;         \/* auxiliary data to 'warnf' *\/$/;"	m	struct:global_State
udata	proxy.h	/^    void *udata;$/;"	m	struct:__anon101
udata2finalize	vendor/lua/src/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatamemoffset	vendor/lua/src/lobject.h	477;"	d
udatatypename	vendor/lua/src/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
udp_delete_test	t/udp.t	/^sub udp_delete_test {$/;"	s
udp_get_test	t/udp.t	/^sub udp_get_test {$/;"	s
udp_incr_decr_test	t/udp.t	/^sub udp_incr_decr_test {$/;"	s
udp_sequence	memcached.h	/^    uint16_t    udp_sequence; \/* packet counter when transmitting result *\/$/;"	m	struct:_mc_resp
udp_set_test	t/udp.t	/^sub udp_set_test {$/;"	s
udp_total	memcached.h	/^    uint16_t    udp_total; \/* total number of packets in sequence *\/$/;"	m	struct:_mc_resp
udp_transport	memcached.h	/^    udp_transport$/;"	e	enum:network_transport
udpport	memcached.h	/^    int udpport;$/;"	m	struct:settings
udpport	t/lib/MemcachedTest.pm	/^sub udpport { $_[0]{udpport} }$/;"	s
ulen	authfile.c	/^    size_t ulen;$/;"	m	struct:auth_entry	file:
unalign	xxhash.h	/^typedef union { xxh_u32 u32; } __attribute__((packed)) unalign;$/;"	t	typeref:union:__anon6
unalign64	xxhash.h	/^typedef union { xxh_u32 u32; xxh_u64 u64; } __attribute__((packed)) unalign64;$/;"	t	typeref:union:__anon9
undefgoto	vendor/lua/src/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
unexpected_napi_ids	memcached.h	/^    uint64_t      unexpected_napi_ids;  \/* see doc\/napi_ids.txt *\/$/;"	m	struct:stats
unfetched	memcached.h	/^    uint64_t        unfetched;  \/* items reclaimed unfetched during this crawl. *\/$/;"	m	struct:__anon108
unlikely	memcached.h	1070;"	d
unmakemask	vendor/lua/src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unpackint	vendor/lua/src/lstrlib.c	/^static lua_Integer unpackint (lua_State *L, const char *str,$/;"	f	file:
unroll	vendor/lua/src/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
update_event	memcached.c	/^static bool update_event(conn *c, const int new_flags) {$/;"	f	file:
updatebase	vendor/lua/src/lvm.c	1054;"	d	file:
updater_ts	proxy_network.c	/^struct __kernel_timespec updater_ts = {.tv_sec = 3, .tv_nsec = 0};$/;"	v	typeref:struct:__kernel_timespec
updatestack	vendor/lua/src/lvm.c	1057;"	d	file:
updatetrap	vendor/lua/src/lvm.c	1052;"	d	file:
upisopen	vendor/lua/src/lfunc.h	32;"	d
uplevel	vendor/lua/src/lfunc.h	35;"	d
upv	vendor/lua/src/lstate.h	/^  struct UpVal upv;$/;"	m	union:GCUnion	typeref:struct:GCUnion::UpVal
upval	vendor/lua/src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	vendor/lua/src/ldebug.c	/^static const char *upvalname (const Proto *p, int uv) {$/;"	f	file:
upvals	vendor/lua/src/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure
upvalue	vendor/lua/src/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure
upvalues	vendor/lua/src/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto
ur_clock_event	proxy.h	/^    proxy_event_t ur_clock_event; \/\/ timer for updating event thread data.$/;"	m	struct:proxy_event_thread_s
ur_notify_event	proxy.h	/^    proxy_event_t ur_notify_event; \/\/ listen on eventfd.$/;"	m	struct:proxy_event_thread_s
ur_rd_ev	proxy.h	/^    proxy_event_t ur_rd_ev; \/\/ liburing.$/;"	m	struct:mcp_backend_s
ur_te_ev	proxy.h	/^    proxy_event_t ur_te_ev; \/\/ for timeout handling$/;"	m	struct:mcp_backend_s
ur_wr_ev	proxy.h	/^    proxy_event_t ur_wr_ev; \/\/ need a separate event\/cb for writing\/polling$/;"	m	struct:mcp_backend_s
uriencode	util.c	/^bool uriencode(const char *src, char *dst, const size_t srclen, const size_t dstlen) {$/;"	f
uriencode_init	util.c	/^void uriencode_init(void) {$/;"	f
uriencode_map	util.c	/^static char *uriencode_map[256];$/;"	v	file:
uriencode_str	util.c	/^static char uriencode_str[768];$/;"	v	file:
usage	memcached.c	/^static void usage(void) {$/;"	f	file:
usage	timedrun.c	/^static void usage(void) {$/;"	f	file:
usage	vendor/lua/src/luac.c	/^static void usage(const char* message)$/;"	f	file:
usage_license	memcached.c	/^static void usage_license(void) {$/;"	f	file:
use_cas	memcached.h	/^    bool use_cas;$/;"	m	struct:settings
use_uring	proxy.h	/^    bool use_uring; \/\/ use IO_URING for backend connections.$/;"	m	struct:__anon102
use_uring	proxy.h	/^    bool use_uring;$/;"	m	struct:proxy_event_thread_s
used	memcached.h	/^    int              used;      \/* chunk space used *\/$/;"	m	struct:_strchunk
used	proxy_config.c	/^    size_t used;$/;"	m	struct:_dumpbuf	file:
user	authfile.c	/^    char *user;$/;"	m	struct:auth_entry	file:
user_stats	proxy.h	/^    struct proxy_user_stats user_stats;$/;"	m	struct:__anon102	typeref:struct:__anon102::proxy_user_stats
utf8_decode	vendor/lua/src/lutf8lib.c	/^static const char *utf8_decode (const char *s, utfint *val, int strict) {$/;"	f	file:
utf8esc	vendor/lua/src/llex.c	/^static void utf8esc (LexState *ls) {$/;"	f	file:
utfchar	vendor/lua/src/lutf8lib.c	/^static int utfchar (lua_State *L) {$/;"	f	file:
utfint	vendor/lua/src/lutf8lib.c	/^typedef unsigned int utfint;$/;"	t	file:
utfint	vendor/lua/src/lutf8lib.c	/^typedef unsigned long utfint;$/;"	t	file:
utflen	vendor/lua/src/lutf8lib.c	/^static int utflen (lua_State *L) {$/;"	f	file:
uv	vendor/lua/src/lobject.h	/^  TValue uv;$/;"	m	union:UValue
uv	vendor/lua/src/lobject.h	/^  UValue uv[1];  \/* user values *\/$/;"	m	struct:Udata
uvalue	vendor/lua/src/lobject.h	424;"	d
v	vendor/lua/src/lobject.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal
v	vendor/lua/src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	vendor/lua/src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
v1	xxhash.h	/^   XXH32_hash_t v1;           \/*!< First accumulator lane *\/$/;"	m	struct:XXH32_state_s
v1	xxhash.h	/^   XXH64_hash_t v1;           \/*!< First accumulator lane *\/$/;"	m	struct:XXH64_state_s
v2	xxhash.h	/^   XXH32_hash_t v2;           \/*!< Second accumulator lane *\/$/;"	m	struct:XXH32_state_s
v2	xxhash.h	/^   XXH64_hash_t v2;           \/*!< Second accumulator lane *\/$/;"	m	struct:XXH64_state_s
v3	xxhash.h	/^   XXH32_hash_t v3;           \/*!< Third accumulator lane *\/$/;"	m	struct:XXH32_state_s
v3	xxhash.h	/^   XXH64_hash_t v3;           \/*!< Third accumulator lane *\/$/;"	m	struct:XXH64_state_s
v4	xxhash.h	/^   XXH32_hash_t v4;           \/*!< Fourth accumulator lane *\/$/;"	m	struct:XXH32_state_s
v4	xxhash.h	/^   XXH64_hash_t v4;           \/*!< Fourth accumulator lane *\/$/;"	m	struct:XXH64_state_s
vRB	vendor/lua/src/lvm.c	1043;"	d	file:
vRC	vendor/lua/src/lvm.c	1046;"	d	file:
val	vendor/lua/src/lobject.h	/^  TValue val;$/;"	m	union:StackValue
val_	vendor/lua/src/lobject.h	70;"	d
validate_response_header	testapp.c	/^static void validate_response_header(protocol_binary_response_no_extras *response,$/;"	f	file:
validop	vendor/lua/src/lcode.c	/^static int validop (int op, TValue *v1, TValue *v2) {$/;"	f	file:
valiswhite	vendor/lua/src/lgc.c	83;"	d	file:
valraw	vendor/lua/src/lobject.h	71;"	d
value	proto_text.c	/^    char *value;$/;"	m	struct:token_s	file:
value	proto_text.c	/^    unsigned int value :1;$/;"	m	struct:_meta_flags	file:
value	protocol_binary.h	/^                uint64_t value;$/;"	m	struct:__anon85::__anon86::__anon87
value	vendor/lua/src/lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon53
value	vendor/mcmc/mcmc.h	/^    char *value; \/\/ pointer to start of value in buffer.$/;"	m	struct:__anon21
var	vendor/lua/src/lparser.h	/^    } var;$/;"	m	union:expdesc::__anon35	typeref:struct:expdesc::__anon35::__anon37
varinfo	vendor/lua/src/ldebug.c	/^static const char *varinfo (lua_State *L, const TValue *o) {$/;"	f	file:
varname	vendor/lua/src/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar
vbuf	proxy.h	/^    void *vbuf; \/\/ temporary buffer for holding value lengths.$/;"	m	struct:mcp_parser_s
vd	vendor/lua/src/lparser.h	/^  } vd;$/;"	m	union:Vardesc	typeref:struct:Vardesc::__anon38
verbose	memcached.h	/^    int verbose;$/;"	m	struct:settings
verify_default	memcached.c	/^static void verify_default(const char* param, bool condition) {$/;"	f	file:
version	extstore.c	/^    unsigned int version; \/* global version counter *\/$/;"	m	struct:store_engine	file:
version	extstore.c	/^    unsigned int version;$/;"	m	struct:_store_page	file:
version	extstore.h	/^    uint64_t version;$/;"	m	struct:extstore_page_data
version	t/binary-extstore.t	/^sub version {$/;"	s
version	t/binary-sasl.t	/^sub version {$/;"	s
version	t/binary.t	/^sub version {$/;"	s
vidx	vendor/lua/src/lparser.h	/^      unsigned short vidx;  \/* compiler index (in 'actvar.arr')  *\/$/;"	m	struct:expdesc::__anon35::__anon37
vivify	proto_text.c	/^    unsigned int vivify :1;$/;"	m	struct:_meta_flags	file:
vkisindexed	vendor/lua/src/lparser.h	65;"	d
vkisvar	vendor/lua/src/lparser.h	64;"	d
vlen	proxy.h	/^    int vlen;$/;"	m	struct:mcp_parser_s
vlen	vendor/mcmc/mcmc.h	/^    size_t vlen; \/\/ reslen + vlen is the full length of the response.$/;"	m	struct:__anon21
vlen_read	vendor/mcmc/mcmc.h	/^    size_t vlen_read; \/\/ amount of value that was in supplied buffer.$/;"	m	struct:__anon21
vmbreak	vendor/lua/src/ljumptab.h	10;"	d
vmbreak	vendor/lua/src/ljumptab.h	16;"	d
vmbreak	vendor/lua/src/lvm.c	1126;"	d	file:
vmcase	vendor/lua/src/ljumptab.h	14;"	d
vmcase	vendor/lua/src/ljumptab.h	9;"	d
vmcase	vendor/lua/src/lvm.c	1125;"	d	file:
vmdispatch	vendor/lua/src/ljumptab.h	12;"	d
vmdispatch	vendor/lua/src/ljumptab.h	8;"	d
vmdispatch	vendor/lua/src/lvm.c	1124;"	d	file:
vmfetch	vendor/lua/src/lvm.c	1115;"	d	file:
voidf	vendor/lua/src/loadlib.c	/^typedef void (*voidf)(void);$/;"	t	file:
vperror	util.c	/^void vperror(const char *fmt, ...) {$/;"	f
vslen	vendor/lua/src/lobject.h	400;"	d
wait_ext_flush	t/lib/MemcachedTest.pm	/^sub wait_ext_flush {$/;"	s
wait_for	proxy_await.c	/^    int wait_for;$/;"	m	struct:mcp_await_s	file:
wait_for_early_second	t/expirations.t	/^sub wait_for_early_second {$/;"	s
wait_for_ext	t/binary-extstore.t	/^sub wait_for_ext {$/;"	s
wait_for_process	timedrun.c	/^static int wait_for_process(pid_t pid)$/;"	f	file:
wait_for_thread_registration	thread.c	/^static void wait_for_thread_registration(int nthreads) {$/;"	f	file:
walkall_factory	t/startfile.lua	/^function walkall_factory(pool)$/;"	f
warm_lru_pct	memcached.h	/^    int warm_lru_pct; \/* percentage of slab space for WARM_LRU *\/$/;"	m	struct:settings
warm_max_factor	memcached.h	/^    double warm_max_factor; \/* WARM tail age relative to COLD tail *\/$/;"	m	struct:settings
warnf	vendor/lua/src/lstate.h	/^  lua_WarnFunction warnf;  \/* warning function *\/$/;"	m	struct:global_State
warnfcont	vendor/lua/src/lauxlib.c	/^static void warnfcont (void *ud, const char *message, int tocont) {$/;"	f	file:
warnfoff	vendor/lua/src/lauxlib.c	/^static void warnfoff (void *ud, const char *message, int tocont) {$/;"	f	file:
warnfon	vendor/lua/src/lauxlib.c	/^static void warnfon (void *ud, const char *message, int tocont) {$/;"	f	file:
was_found	logger.h	/^    uint8_t was_found;$/;"	m	struct:logentry_item_get
was_modified	proxy.h	/^    bool was_modified; \/\/ need to rewrite the request$/;"	m	struct:mcp_request_s
watch_enabled	memcached.h	/^    bool watch_enabled; \/* allows watch commands to be dropped *\/$/;"	m	struct:settings
watcher_count	logger.c	/^int watcher_count = 0;$/;"	v
watcher_count	logger.h	/^    uint64_t watcher_count;$/;"	m	struct:logger_stats
watcher_sent	logger.h	/^    uint64_t watcher_sent;$/;"	m	struct:logger_stats
watcher_skipped	logger.h	/^    uint64_t watcher_skipped;$/;"	m	struct:logger_stats
watchers	logger.c	/^logger_watcher *watchers[20];$/;"	v
watchers_pollfds	logger.c	/^struct pollfd watchers_pollfds[20];$/;"	v	typeref:struct:pollfd
wbuf	extstore.c	/^    _store_wbuf *wbuf; \/* currently active wbuf from the stack *\/$/;"	m	struct:_store_page	file:
wbuf	memcached.h	/^    char wbuf[WRITE_BUFFER_SIZE];$/;"	m	struct:_mc_resp
wbuf_count	extstore.h	/^    unsigned int wbuf_count; \/\/ this might get locked to "2 per active page"$/;"	m	struct:extstore_conf
wbuf_new	extstore.c	/^static _store_wbuf *wbuf_new(size_t size) {$/;"	f	file:
wbuf_size	extstore.h	/^    unsigned int wbuf_size; \/\/ must divide cleanly into page_size$/;"	m	struct:extstore_conf
wbuf_stack	extstore.c	/^    _store_wbuf *wbuf_stack; \/* wbuf freelist *\/$/;"	m	struct:store_engine	file:
wbytes	memcached.h	/^    int wbytes; \/\/ bytes to write out of wbuf: might be able to nuke this.$/;"	m	struct:_mc_resp
weak	vendor/lua/src/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State
what	vendor/lua/src/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug
which	memcached.h	/^    short  which;   \/** which events were just triggered *\/$/;"	m	struct:conn
whilestat	vendor/lua/src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
whitelist	vendor/lua/src/lgc.c	/^static void whitelist (global_State *g, GCObject *p) {$/;"	f	file:
window_cur	slab_automove.c	/^    uint32_t window_cur;$/;"	m	struct:__anon57	file:
window_cur	slab_automove_extstore.c	/^    uint32_t window_cur;$/;"	m	struct:__anon15	file:
window_data	slab_automove.c	/^    struct window_data *window_data;$/;"	m	struct:__anon57	typeref:struct:__anon57::window_data	file:
window_data	slab_automove.c	/^struct window_data {$/;"	s	file:
window_data	slab_automove_extstore.c	/^    struct window_data *window_data;$/;"	m	struct:__anon15	typeref:struct:__anon15::window_data	file:
window_data	slab_automove_extstore.c	/^struct window_data {$/;"	s	file:
window_size	slab_automove.c	/^    uint32_t window_size;$/;"	m	struct:__anon57	file:
window_size	slab_automove_extstore.c	/^    uint32_t window_size;$/;"	m	struct:__anon15	file:
window_sum	slab_automove.c	/^static void window_sum(struct window_data *wd, struct window_data *w, uint32_t size) {$/;"	f	file:
window_sum	slab_automove_extstore.c	/^static void window_sum(struct window_data *wd, struct window_data *w,$/;"	f	file:
withvariant	vendor/lua/src/lobject.h	81;"	d
worker_cond	proxy.h	/^    pthread_cond_t worker_cond;$/;"	m	struct:__anon102
worker_done	proxy.h	/^    bool worker_done; \/\/ signal variable for the worker lock\/cond system.$/;"	m	struct:__anon102
worker_dropped	logger.h	/^    uint64_t worker_dropped;$/;"	m	struct:logger_stats
worker_failed	proxy.h	/^    bool worker_failed; \/\/ covered by worker_lock as well.$/;"	m	struct:__anon102
worker_hang_lock	thread.c	/^static pthread_mutex_t worker_hang_lock;$/;"	v	file:
worker_libevent	thread.c	/^static void *worker_libevent(void *arg) {$/;"	f	file:
worker_lock	proxy.h	/^    pthread_mutex_t worker_lock;$/;"	m	struct:__anon102
worker_written	logger.h	/^    uint64_t worker_written;$/;"	m	struct:logger_stats
write	memcached.h	/^    ssize_t (*write)(conn *c, void *buf, size_t count);$/;"	m	struct:conn
write	testapp.c	/^    ssize_t (*write)(struct conn *c, const void *buf, size_t count);$/;"	m	struct:conn	file:
write_and_free	memcached.c	/^void write_and_free(conn *c, char *buf, int bytes) {$/;"	f
write_and_free	memcached.h	/^    void *write_and_free; \/** free this memory after finishing writing *\/$/;"	m	struct:_mc_resp
write_bin_error	proto_bin.c	/^void write_bin_error(conn *c, protocol_binary_response_status err,$/;"	f
write_bin_miss_response	proto_bin.c	/^static void write_bin_miss_response(conn *c, char *key, size_t nkey) {$/;"	f	file:
write_bin_response	proto_bin.c	/^static void write_bin_response(conn *c, void *d, int hlen, int keylen, int dlen) {$/;"	f	file:
write_iovs	proxy.h	/^    struct iovec write_iovs[BE_IOV_MAX]; \/\/ iovs to stage batched writes$/;"	m	struct:mcp_backend_s	typeref:struct:mcp_backend_s::iovec
writer	vendor/lua/src/ldump.c	/^  lua_Writer writer;$/;"	m	struct:__anon26	file:
writer	vendor/lua/src/lstrlib.c	/^static int writer (lua_State *L, const void *b, size_t size, void *ud) {$/;"	f	file:
writer	vendor/lua/src/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:
written	extstore.c	/^    unsigned int written; \/* item offsets can be past written if wbuf not flushed *\/$/;"	m	struct:_store_page	file:
written	logger.h	/^    uint64_t written; \/* entries written to the buffer *\/$/;"	m	struct:_logger
xisspace	util.c	47;"	d	file:
xxh_i64	xxhash.h	/^    typedef int64_t xxh_i64;$/;"	t
xxh_i64	xxhash.h	/^    typedef long long xxh_i64;$/;"	t
xxh_u32	xxhash.h	/^typedef XXH32_hash_t xxh_u32;$/;"	t
xxh_u32x4	xxhash.h	/^typedef __vector unsigned xxh_u32x4;$/;"	t
xxh_u64	xxhash.h	/^typedef XXH64_hash_t xxh_u64;$/;"	t
xxh_u64x2	xxhash.h	/^typedef __vector unsigned long long xxh_u64x2;$/;"	t
xxh_u8	xxhash.h	/^  typedef uint8_t xxh_u8;$/;"	t
xxh_u8	xxhash.h	/^  typedef unsigned char xxh_u8;$/;"	t
xxh_u8x16	xxhash.h	/^typedef __vector unsigned char xxh_u8x16;$/;"	t
yieldable	vendor/lua/src/lstate.h	99;"	d
yindex	vendor/lua/src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
youngcollection	vendor/lua/src/lgc.c	/^static void youngcollection (lua_State *L, global_State *g) {$/;"	f	file:
z	vendor/lua/src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
z	vendor/lua/src/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState
zgetc	vendor/lua/src/lzio.h	20;"	d
